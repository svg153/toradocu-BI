[
  {
    "signature": "EmpiricalDistribution()",
    "name": "EmpiricalDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "EmpiricalDistribution(int binCount)",
    "name": "EmpiricalDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "binCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "binCount"
        },
        "comment": "number of bins. Must be strictly positive.",
        "kind": "PARAM",
        "condition": "args[0]>0"
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [
          "binCount <= 0"
        ],
        "comment": "if binCount <= 0.",
        "kind": "THROWS",
        "condition": "args[0]<=0"
      }
    ]
  },
  {
    "signature": "EmpiricalDistribution(int binCount,org.apache.commons.math3.random.RandomGenerator generator)",
    "name": "EmpiricalDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "binCount"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
          "name": "RandomGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "binCount"
        },
        "comment": "number of bins. Must be strictly positive.",
        "kind": "PARAM",
        "condition": "args[0]>0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
            "name": "RandomGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "random data generator (may be null, resulting in default JDK generator)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [
          "binCount <= 0"
        ],
        "comment": "if binCount <= 0.",
        "kind": "THROWS",
        "condition": "args[0]<=0"
      }
    ]
  },
  {
    "signature": "EmpiricalDistribution(org.apache.commons.math3.random.RandomGenerator generator)",
    "name": "EmpiricalDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
          "name": "RandomGenerator",
          "isArray": false
        },
        "name": "generator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
            "name": "RandomGenerator",
            "isArray": false
          },
          "name": "generator"
        },
        "comment": "random data generator (may be null, resulting in default JDK generator)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "EmpiricalDistribution(int binCount,org.apache.commons.math3.random.RandomDataImpl randomData)",
    "name": "EmpiricalDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "binCount"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomDataImpl",
          "name": "RandomDataImpl",
          "isArray": false
        },
        "name": "randomData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "binCount"
        },
        "comment": "number of bins",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomDataImpl",
            "name": "RandomDataImpl",
            "isArray": false
          },
          "name": "randomData"
        },
        "comment": "random data generator (may be null, resulting in default JDK generator)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "EmpiricalDistribution(org.apache.commons.math3.random.RandomDataImpl randomData)",
    "name": "EmpiricalDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomDataImpl",
          "name": "RandomDataImpl",
          "isArray": false
        },
        "name": "randomData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomDataImpl",
            "name": "RandomDataImpl",
            "isArray": false
          },
          "name": "randomData"
        },
        "comment": "random data generator (may be null, resulting in default JDK generator)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "load(double[] in)",
    "name": "load",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "in"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "in"
        },
        "comment": "the input data array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if in is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "load(java.net.URL url)",
    "name": "load",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.net.URL",
          "name": "URL",
          "isArray": false
        },
        "name": "url"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.net.URL",
            "name": "URL",
            "isArray": false
          },
          "name": "url"
        },
        "comment": "url of the input file",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an IO error occurs",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if url is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.ZeroException",
          "name": "ZeroException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if URL contains no data",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "load(java.io.File file)",
    "name": "load",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "the input file",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an IO error occurs",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if file is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getNextValue()",
    "name": "getNextValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the random value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the distribution has not been loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getSampleStats()",
    "name": "getSampleStats",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StatisticalSummary",
      "name": "StatisticalSummary",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the sample statistics",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.sample())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the distribution has not been loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getBinCount()",
    "name": "getBinCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of bins.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBinStats()",
    "name": "getBinStats",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "List of bin statistics.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUpperBounds()",
    "name": "getUpperBounds",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "array of bin upper bounds",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGeneratorUpperBounds()",
    "name": "getGeneratorUpperBounds",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "array of upper bounds of subintervals used in data generation",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "load"
        ],
        "comment": "unless a load method has been called beforehand.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isLoaded()",
    "name": "isLoaded",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the distribution has been loaded",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reSeed(long seed)",
    "name": "reSeed",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "seed"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "seed"
        },
        "comment": "random generator seed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "probability(double x)",
    "name": "probability",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "density(double x)",
    "name": "density",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cumulativeProbability(double x)",
    "name": "cumulativeProbability",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inverseCumulativeProbability(double p)",
    "name": "inverseCumulativeProbability",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumericalMean()",
    "name": "getNumericalMean",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumericalVariance()",
    "name": "getNumericalVariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSupportLowerBound()",
    "name": "getSupportLowerBound",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSupportUpperBound()",
    "name": "getSupportUpperBound",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSupportLowerBoundInclusive()",
    "name": "isSupportLowerBoundInclusive",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSupportUpperBoundInclusive()",
    "name": "isSupportUpperBoundInclusive",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSupportConnected()",
    "name": "isSupportConnected",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reseedRandomGenerator(long seed)",
    "name": "reseedRandomGenerator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "seed"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics bStats)",
    "name": "getKernel",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.random.EmpiricalDistribution",
      "name": "EmpiricalDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.random.EmpiricalDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.distribution.RealDistribution",
      "name": "RealDistribution",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.SummaryStatistics",
          "name": "SummaryStatistics",
          "isArray": false
        },
        "name": "bStats"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.SummaryStatistics",
            "name": "SummaryStatistics",
            "isArray": false
          },
          "name": "bStats"
        },
        "comment": "summary statistics for the bin",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "within-bin kernel parameterized by bStats",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]