[
  {
    "signature": "Quaternion(double a,double b,double c,double d)",
    "name": "Quaternion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "c"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "Scalar component.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "First vector component.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "Second vector component.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "Third vector component.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Quaternion(double scalar,double[] v)",
    "name": "Quaternion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "scalar"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "scalar"
        },
        "comment": "Scalar part of the quaternion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "v"
        },
        "comment": "Components of the vector part of the quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array length is not 3.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "Quaternion(double[] v)",
    "name": "Quaternion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "v"
        },
        "comment": "Components of the vector part of the pure quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getConjugate()",
    "name": "getConjugate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the conjugate quaternion",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "multiply(org.apache.commons.math3.complex.Quaternion q1,org.apache.commons.math3.complex.Quaternion q2)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q1"
        },
        "comment": "First quaternion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q2"
        },
        "comment": "Second quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the product q1 and q2, in that order.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "multiply(org.apache.commons.math3.complex.Quaternion q)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the product of this instance with q, in that order.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "add(org.apache.commons.math3.complex.Quaternion q1,org.apache.commons.math3.complex.Quaternion q2)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q1"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q2"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the sum of q1 and q2.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "add(org.apache.commons.math3.complex.Quaternion q)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the sum of this instance and q",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "subtract(org.apache.commons.math3.complex.Quaternion q1,org.apache.commons.math3.complex.Quaternion q2)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q1"
        },
        "comment": "First Quaternion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q2"
        },
        "comment": "Second quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the difference between q1 and q2.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "subtract(org.apache.commons.math3.complex.Quaternion q)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the difference between this instance and q.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "dotProduct(org.apache.commons.math3.complex.Quaternion q1,org.apache.commons.math3.complex.Quaternion q2)",
    "name": "dotProduct",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q1"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q2"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the dot product of q1 and q2.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "dotProduct(org.apache.commons.math3.complex.Quaternion q)",
    "name": "dotProduct",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "Quaternion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the dot product of this instance and q.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "getNorm()",
    "name": "getNorm",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the norm.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "normalize()",
    "name": "normalize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a normalized quaternion.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.ZeroException",
          "name": "ZeroException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the norm of the quaternion is zero.",
        "kind": "THROWS",
        "condition": "target==0"
      }
    ]
  },
  {
    "signature": "equals(java.lang.Object other)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(org.apache.commons.math3.complex.Quaternion q,double eps)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
          "name": "Quaternion",
          "isArray": false
        },
        "name": "q"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "eps"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
            "name": "Quaternion",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "Quaternion with which to compare the current quaternion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "eps"
        },
        "comment": "Tolerance.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the each of the components are equal within the allowed absolute error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isUnitQuaternion(double eps)",
    "name": "isUnitQuaternion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "eps"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "eps"
        },
        "comment": "Tolerance (absolute error).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the norm is 1 within the given tolerance, false otherwise",
      "kind": "RETURN",
      "condition": "target.getNorm()==1 ? result == true : result == false"
    },
    "throwsTags": []
  },
  {
    "signature": "isPureQuaternion(double eps)",
    "name": "isPureQuaternion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "eps"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "eps"
        },
        "comment": "Tolerance (absolute error).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the scalar part of the quaternion is zero.",
      "kind": "RETURN",
      "condition": "target==0 ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "getPositivePolarForm()",
    "name": "getPositivePolarForm",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the unit quaternion with positive scalar part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInverse()",
    "name": "getInverse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the inverse.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.ZeroException",
          "name": "ZeroException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the norm (squared) of the quaternion is zero.",
        "kind": "THROWS",
        "condition": "target==0"
      }
    ]
  },
  {
    "signature": "getQ0()",
    "name": "getQ0",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the scalar part.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getScalarPart())"
    },
    "throwsTags": []
  },
  {
    "signature": "getQ1()",
    "name": "getQ1",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the first component of the vector part.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "getQ2()",
    "name": "getQ2",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the second component of the vector part.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "getQ3()",
    "name": "getQ3",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the third component of the vector part.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "getScalarPart()",
    "name": "getScalarPart",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the scalar part.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "getVectorPart()",
    "name": "getVectorPart",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the vector part.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "multiply(double alpha)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "alpha"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "alpha"
        },
        "comment": "Scalar factor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a scaled quaternion.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.I)"
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.Quaternion",
      "name": "Quaternion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.Quaternion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]