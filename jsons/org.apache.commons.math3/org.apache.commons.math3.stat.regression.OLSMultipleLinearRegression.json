[
  {
    "signature": "OLSMultipleLinearRegression()",
    "name": "OLSMultipleLinearRegression",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "OLSMultipleLinearRegression(double threshold)",
    "name": "OLSMultipleLinearRegression",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "threshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "threshold"
        },
        "comment": "the singularity threshold",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "newSampleData(double[] y,double[][] x)",
    "name": "newSampleData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "y"
        },
        "comment": "the [n,1] array representing the y sample",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "x"
        },
        "comment": "the [n,k] array representing the x sample",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the x and y array data are not compatible for the regression",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "newSampleData(double[] data,int nobs,int nvars)",
    "name": "newSampleData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "nobs"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "nvars"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "calculateHat()",
    "name": "calculateHat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hat matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "newSampleData"
        ],
        "comment": "unless method newSampleData has been called beforehand.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "calculateTotalSumOfSquares()",
    "name": "calculateTotalSumOfSquares",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "SSTO - the total sum of squares",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the sample has not been set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "calculateResidualSumOfSquares()",
    "name": "calculateResidualSumOfSquares",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "residual sum of squares",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the design matrix is singular",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the data for the model have not been loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "calculateRSquared()",
    "name": "calculateRSquared",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "R-square statistic",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the sample has not been set",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the design matrix is singular",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "calculateAdjustedRSquared()",
    "name": "calculateAdjustedRSquared",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "adjusted R-Squared statistic",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the sample has not been set",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the design matrix is singular",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "newXSampleData(double[][] x)",
    "name": "newXSampleData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "x"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "calculateBeta()",
    "name": "calculateBeta",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealVector",
      "name": "RealVector",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "beta",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the design matrix is singular",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the data for the model have not been loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "calculateBetaVariance()",
    "name": "calculateBetaVariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
      "name": "OLSMultipleLinearRegression",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The beta variance-covariance matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the design matrix is singular",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the data for the model have not been loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]