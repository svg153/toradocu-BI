[
  {
    "signature": "logGamma(double x)",
    "name": "logGamma",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value of log(Gamma(x)), Double.NaN if x <= 0.0.",
      "kind": "RETURN",
      "condition": "args[0]<=0.0 ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "regularizedGammaP(double a,double x)",
    "name": "regularizedGammaP",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "Parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the regularized gamma function P(a, x).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the algorithm fails to converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "regularizedGammaP(double a,double x,double epsilon,int maxIterations)",
    "name": "regularizedGammaP",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "epsilon"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the a parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "epsilon"
        },
        "comment": "When the absolute value of the nth item in the series is less than epsilon the approximation ceases to calculate further elements in the series.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxIterations"
        },
        "comment": "Maximum number of \"iterations\" to complete.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the regularized gamma function P(a, x)",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the algorithm fails to converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "regularizedGammaQ(double a,double x)",
    "name": "regularizedGammaQ",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the a parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the regularized gamma function Q(a, x)",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the algorithm fails to converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "regularizedGammaQ(double a,double x,double epsilon,int maxIterations)",
    "name": "regularizedGammaQ",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "epsilon"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the a parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "epsilon"
        },
        "comment": "When the absolute value of the nth item in the series is less than epsilon the approximation ceases to calculate further elements in the series.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxIterations"
        },
        "comment": "Maximum number of \"iterations\" to complete.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the regularized gamma function P(a, x)",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the algorithm fails to converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "digamma(double x)",
    "name": "digamma",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "digamma(x) to within 10-8 relative or absolute error whichever is smaller.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "trigamma(double x)",
    "name": "trigamma",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "trigamma(x) to within 10-8 relative or absolute error whichever is smaller",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lanczos(double x)",
    "name": "lanczos",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Lanczos approximation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "invGamma1pm1(double x)",
    "name": "invGamma1pm1",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value of 1.0 / Gamma(1.0 + x) - 1.0.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "x < -0.5"
        ],
        "comment": "if x < -0.5",
        "kind": "THROWS",
        "condition": "args[0]<-0.5"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooLargeException",
          "name": "NumberIsTooLargeException",
          "isArray": false
        },
        "codeTags": [
          "x > 1.5"
        ],
        "comment": "if x > 1.5",
        "kind": "THROWS",
        "condition": "args[0]>1.5"
      }
    ]
  },
  {
    "signature": "logGamma1p(double x)",
    "name": "logGamma1p",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value of log(Gamma(1 + x)).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "x < -0.5"
        ],
        "comment": "if x < -0.5.",
        "kind": "THROWS",
        "condition": "args[0]<-0.5"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooLargeException",
          "name": "NumberIsTooLargeException",
          "isArray": false
        },
        "codeTags": [
          "x > 1.5"
        ],
        "comment": "if x > 1.5.",
        "kind": "THROWS",
        "condition": "args[0]>1.5"
      }
    ]
  },
  {
    "signature": "gamma(double x)",
    "name": "gamma",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.special.Gamma",
      "name": "Gamma",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.special.Gamma",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Argument.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value of Gamma(x).",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  }
]