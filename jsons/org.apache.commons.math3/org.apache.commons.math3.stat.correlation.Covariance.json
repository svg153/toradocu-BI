[
  {
    "signature": "Covariance()",
    "name": "Covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "Covariance(double[][] data,boolean biasCorrected)",
    "name": "Covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "biasCorrected"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "data"
        },
        "comment": "rectangular array with columns representing covariates",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "biasCorrected"
        },
        "comment": "true means covariances are bias-corrected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input data array is not rectangular with at least two rows and one column.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input data array is not rectangular with at least one row and one column.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "Covariance(double[][] data)",
    "name": "Covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "data"
        },
        "comment": "rectangular array with columns representing covariates",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input data array is not rectangular with at least two rows and one column.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input data array is not rectangular with at least one row and one column.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "Covariance(org.apache.commons.math3.linear.RealMatrix matrix,boolean biasCorrected)",
    "name": "Covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "biasCorrected"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "matrix with columns representing covariates",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "biasCorrected"
        },
        "comment": "true means covariances are bias-corrected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input matrix does not have at least two rows and one column",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "Covariance(org.apache.commons.math3.linear.RealMatrix matrix)",
    "name": "Covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "matrix with columns representing covariates",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input matrix does not have at least two rows and one column",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getCovarianceMatrix()",
    "name": "getCovarianceMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "covariance matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getN()",
    "name": "getN",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "number of observations",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "computeCovarianceMatrix(org.apache.commons.math3.linear.RealMatrix matrix,boolean biasCorrected)",
    "name": "computeCovarianceMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "biasCorrected"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "input matrix (must have at least one column and two rows)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "biasCorrected"
        },
        "comment": "determines whether or not covariance estimates are bias-corrected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "covariance matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the matrix does not contain sufficient data",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeCovarianceMatrix(org.apache.commons.math3.linear.RealMatrix matrix)",
    "name": "computeCovarianceMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "input matrix (must have at least one column and two rows)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "covariance matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if matrix does not contain sufficient data",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeCovarianceMatrix(double[][] data,boolean biasCorrected)",
    "name": "computeCovarianceMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "biasCorrected"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "data"
        },
        "comment": "input array (must have at least one column and two rows)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "biasCorrected"
        },
        "comment": "determines whether or not covariance estimates are bias-corrected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "covariance matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the data array does not contain sufficient data",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input data array is not rectangular with at least one row and one column.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeCovarianceMatrix(double[][] data)",
    "name": "computeCovarianceMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "data"
        },
        "comment": "input array (must have at least one column and two rows)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "covariance matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the data array does not contain sufficient data",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the input data array is not rectangular with at least one row and one column.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "covariance(double[] xArray,double[] yArray,boolean biasCorrected)",
    "name": "covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "xArray"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "yArray"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "biasCorrected"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "xArray"
        },
        "comment": "first data array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "yArray"
        },
        "comment": "second data array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "biasCorrected"
        },
        "comment": "if true, returned value will be bias-corrected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "returns the covariance for the two arrays",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrays lengths do not match or there is insufficient data",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "covariance(double[] xArray,double[] yArray)",
    "name": "covariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.correlation.Covariance",
      "name": "Covariance",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.correlation.Covariance",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "xArray"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "yArray"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "xArray"
        },
        "comment": "first data array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "yArray"
        },
        "comment": "second data array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "returns the covariance for the two arrays",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrays lengths do not match or there is insufficient data",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]