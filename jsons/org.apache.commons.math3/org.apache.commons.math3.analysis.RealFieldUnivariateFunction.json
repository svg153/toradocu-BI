[
  {
    "signature": "value(org.apache.commons.math3.RealFieldElement x)",
    "name": "value",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.RealFieldUnivariateFunction",
      "name": "RealFieldUnivariateFunction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.RealFieldUnivariateFunction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "Point at which the function value should be computed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value of the function.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "IllegalArgumentException"
        ],
        "comment": "when the activated method itself can ascertain that a precondition, specified in the API expressed at the level of the activated method, has been violated. When Commons Math throws an IllegalArgumentException, it is usually the consequence of checking the actual parameters passed to the method.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]