[
  {
    "signature": "Vector3DFormat()",
    "name": "Vector3DFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "Vector3DFormat(java.text.NumberFormat format)",
    "name": "Vector3DFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "format"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "format"
        },
        "comment": "the custom format for components.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Vector3DFormat(java.lang.String prefix,java.lang.String suffix,java.lang.String separator)",
    "name": "Vector3DFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "suffix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "prefix"
        },
        "comment": "prefix to use instead of the default \"{\"",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "suffix"
        },
        "comment": "suffix to use instead of the default \"}\"",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "separator to use instead of the default \"; \"",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Vector3DFormat(java.lang.String prefix,java.lang.String suffix,java.lang.String separator,java.text.NumberFormat format)",
    "name": "Vector3DFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "suffix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      },
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "format"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "prefix"
        },
        "comment": "prefix to use instead of the default \"{\"",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "suffix"
        },
        "comment": "suffix to use instead of the default \"}\"",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "separator to use instead of the default \"; \"",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "format"
        },
        "comment": "the custom format for components.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getInstance()",
    "name": "getInstance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the default 3D vector format.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInstance(java.util.Locale locale)",
    "name": "getInstance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the specific locale used by the format.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the 3D vector format specific to the given locale.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "format(org.apache.commons.math3.geometry.Vector vector,java.lang.StringBuffer toAppendTo,java.text.FieldPosition pos)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.StringBuffer",
      "name": "StringBuffer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "vector"
      },
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "toAppendTo"
      },
      {
        "type": {
          "qualifiedName": "java.text.FieldPosition",
          "name": "FieldPosition",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Vector",
            "name": "Vector",
            "isArray": false
          },
          "name": "vector"
        },
        "comment": "the object to format.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "toAppendTo"
        },
        "comment": "where the text is to be appended",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.FieldPosition",
            "name": "FieldPosition",
            "isArray": false
          },
          "name": "pos"
        },
        "comment": "On input: an alignment field, if desired. On output: the offsets of the alignment field",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value passed in as toAppendTo.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String source)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "Vector3D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "source"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the string to parse",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the parsed Vector3D object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathParseException",
          "name": "MathParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the beginning of the specified string cannot be parsed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parse(java.lang.String source,java.text.ParsePosition pos)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
      "name": "Vector3DFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "Vector3D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "java.text.ParsePosition",
          "name": "ParsePosition",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the string to parse",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.ParsePosition",
            "name": "ParsePosition",
            "isArray": false
          },
          "name": "pos"
        },
        "comment": "input/ouput parsing parameter.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the parsed Vector3D object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]