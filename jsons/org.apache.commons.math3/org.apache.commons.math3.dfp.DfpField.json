[
  {
    "signature": "DfpField(int decimalDigits)",
    "name": "DfpField",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "decimalDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "decimalDigits"
        },
        "comment": "minimal number of decimal digits.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRadixDigits()",
    "name": "getRadixDigits",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "number of radix digits",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "setRoundingMode(org.apache.commons.math3.dfp.DfpField.RoundingMode mode)",
    "name": "setRoundingMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.DfpField.RoundingMode",
          "name": "RoundingMode",
          "isArray": false
        },
        "name": "mode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.DfpField.RoundingMode",
            "name": "RoundingMode",
            "isArray": false
          },
          "name": "mode"
        },
        "comment": "desired rounding mode Note that the rounding mode is common to all Dfp instances belonging to the current DfpField in the system and will affect all future calculations.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRoundingMode()",
    "name": "getRoundingMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField.RoundingMode",
      "name": "RoundingMode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "current rounding mode",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIEEEFlags()",
    "name": "getIEEEFlags",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "IEEE 854 status flags",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clearIEEEFlags()",
    "name": "clearIEEEFlags",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setIEEEFlags(int flags)",
    "name": "setIEEEFlags",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "flags"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "flags"
        },
        "comment": "desired value for the flags",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setIEEEFlagsBits(int bits)",
    "name": "setIEEEFlagsBits",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "bits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "bits"
        },
        "comment": "bits to set",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "newDfp()",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new Dfp with a value of 0",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(byte x)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "value to convert to an instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Dfp with the same value as x",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(int x)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "value to convert to an instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Dfp with the same value as x",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(long x)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "value to convert to an instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Dfp with the same value as x",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(double x)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "value to convert to an instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Dfp with the same value as x",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(org.apache.commons.math3.dfp.Dfp d)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "instance to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Dfp with the same value as d",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(java.lang.String s)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "s"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "s"
        },
        "comment": "string representation of the instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Dfp parsed from specified string",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "newDfp(byte sign,byte nans)",
    "name": "newDfp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "sign"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "nans"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "sign"
        },
        "comment": "sign of the Dfp to create",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "nans"
        },
        "comment": "code of the value, must be one of Dfp.INFINITE, Dfp.SNAN, Dfp.QNAN",
        "kind": "PARAM",
        "condition": "args[1]==1"
      }
    ],
    "returnTag": {
      "comment": "a new Dfp with a non-finite value",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "getZero()",
    "name": "getZero",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value 0",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "getOne()",
    "name": "getOne",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value 1",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "getRuntimeClass()",
    "name": "getRuntimeClass",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Class",
      "name": "Class",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTwo()",
    "name": "getTwo",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value 2",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "getSqr2()",
    "name": "getSqr2",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value √2",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSqr2Split()",
    "name": "getSqr2Split",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp[]",
      "name": "Dfp[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
        "name": "Dfp",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value √2 split in two pieces",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSqr2Reciprocal()",
    "name": "getSqr2Reciprocal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value √2 / 2",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSqr3()",
    "name": "getSqr3",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value √3",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSqr3Reciprocal()",
    "name": "getSqr3Reciprocal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value √3 / 3",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPi()",
    "name": "getPi",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value π",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPiSplit()",
    "name": "getPiSplit",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp[]",
      "name": "Dfp[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
        "name": "Dfp",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value π split in two pieces",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getE()",
    "name": "getE",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value e",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getESplit()",
    "name": "getESplit",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp[]",
      "name": "Dfp[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
        "name": "Dfp",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value e split in two pieces",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLn2()",
    "name": "getLn2",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value ln(2)",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "getLn2Split()",
    "name": "getLn2Split",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp[]",
      "name": "Dfp[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
        "name": "Dfp",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value ln(2) split in two pieces",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLn5()",
    "name": "getLn5",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value ln(5)",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "getLn5Split()",
    "name": "getLn5Split",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp[]",
      "name": "Dfp[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
        "name": "Dfp",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value ln(5) split in two pieces",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLn10()",
    "name": "getLn10",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Dfp with value ln(10)",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getE())"
    },
    "throwsTags": []
  },
  {
    "signature": "computeExp(org.apache.commons.math3.dfp.Dfp a,org.apache.commons.math3.dfp.Dfp one)",
    "name": "computeExp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "one"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "number for which we want the exponential",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "one"
        },
        "comment": "constant with value 1 at desired precision",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "exp(a)",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "computeLn(org.apache.commons.math3.dfp.Dfp a,org.apache.commons.math3.dfp.Dfp one,org.apache.commons.math3.dfp.Dfp two)",
    "name": "computeLn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.DfpField",
      "name": "DfpField",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.DfpField",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "one"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "two"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "number for which we want the exponential",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "one"
        },
        "comment": "constant with value 1 at desired precision",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "two"
        },
        "comment": "constant with value 2 at desired precision",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "ln(a)",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getLn2())"
    },
    "throwsTags": []
  }
]