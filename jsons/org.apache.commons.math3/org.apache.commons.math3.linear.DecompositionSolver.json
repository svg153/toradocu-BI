[
  {
    "signature": "solve(org.apache.commons.math3.linear.RealVector b)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.DecompositionSolver",
      "name": "DecompositionSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.DecompositionSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealVector",
      "name": "RealVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealVector",
          "name": "RealVector",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealVector",
            "name": "RealVector",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "right-hand side of the equation A × X = B",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a vector X that minimizes the two norm of A × X - B",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the matrices dimensions do not match.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the decomposed matrix is singular.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "solve(org.apache.commons.math3.linear.RealMatrix b)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.DecompositionSolver",
      "name": "DecompositionSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.DecompositionSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "right-hand side of the equation A × X = B",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a matrix X that minimizes the two norm of A × X - B",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the matrices dimensions do not match.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the decomposed matrix is singular.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isNonSingular()",
    "name": "isNonSingular",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.DecompositionSolver",
      "name": "DecompositionSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.DecompositionSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the decomposed matrix is non-singular.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInverse()",
    "name": "getInverse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.DecompositionSolver",
      "name": "DecompositionSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.DecompositionSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "pseudo-inverse matrix (which is the inverse, if it exists), if the decomposition can pseudo-invert the decomposed matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the decomposed matrix is singular and the decomposition can not compute a pseudo-inverse",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]