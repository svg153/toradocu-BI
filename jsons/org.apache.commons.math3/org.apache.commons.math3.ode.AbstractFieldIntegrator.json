[
  {
    "signature": "AbstractFieldIntegrator(org.apache.commons.math3.Field field,java.lang.String name)",
    "name": "AbstractFieldIntegrator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.Field",
            "name": "Field",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "field to which the time and state vector elements belong",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the method",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getField()",
    "name": "getField",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.Field",
      "name": "Field",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "field to which state vector elements belong",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getName()",
    "name": "getName",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addStepHandler(org.apache.commons.math3.ode.sampling.FieldStepHandler handler)",
    "name": "addStepHandler",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.sampling.FieldStepHandler",
          "name": "FieldStepHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getStepHandlers()",
    "name": "getStepHandlers",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clearStepHandlers()",
    "name": "clearStepHandlers",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addEventHandler(org.apache.commons.math3.ode.events.FieldEventHandler handler,double maxCheckInterval,double convergence,int maxIterationCount)",
    "name": "addEventHandler",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.events.FieldEventHandler",
          "name": "FieldEventHandler",
          "isArray": false
        },
        "name": "handler"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxCheckInterval"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "convergence"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterationCount"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addEventHandler(org.apache.commons.math3.ode.events.FieldEventHandler handler,double maxCheckInterval,double convergence,int maxIterationCount,org.apache.commons.math3.analysis.solvers.BracketedRealFieldUnivariateSolver solver)",
    "name": "addEventHandler",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.events.FieldEventHandler",
          "name": "FieldEventHandler",
          "isArray": false
        },
        "name": "handler"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "maxCheckInterval"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "convergence"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterationCount"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.solvers.BracketedRealFieldUnivariateSolver",
          "name": "BracketedRealFieldUnivariateSolver",
          "isArray": false
        },
        "name": "solver"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEventHandlers()",
    "name": "getEventHandlers",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clearEventHandlers()",
    "name": "clearEventHandlers",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentStepStart()",
    "name": "getCurrentStepStart",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
      "name": "FieldODEStateAndDerivative",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentSignedStepsize()",
    "name": "getCurrentSignedStepsize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMaxEvaluations(int maxEvaluations)",
    "name": "setMaxEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEvaluations"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMaxEvaluations()",
    "name": "getMaxEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEvaluations()",
    "name": "getEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "initIntegration(org.apache.commons.math3.ode.FieldExpandableODE eqn,org.apache.commons.math3.RealFieldElement t0,org.apache.commons.math3.RealFieldElement[] y0,org.apache.commons.math3.RealFieldElement t)",
    "name": "initIntegration",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
      "name": "FieldODEStateAndDerivative",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.FieldExpandableODE",
          "name": "FieldExpandableODE",
          "isArray": false
        },
        "name": "eqn"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "t0"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]",
          "name": "RealFieldElement[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          }
        },
        "name": "y0"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.FieldExpandableODE",
            "name": "FieldExpandableODE",
            "isArray": false
          },
          "name": "eqn"
        },
        "comment": "equations to integrate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "t0"
        },
        "comment": "start value of the independent time variable",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]",
            "name": "RealFieldElement[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.RealFieldElement",
              "name": "RealFieldElement",
              "isArray": false
            }
          },
          "name": "y0"
        },
        "comment": "array containing the start value of the state vector",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "target time for the integration",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "initial state with derivatives added",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEquations()",
    "name": "getEquations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ode.FieldExpandableODE",
      "name": "FieldExpandableODE",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "differential equations to integrate",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEvaluationsCounter()",
    "name": "getEvaluationsCounter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.util.IntegerSequence.Incrementor",
      "name": "Incrementor",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "evaluations counter",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "computeDerivatives(org.apache.commons.math3.RealFieldElement t,org.apache.commons.math3.RealFieldElement[] y)",
    "name": "computeDerivatives",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement[]",
          "name": "RealFieldElement[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          }
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "current value of the independent time variable",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement[]",
            "name": "RealFieldElement[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.RealFieldElement",
              "name": "RealFieldElement",
              "isArray": false
            }
          },
          "name": "y"
        },
        "comment": "array containing the current value of the state vector",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "state completed with derivatives",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if arrays dimensions do not match equations settings",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the number of functions evaluations is exceeded",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "integrate"
        ],
        "comment": "if the ODE equations have not been set (i.e. if this method is called outside of a call to integrate",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setStateInitialized(boolean stateInitialized)",
    "name": "setStateInitialized",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "stateInitialized"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "stateInitialized"
        },
        "comment": "new value for the flag",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "acceptStep(org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator interpolator,org.apache.commons.math3.RealFieldElement tEnd)",
    "name": "acceptStep",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
      "name": "FieldODEStateAndDerivative",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator",
          "name": "AbstractFieldStepInterpolator",
          "isArray": false
        },
        "name": "interpolator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "tEnd"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator",
            "name": "AbstractFieldStepInterpolator",
            "isArray": false
          },
          "name": "interpolator"
        },
        "comment": "step interpolator",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "tEnd"
        },
        "comment": "final integration time",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "state at end of step",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[1])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the interpolator throws one because the number of functions evaluations is exceeded",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoBracketingException",
          "name": "NoBracketingException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the location of an event cannot be bracketed",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if arrays dimensions do not match equations settings",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "sanityChecks(org.apache.commons.math3.ode.FieldODEState eqn,org.apache.commons.math3.RealFieldElement t)",
    "name": "sanityChecks",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.FieldODEState",
          "name": "FieldODEState",
          "isArray": false
        },
        "name": "eqn"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.FieldODEState",
            "name": "FieldODEState",
            "isArray": false
          },
          "name": "eqn"
        },
        "comment": "set of differential equations",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "target time for the integration",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if integration span is too small",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if adaptive step size integrators tolerance arrays dimensions are not compatible with equations settings",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "resetOccurred()",
    "name": "resetOccurred",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if a reset occurred while last step was accepted",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setStepSize(org.apache.commons.math3.RealFieldElement stepSize)",
    "name": "setStepSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "stepSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "stepSize"
        },
        "comment": "step size to set",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getStepSize()",
    "name": "getStepSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "current step size",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setStepStart(org.apache.commons.math3.ode.FieldODEStateAndDerivative stepStart)",
    "name": "setStepStart",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
          "name": "FieldODEStateAndDerivative",
          "isArray": false
        },
        "name": "stepStart"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
            "name": "FieldODEStateAndDerivative",
            "isArray": false
          },
          "name": "stepStart"
        },
        "comment": "step start",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getStepStart()",
    "name": "getStepStart",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
      "name": "FieldODEStateAndDerivative",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "current step start",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setIsLastStep(boolean isLastStep)",
    "name": "setIsLastStep",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isLastStep"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isLastStep"
        },
        "comment": "if true, this step is the last one",
        "kind": "PARAM",
        "condition": "target==1"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isLastStep()",
    "name": "isLastStep",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
      "name": "AbstractFieldIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.AbstractFieldIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this step is the last one",
      "kind": "RETURN",
      "condition": "target==1 ? result == true"
    },
    "throwsTags": []
  }
]