[
  {
    "signature": "BoundaryProjector(org.apache.commons.math3.geometry.Point original)",
    "name": "BoundaryProjector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
      "name": "BoundaryProjector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Point",
          "name": "Point",
          "isArray": false
        },
        "name": "original"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Point",
            "name": "Point",
            "isArray": false
          },
          "name": "original"
        },
        "comment": "original point",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree node)",
    "name": "visitOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
      "name": "BoundaryProjector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.Order",
      "name": "Order",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree node)",
    "name": "visitInternalNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
      "name": "BoundaryProjector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree node)",
    "name": "visitLeafNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
      "name": "BoundaryProjector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getProjection()",
    "name": "getProjection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
      "name": "BoundaryProjector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.BoundaryProjector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjection",
      "name": "BoundaryProjection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "projection",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]