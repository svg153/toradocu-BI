[
  {
    "signature": "MultivariateSummaryStatistics(int k,boolean isCovarianceBiasCorrected)",
    "name": "MultivariateSummaryStatistics",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isCovarianceBiasCorrected"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "k"
        },
        "comment": "dimension of the data",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isCovarianceBiasCorrected"
        },
        "comment": "if true, the unbiased sample covariance is computed, otherwise the biased population covariance is computed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addValue(double[] value)",
    "name": "addValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "value"
        },
        "comment": "the n-tuple to add",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the length of the array does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getDimension()",
    "name": "getDimension",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The dimension of the data",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getN())"
    },
    "throwsTags": []
  },
  {
    "signature": "getN()",
    "name": "getN",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of available values",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSum()",
    "name": "getSum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component sums",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSumSq()",
    "name": "getSumSq",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component sums of squares",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getN())"
    },
    "throwsTags": []
  },
  {
    "signature": "getSumLog()",
    "name": "getSumLog",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component log sums",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMean()",
    "name": "getMean",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component means",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStandardDeviation()",
    "name": "getStandardDeviation",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component standard deviations",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getN())"
    },
    "throwsTags": []
  },
  {
    "signature": "getCovariance()",
    "name": "getCovariance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the covariance matrix",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getN())"
    },
    "throwsTags": []
  },
  {
    "signature": "getMax()",
    "name": "getMax",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component maxima",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getN())"
    },
    "throwsTags": []
  },
  {
    "signature": "getMin()",
    "name": "getMin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component minima",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getN())"
    },
    "throwsTags": []
  },
  {
    "signature": "getGeometricMean()",
    "name": "getGeometricMean",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the array of component geometric means",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "String with line feeds displaying statistics",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to test equality against.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if object equals this",
      "kind": "RETURN",
      "condition": "args[0]==target ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "hash code",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSumImpl()",
    "name": "getSumImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the sum",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSumImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumImpl)",
    "name": "setSumImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "sumImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "sumImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the Sum",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getSumsqImpl()",
    "name": "getSumsqImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the sum of squares",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSumsqImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumsqImpl)",
    "name": "setSumsqImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "sumsqImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "sumsqImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the sum of squares",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getMinImpl()",
    "name": "getMinImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the minimum",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMinImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] minImpl)",
    "name": "setMinImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "minImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "minImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the minimum",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getMaxImpl()",
    "name": "getMaxImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the maximum",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] maxImpl)",
    "name": "setMaxImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "maxImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "maxImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the maximum",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getSumLogImpl()",
    "name": "getSumLogImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the log sum",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] sumLogImpl)",
    "name": "setSumLogImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "sumLogImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "sumLogImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the log sum",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getGeoMeanImpl()",
    "name": "getGeoMeanImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the geometric mean",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGeoMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] geoMeanImpl)",
    "name": "setGeoMeanImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "geoMeanImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "geoMeanImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the geometric mean",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getMeanImpl()",
    "name": "getMeanImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
      "name": "StorelessUnivariateStatistic[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
        "name": "StorelessUnivariateStatistic",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the StorelessUnivariateStatistic implementing the mean",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMeanImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[] meanImpl)",
    "name": "setMeanImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
      "name": "MultivariateSummaryStatistics",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
          "name": "StorelessUnivariateStatistic[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
            "name": "StorelessUnivariateStatistic",
            "isArray": false
          }
        },
        "name": "meanImpl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]",
            "name": "StorelessUnivariateStatistic[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic",
              "name": "StorelessUnivariateStatistic",
              "isArray": false
            }
          },
          "name": "meanImpl"
        },
        "comment": "the StorelessUnivariateStatistic instance to use for computing the mean",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array dimension does not match the one used at construction",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if data has already been added (i.e if n > 0)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]