[
  {
    "signature": "NonMonotonicSequenceException(java.lang.Number wrong,java.lang.Number previous,int index)",
    "name": "NonMonotonicSequenceException",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "name": "NonMonotonicSequenceException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "wrong"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "previous"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "wrong"
        },
        "comment": "Value that did not match the requirements.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "previous"
        },
        "comment": "Previous value in the sequence.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "Index of the value that did not match the requirements.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "NonMonotonicSequenceException(java.lang.Number wrong,java.lang.Number previous,int index,org.apache.commons.math3.util.MathArrays.OrderDirection direction,boolean strict)",
    "name": "NonMonotonicSequenceException",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "name": "NonMonotonicSequenceException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "wrong"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "previous"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.MathArrays.OrderDirection",
          "name": "OrderDirection",
          "isArray": false
        },
        "name": "direction"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "strict"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "wrong"
        },
        "comment": "Value that did not match the requirements.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "previous"
        },
        "comment": "Previous value in the sequence.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "Index of the value that did not match the requirements.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.MathArrays.OrderDirection",
            "name": "OrderDirection",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "Strictly positive for a sequence required to be increasing, negative (or zero) for a decreasing sequence.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "strict"
        },
        "comment": "Whether the sequence must be strictly increasing or decreasing.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDirection()",
    "name": "getDirection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "name": "NonMonotonicSequenceException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.util.MathArrays.OrderDirection",
      "name": "OrderDirection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the order direction.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStrict()",
    "name": "getStrict",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "name": "NonMonotonicSequenceException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true is the sequence should be strictly monotonic.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIndex()",
    "name": "getIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "name": "NonMonotonicSequenceException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the current index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPrevious()",
    "name": "getPrevious",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
      "name": "NonMonotonicSequenceException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NonMonotonicSequenceException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "Number",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the previous value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]