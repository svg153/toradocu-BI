[
  {
    "signature": "AbstractRegion(double tolerance)",
    "name": "AbstractRegion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "tolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "tolerance"
        },
        "comment": "tolerance below which points are considered identical.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree tree,double tolerance)",
    "name": "AbstractRegion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "tree"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "tolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
            "name": "BSPTree",
            "isArray": false
          },
          "name": "tree"
        },
        "comment": "inside/outside BSP tree representing the region",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "tolerance"
        },
        "comment": "tolerance below which points are considered identical.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AbstractRegion(java.util.Collection boundary,double tolerance)",
    "name": "AbstractRegion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "boundary"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "tolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "boundary"
        },
        "comment": "collection of boundary elements, as a collection of SubHyperplane objects",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "tolerance"
        },
        "comment": "tolerance below which points are considered identical.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane[] hyperplanes,double tolerance)",
    "name": "AbstractRegion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Hyperplane[]",
          "name": "Hyperplane[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Hyperplane",
            "name": "Hyperplane",
            "isArray": false
          }
        },
        "name": "hyperplanes"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "tolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Hyperplane[]",
            "name": "Hyperplane[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Hyperplane",
              "name": "Hyperplane",
              "isArray": false
            }
          },
          "name": "hyperplanes"
        },
        "comment": "array of bounding hyperplanes (if null, an empty region will be built)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "tolerance"
        },
        "comment": "tolerance below which points are considered identical.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree newTree)",
    "name": "buildNew",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "newTree"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTolerance()",
    "name": "getTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "tolerance below which points are considered to belong to hyperplanes",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "copySelf()",
    "name": "copySelf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree node)",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isFull()",
    "name": "isFull",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isFull(org.apache.commons.math3.geometry.partitioning.BSPTree node)",
    "name": "isFull",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(org.apache.commons.math3.geometry.partitioning.Region region)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Region",
          "name": "Region",
          "isArray": false
        },
        "name": "region"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "projectToBoundary(org.apache.commons.math3.geometry.Point point)",
    "name": "projectToBoundary",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BoundaryProjection",
      "name": "BoundaryProjection",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Point",
          "name": "Point",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkPoint(org.apache.commons.math3.geometry.Vector point)",
    "name": "checkPoint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Region.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Vector",
            "name": "Vector",
            "isArray": false
          },
          "name": "point"
        },
        "comment": "point to check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a code representing the point status: either Region.Location.INSIDE, Region.Location.OUTSIDE or Region.Location.BOUNDARY",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "checkPoint(org.apache.commons.math3.geometry.Point point)",
    "name": "checkPoint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Region.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Point",
          "name": "Point",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree node,org.apache.commons.math3.geometry.Vector point)",
    "name": "checkPoint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Region.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
            "name": "BSPTree",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "root node of the region",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Vector",
            "name": "Vector",
            "isArray": false
          },
          "name": "point"
        },
        "comment": "point to check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a code representing the point status: either INSIDE, OUTSIDE or BOUNDARY",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree node,org.apache.commons.math3.geometry.Point point)",
    "name": "checkPoint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Region.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
          "name": "BSPTree",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Point",
          "name": "Point",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
            "name": "BSPTree",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "root node of the region",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Point",
            "name": "Point",
            "isArray": false
          },
          "name": "point"
        },
        "comment": "point to check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a code representing the point status: either INSIDE, OUTSIDE or BOUNDARY",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTree(boolean includeBoundaryAttributes)",
    "name": "getTree",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.BSPTree",
      "name": "BSPTree",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "includeBoundaryAttributes"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBoundarySize()",
    "name": "getBoundarySize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSize()",
    "name": "getSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setSize(double size)",
    "name": "setSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "size of the instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getBarycenter()",
    "name": "getBarycenter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Point",
      "name": "Point",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setBarycenter(org.apache.commons.math3.geometry.Vector barycenter)",
    "name": "setBarycenter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "barycenter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Vector",
            "name": "Vector",
            "isArray": false
          },
          "name": "barycenter"
        },
        "comment": "barycenter of the instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setBarycenter(org.apache.commons.math3.geometry.Point barycenter)",
    "name": "setBarycenter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Point",
          "name": "Point",
          "isArray": false
        },
        "name": "barycenter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.Point",
            "name": "Point",
            "isArray": false
          },
          "name": "barycenter"
        },
        "comment": "barycenter of the instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "computeGeometricalProperties()",
    "name": "computeGeometricalProperties",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "side(org.apache.commons.math3.geometry.partitioning.Hyperplane hyperplane)",
    "name": "side",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Side",
      "name": "Side",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Hyperplane",
          "name": "Hyperplane",
          "isArray": false
        },
        "name": "hyperplane"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane sub)",
    "name": "intersection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.SubHyperplane",
      "name": "SubHyperplane",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.SubHyperplane",
          "name": "SubHyperplane",
          "isArray": false
        },
        "name": "sub"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "applyTransform(org.apache.commons.math3.geometry.partitioning.Transform transform)",
    "name": "applyTransform",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.partitioning.AbstractRegion",
      "name": "AbstractRegion",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Transform",
          "name": "Transform",
          "isArray": false
        },
        "name": "transform"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.partitioning.Transform",
            "name": "Transform",
            "isArray": false
          },
          "name": "transform"
        },
        "comment": "transform to apply",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new region, resulting from the application of the transform to the instance",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]