[
  {
    "signature": "OpenIntToDoubleHashMap()",
    "name": "OpenIntToDoubleHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "OpenIntToDoubleHashMap(double missingEntries)",
    "name": "OpenIntToDoubleHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "missingEntries"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "missingEntries"
        },
        "comment": "value to return when a missing entry is fetched",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "OpenIntToDoubleHashMap(int expectedSize)",
    "name": "OpenIntToDoubleHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expectedSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "expectedSize"
        },
        "comment": "expected number of elements in the map",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "OpenIntToDoubleHashMap(int expectedSize,double missingEntries)",
    "name": "OpenIntToDoubleHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expectedSize"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "missingEntries"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "expectedSize"
        },
        "comment": "expected number of elements in the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "missingEntries"
        },
        "comment": "value to return when a missing entry is fetched",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap source)",
    "name": "OpenIntToDoubleHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
          "name": "OpenIntToDoubleHashMap",
          "isArray": false
        },
        "name": "source"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
            "name": "OpenIntToDoubleHashMap",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "map to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "get(int key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key associated with the data",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "data associated with the key",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "containsKey(int key)",
    "name": "containsKey",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key to check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if a value is associated with key",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "iterator over the map elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "number of elements stored in the map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "remove(int key)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key to which the value is associated",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "removed value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "put(int key,double value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
      "name": "OpenIntToDoubleHashMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.OpenIntToDoubleHashMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key to which value is associated",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value to put in the map",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "previous value associated with the key",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]