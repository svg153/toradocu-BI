[
  {
    "signature": "init(org.apache.commons.math3.ode.FieldODEStateAndDerivative initialState,org.apache.commons.math3.RealFieldElement finalTime)",
    "name": "init",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.sampling.FieldFixedStepHandler",
      "name": "FieldFixedStepHandler",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.sampling.FieldFixedStepHandler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
          "name": "FieldODEStateAndDerivative",
          "isArray": false
        },
        "name": "initialState"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.RealFieldElement",
          "name": "RealFieldElement",
          "isArray": false
        },
        "name": "finalTime"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
            "name": "FieldODEStateAndDerivative",
            "isArray": false
          },
          "name": "initialState"
        },
        "comment": "initial time, state vector and derivative",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.RealFieldElement",
            "name": "RealFieldElement",
            "isArray": false
          },
          "name": "finalTime"
        },
        "comment": "target time for the integration",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "handleStep(org.apache.commons.math3.ode.FieldODEStateAndDerivative state,boolean isLast)",
    "name": "handleStep",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.sampling.FieldFixedStepHandler",
      "name": "FieldFixedStepHandler",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.sampling.FieldFixedStepHandler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
          "name": "FieldODEStateAndDerivative",
          "isArray": false
        },
        "name": "state"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isLast"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.FieldODEStateAndDerivative",
            "name": "FieldODEStateAndDerivative",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "current value of the independent time variable, state vector and derivative For efficiency purposes, the FieldStepNormalizer class reuses the same array on each call, so if the instance wants to keep it across all calls (for example to provide at the end of the integration a complete array of all steps), it should build a local copy store this copy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isLast"
        },
        "comment": "true if the step is the last one",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]