[
  {
    "signature": "BaseAbstractUnivariateSolver(double absoluteAccuracy)",
    "name": "BaseAbstractUnivariateSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "Maximum absolute error.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "BaseAbstractUnivariateSolver(double relativeAccuracy,double absoluteAccuracy)",
    "name": "BaseAbstractUnivariateSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "Maximum relative error.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "Maximum absolute error.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "BaseAbstractUnivariateSolver(double relativeAccuracy,double absoluteAccuracy,double functionValueAccuracy)",
    "name": "BaseAbstractUnivariateSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "functionValueAccuracy"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "Maximum relative error.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "Maximum absolute error.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "functionValueAccuracy"
        },
        "comment": "Maximum function value error.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMaxEvaluations()",
    "name": "getMaxEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEvaluations()",
    "name": "getEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMin()",
    "name": "getMin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the lower end of the search interval.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMax()",
    "name": "getMax",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the higher end of the search interval.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStartValue()",
    "name": "getStartValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the initial guess.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAbsoluteAccuracy()",
    "name": "getAbsoluteAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRelativeAccuracy()",
    "name": "getRelativeAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFunctionValueAccuracy()",
    "name": "getFunctionValueAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "computeObjectiveValue(double point)",
    "name": "computeObjectiveValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "point"
        },
        "comment": "Point at which the objective function must be evaluated.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the objective function value at specified point.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal number of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setup(int maxEval,org.apache.commons.math3.analysis.UnivariateFunction f,double min,double max,double startValue)",
    "name": "setup",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
          "name": "UnivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "startValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
            "name": "UnivariateFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Function to solve.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "min"
        },
        "comment": "Lower bound for the interval.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "Upper bound for the interval.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "startValue"
        },
        "comment": "Start value to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "Maximum number of evaluations.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if f is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "solve(int maxEval,org.apache.commons.math3.analysis.UnivariateFunction f,double min,double max,double startValue)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
          "name": "UnivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "startValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "solve(int maxEval,org.apache.commons.math3.analysis.UnivariateFunction f,double min,double max)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
          "name": "UnivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "max"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "solve(int maxEval,org.apache.commons.math3.analysis.UnivariateFunction f,double startValue)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
          "name": "UnivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "startValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doSolve()",
    "name": "doSolve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the root.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal number of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoBracketingException",
          "name": "NoBracketingException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the initial search interval does not bracket a root and the solver requires it.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isBracketing(double lower,double upper)",
    "name": "isBracketing",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lower"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "upper"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lower"
        },
        "comment": "Lower endpoint.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "upper"
        },
        "comment": "Upper endpoint.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the function values have opposite signs at the given points.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSequence(double start,double mid,double end)",
    "name": "isSequence",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "mid"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "First number.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "mid"
        },
        "comment": "Second number.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "Third number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the arguments form an increasing sequence.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "verifyInterval(double lower,double upper)",
    "name": "verifyInterval",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lower"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "upper"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lower"
        },
        "comment": "Lower endpoint.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "upper"
        },
        "comment": "Upper endpoint.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooLargeException",
          "name": "NumberIsTooLargeException",
          "isArray": false
        },
        "codeTags": [
          "lower >= upper"
        ],
        "comment": "if lower >= upper.",
        "kind": "THROWS",
        "condition": "args[0]>=args[1]"
      }
    ]
  },
  {
    "signature": "verifySequence(double lower,double initial,double upper)",
    "name": "verifySequence",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lower"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "initial"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "upper"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lower"
        },
        "comment": "Lower endpoint.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "initial"
        },
        "comment": "Initial value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "upper"
        },
        "comment": "Upper endpoint.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooLargeException",
          "name": "NumberIsTooLargeException",
          "isArray": false
        },
        "codeTags": [
          "lower >= initial",
          "initial >= upper"
        ],
        "comment": "if lower >= initial or initial >= upper.",
        "kind": "THROWS",
        "condition": "args[0]>=args[1] || args[1]>=args[2]"
      }
    ]
  },
  {
    "signature": "verifyBracketing(double lower,double upper)",
    "name": "verifyBracketing",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lower"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "upper"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lower"
        },
        "comment": "Lower endpoint.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "upper"
        },
        "comment": "Upper endpoint.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the function has not been set.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoBracketingException",
          "name": "NoBracketingException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the function has the same sign at the endpoints.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "incrementEvaluationCount()",
    "name": "incrementEvaluationCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
      "name": "BaseAbstractUnivariateSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "when the allowed number of function evaluations has been exhausted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]