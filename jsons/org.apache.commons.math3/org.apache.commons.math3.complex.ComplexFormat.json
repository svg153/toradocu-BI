[
  {
    "signature": "ComplexFormat()",
    "name": "ComplexFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ComplexFormat(java.text.NumberFormat format)",
    "name": "ComplexFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "format"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "format"
        },
        "comment": "the custom format for both real and imaginary parts.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "realFormat",
          "null"
        ],
        "comment": "if realFormat is null.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ComplexFormat(java.text.NumberFormat realFormat,java.text.NumberFormat imaginaryFormat)",
    "name": "ComplexFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "realFormat"
      },
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "imaginaryFormat"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "realFormat"
        },
        "comment": "the custom format for the real part.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "imaginaryFormat"
        },
        "comment": "the custom format for the imaginary part.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryFormat",
          "null"
        ],
        "comment": "if imaginaryFormat is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "realFormat",
          "null"
        ],
        "comment": "if realFormat is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "ComplexFormat(java.lang.String imaginaryCharacter)",
    "name": "ComplexFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "imaginaryCharacter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "imaginaryCharacter"
        },
        "comment": "The custom imaginary character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter",
          "null"
        ],
        "comment": "if imaginaryCharacter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter"
        ],
        "comment": "if imaginaryCharacter is an empty string.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ComplexFormat(java.lang.String imaginaryCharacter,java.text.NumberFormat format)",
    "name": "ComplexFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "imaginaryCharacter"
      },
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "format"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "imaginaryCharacter"
        },
        "comment": "The custom imaginary character.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "format"
        },
        "comment": "the custom format for both real and imaginary parts.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter",
          "null"
        ],
        "comment": "if imaginaryCharacter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter"
        ],
        "comment": "if imaginaryCharacter is an empty string.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "format",
          "null"
        ],
        "comment": "if format is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "ComplexFormat(java.lang.String imaginaryCharacter,java.text.NumberFormat realFormat,java.text.NumberFormat imaginaryFormat)",
    "name": "ComplexFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "imaginaryCharacter"
      },
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "realFormat"
      },
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "imaginaryFormat"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "imaginaryCharacter"
        },
        "comment": "The custom imaginary character.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "realFormat"
        },
        "comment": "the custom format for the real part.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.NumberFormat",
            "name": "NumberFormat",
            "isArray": false
          },
          "name": "imaginaryFormat"
        },
        "comment": "the custom format for the imaginary part.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter",
          "null"
        ],
        "comment": "if imaginaryCharacter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter"
        ],
        "comment": "if imaginaryCharacter is an empty string.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryFormat",
          "null"
        ],
        "comment": "if imaginaryFormat is null.",
        "kind": "THROWS",
        "condition": "args[2]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "realFormat",
          "null"
        ],
        "comment": "if realFormat is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "getAvailableLocales()",
    "name": "getAvailableLocales",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Locale[]",
      "name": "Locale[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.util.Locale",
        "name": "Locale",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "available complex format locales.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "format(org.apache.commons.math3.complex.Complex c)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "Complex object to format.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A formatted number in the form \"Re(c) + Im(c)i\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "format(java.lang.Double c)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Double",
          "name": "Double",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Double",
            "name": "Double",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "Double object to format.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A formatted number.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "format(org.apache.commons.math3.complex.Complex complex,java.lang.StringBuffer toAppendTo,java.text.FieldPosition pos)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.StringBuffer",
      "name": "StringBuffer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "complex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "toAppendTo"
      },
      {
        "type": {
          "qualifiedName": "java.text.FieldPosition",
          "name": "FieldPosition",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "complex"
        },
        "comment": "the object to format.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "toAppendTo"
        },
        "comment": "where the text is to be appended",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.FieldPosition",
            "name": "FieldPosition",
            "isArray": false
          },
          "name": "pos"
        },
        "comment": "On input: an alignment field, if desired. On output: the offsets of the alignment field",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value passed in as toAppendTo.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "format(java.lang.Object obj,java.lang.StringBuffer toAppendTo,java.text.FieldPosition pos)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.StringBuffer",
      "name": "StringBuffer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      },
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "toAppendTo"
      },
      {
        "type": {
          "qualifiedName": "java.text.FieldPosition",
          "name": "FieldPosition",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to format.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "toAppendTo"
        },
        "comment": "where the text is to be appended",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.FieldPosition",
            "name": "FieldPosition",
            "isArray": false
          },
          "name": "pos"
        },
        "comment": "On input: an alignment field, if desired. On output: the offsets of the alignment field",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value passed in as toAppendTo.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "obj"
        ],
        "comment": "is obj is not a valid type.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getImaginaryCharacter()",
    "name": "getImaginaryCharacter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the imaginaryCharacter.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getImaginaryFormat()",
    "name": "getImaginaryFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.text.NumberFormat",
      "name": "NumberFormat",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the imaginaryFormat.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInstance()",
    "name": "getInstance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the default complex format.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInstance(java.util.Locale locale)",
    "name": "getInstance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the specific locale used by the format.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex format specific to the given locale.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInstance(java.lang.String imaginaryCharacter,java.util.Locale locale)",
    "name": "getInstance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "imaginaryCharacter"
      },
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the specific locale used by the format.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "imaginaryCharacter"
        },
        "comment": "Imaginary character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex format specific to the given locale.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter",
          "null"
        ],
        "comment": "if imaginaryCharacter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [
          "imaginaryCharacter"
        ],
        "comment": "if imaginaryCharacter is an empty string.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRealFormat()",
    "name": "getRealFormat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.text.NumberFormat",
      "name": "NumberFormat",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the realFormat.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String source)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "source"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the string to parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the parsed Complex object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathParseException",
          "name": "MathParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the beginning of the specified string cannot be parsed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parse(java.lang.String source,java.text.ParsePosition pos)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.complex.ComplexFormat",
      "name": "ComplexFormat",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.complex.ComplexFormat",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "java.text.ParsePosition",
          "name": "ParsePosition",
          "isArray": false
        },
        "name": "pos"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "the string to parse",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.text.ParsePosition",
            "name": "ParsePosition",
            "isArray": false
          },
          "name": "pos"
        },
        "comment": "input/ouput parsing parameter.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the parsed Complex object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]