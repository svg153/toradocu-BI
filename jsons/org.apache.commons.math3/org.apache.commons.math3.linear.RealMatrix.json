[
  {
    "signature": "createMatrix(int rowDimension,int columnDimension)",
    "name": "createMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowDimension"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnDimension"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rowDimension"
        },
        "comment": "the number of rows in the new matrix",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "columnDimension"
        },
        "comment": "the number of columns in the new matrix",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new matrix of the same type as the instance",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if row or column dimension is not positive.",
        "kind": "THROWS",
        "condition": "(args[0]>0) == false || (args[0]>0) == false"
      }
    ]
  },
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "matrix copy",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "add(org.apache.commons.math3.linear.RealMatrix m)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to be added",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this + m",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "m",
          "this"
        ],
        "comment": "if m is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "subtract(org.apache.commons.math3.linear.RealMatrix m)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to be subtracted",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this - m",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "m",
          "this"
        ],
        "comment": "if m is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "scalarAdd(double d)",
    "name": "scalarAdd",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "value to be added to each entry",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "d + this",
      "kind": "RETURN",
      "condition": "true ?result==target"
    },
    "throwsTags": []
  },
  {
    "signature": "scalarMultiply(double d)",
    "name": "scalarMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "value to multiply all entries by",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "d * this",
      "kind": "RETURN",
      "condition": "true ?result==target"
    },
    "throwsTags": []
  },
  {
    "signature": "multiply(org.apache.commons.math3.linear.RealMatrix m)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to postmultiply by",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this * m",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "columnDimension(this) != rowDimension(m)"
        ],
        "comment": "if columnDimension(this) != rowDimension(m)",
        "kind": "THROWS",
        "condition": "target.getColumnDimension()!=target.getRowDimension()"
      }
    ]
  },
  {
    "signature": "preMultiply(org.apache.commons.math3.linear.RealMatrix m)",
    "name": "preMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to premultiply by",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "m * this",
      "kind": "RETURN",
      "condition": "true ?result==target"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "rowDimension(this) != columnDimension(m)"
        ],
        "comment": "if rowDimension(this) != columnDimension(m)",
        "kind": "THROWS",
        "condition": "target.getRowDimension()!=target.getColumnDimension()"
      }
    ]
  },
  {
    "signature": "power(int p)",
    "name": "power",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "p"
        },
        "comment": "raise this to power p",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this^p",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotPositiveException",
          "name": "NotPositiveException",
          "isArray": false
        },
        "codeTags": [
          "p < 0"
        ],
        "comment": "if p < 0",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.NonSquareMatrixException",
          "name": "NonSquareMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the matrix is not square",
        "kind": "THROWS",
        "condition": "(target.isSquare()) == false"
      }
    ]
  },
  {
    "signature": "getData()",
    "name": "getData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "2-dimensional array of entries",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNorm()",
    "name": "getNorm",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "norm",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFrobeniusNorm()",
    "name": "getFrobeniusNorm",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "norm",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getNorm())"
    },
    "throwsTags": []
  },
  {
    "signature": "getSubMatrix(int startRow,int endRow,int startColumn,int endColumn)",
    "name": "getSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The subMatrix containing the data of the specified rows and columns.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[1]<args[0] || args[3]<args[2]"
      }
    ]
  },
  {
    "signature": "getSubMatrix(int[] selectedRows,int[] selectedColumns)",
    "name": "getSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "selectedRows"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "selectedColumns"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "selectedRows"
        },
        "comment": "Array of row indices.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "selectedColumns"
        },
        "comment": "Array of column indices.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The subMatrix containing the data in the specified rows and columns",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "null"
        ],
        "comment": "if the row or column selections are null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the row or column selections are empty (zero length).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "copySubMatrix(int startRow,int endRow,int startColumn,int endColumn,double[][] destination)",
    "name": "copySubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      },
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "destination"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "destination"
        },
        "comment": "The arrays where the submatrix data should be copied (if larger than rows/columns counts, only the upper-left part will be used)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[1]<args[0] || args[3]<args[2]"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the destination array is too small.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "copySubMatrix(int[] selectedRows,int[] selectedColumns,double[][] destination)",
    "name": "copySubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "selectedRows"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "selectedColumns"
      },
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "destination"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "selectedRows"
        },
        "comment": "Array of row indices.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "selectedColumns"
        },
        "comment": "Array of column indices.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "destination"
        },
        "comment": "The arrays where the submatrix data should be copied (if larger than rows/columns counts, only the upper-left part will be used)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "null"
        ],
        "comment": "if the row or column selections are null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the row or column selections are empty (zero length).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the destination array is too small.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setSubMatrix(double[][] subMatrix,int row,int column)",
    "name": "setSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[][]",
          "name": "double[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "subMatrix"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[][]",
            "name": "double[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "subMatrix"
        },
        "comment": "array containing the submatrix replacement data",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "row coordinate of the top, left element to be replaced",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "column coordinate of the top, left element to be replaced",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoDataException",
          "name": "NoDataException",
          "isArray": false
        },
        "codeTags": [
          "subMatrix"
        ],
        "comment": "if subMatrix is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [
          "subMatrix",
          "(row, column)"
        ],
        "comment": "if subMatrix does not fit into this matrix from element in (row, column).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "subMatrix"
        ],
        "comment": "if subMatrix is not rectangular (not all rows have the same length) or empty.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "subMatrix",
          "null"
        ],
        "comment": "if subMatrix is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getRowMatrix(int row)",
    "name": "getRowMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "row Matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified row index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setRowMatrix(int row,org.apache.commons.math3.linear.RealMatrix matrix)",
    "name": "setRowMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "Row matrix to be copied (must have one row and the same number of columns as the instance).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified row index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "matrix",
          "1",
          "this",
          "matrix"
        ],
        "comment": "if the row dimension of the matrix is not 1, or the column dimensions of this and matrix do not match.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getColumnMatrix(int column)",
    "name": "getColumnMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "column Matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified column index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setColumnMatrix(int column,org.apache.commons.math3.linear.RealMatrix matrix)",
    "name": "setColumnMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "Column matrix to be copied (must have one column and the same number of rows as the instance).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified column index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "matrix",
          "1",
          "this",
          "matrix"
        ],
        "comment": "if the column dimension of the matrix is not 1, or the row dimensions of this and matrix do not match.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRowVector(int row)",
    "name": "getRowVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealVector",
      "name": "RealVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a row vector.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified row index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setRowVector(int row,org.apache.commons.math3.linear.RealVector vector)",
    "name": "setRowVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealVector",
          "name": "RealVector",
          "isArray": false
        },
        "name": "vector"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealVector",
            "name": "RealVector",
            "isArray": false
          },
          "name": "vector"
        },
        "comment": "row vector to be copied (must have the same number of column as the instance).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified row index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "vector",
          "this"
        ],
        "comment": "if the vector dimension does not match the column dimension of this matrix.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getColumnVector(int column)",
    "name": "getColumnVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealVector",
      "name": "RealVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a column vector.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified column index is invalid",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setColumnVector(int column,org.apache.commons.math3.linear.RealVector vector)",
    "name": "setColumnVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealVector",
          "name": "RealVector",
          "isArray": false
        },
        "name": "vector"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealVector",
            "name": "RealVector",
            "isArray": false
          },
          "name": "vector"
        },
        "comment": "column vector to be copied (must have the same number of rows as the instance).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified column index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "vector",
          "this"
        ],
        "comment": "if the vector dimension does not match the row dimension of this matrix.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRow(int row)",
    "name": "getRow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the array of entries in the row.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified row index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setRow(int row,double[] array)",
    "name": "setRow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "Row matrix to be copied (must have the same number of columns as the instance)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified row index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "array",
          "this"
        ],
        "comment": "if the array length does not match the column dimension of this matrix.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getColumn(int column)",
    "name": "getColumn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the array of entries in the column.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified column index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setColumn(int column,double[] array)",
    "name": "setColumn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "Column array to be copied (must have the same number of rows as the instance).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified column index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.MatrixDimensionMismatchException",
          "name": "MatrixDimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "array",
          "this"
        ],
        "comment": "if the array length does not match the row dimension of this matrix.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getEntry(int row,int column)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row index of entry to be fetched.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column index of entry to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the matrix entry at (row, column).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the row or column index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setEntry(int row,int column,double value)",
    "name": "setEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row index of entry to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column index of entry to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the new value of the entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the row or column index is not valid",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addToEntry(int row,int column,double increment)",
    "name": "addToEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "increment"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row index of the entry to be modified.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column index of the entry to be modified.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "increment"
        },
        "comment": "value to add to the matrix entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the row or column index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "multiplyEntry(int row,int column,double factor)",
    "name": "multiplyEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "factor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row index of the entry to be modified.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column index of the entry to be modified.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "factor"
        },
        "comment": "Multiplication factor for the matrix entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the row or column index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "transpose()",
    "name": "transpose",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "transpose matrix",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTrace()",
    "name": "getTrace",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the trace.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.linear.NonSquareMatrixException",
          "name": "NonSquareMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the matrix is not square.",
        "kind": "THROWS",
        "condition": "(target.isSquare()) == false"
      }
    ]
  },
  {
    "signature": "operate(double[] v)",
    "name": "operate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "v"
        },
        "comment": "the vector to operate on",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this * v",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "v",
          "this"
        ],
        "comment": "if the length of v does not match the column dimension of this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "operate(org.apache.commons.math3.linear.RealVector v)",
    "name": "operate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealVector",
      "name": "RealVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealVector",
          "name": "RealVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealVector",
            "name": "RealVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "the vector to operate on",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this * v",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "v",
          "this"
        ],
        "comment": "if the dimension of v does not match the column dimension of this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "preMultiply(double[] v)",
    "name": "preMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "v"
        },
        "comment": "the row vector to premultiply by",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "v * this",
      "kind": "RETURN",
      "condition": "true ?result==target"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "v",
          "this"
        ],
        "comment": "if the length of v does not match the row dimension of this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "preMultiply(org.apache.commons.math3.linear.RealVector v)",
    "name": "preMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealVector",
      "name": "RealVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealVector",
          "name": "RealVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealVector",
            "name": "RealVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "the row vector to premultiply by",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "v * this",
      "kind": "RETURN",
      "condition": "true ?result==target"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "v",
          "this"
        ],
        "comment": "if the dimension of v does not match the row dimension of this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
          "name": "RealMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
            "name": "RealMatrixChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
          "name": "RealMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
            "name": "RealMatrixPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor,int startRow,int endRow,int startColumn,int endColumn)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
          "name": "RealMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
            "name": "RealMatrixChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[2]<args[1] || args[4]<args[3]"
      }
    ]
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor,int startRow,int endRow,int startColumn,int endColumn)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
          "name": "RealMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
            "name": "RealMatrixPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[2]<args[1] || args[4]<args[3]"
      }
    ]
  },
  {
    "signature": "walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor)",
    "name": "walkInColumnOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
          "name": "RealMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
            "name": "RealMatrixChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor)",
    "name": "walkInColumnOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
          "name": "RealMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
            "name": "RealMatrixPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor,int startRow,int endRow,int startColumn,int endColumn)",
    "name": "walkInColumnOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
          "name": "RealMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
            "name": "RealMatrixChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[2]<args[1] || args[4]<args[3]"
      }
    ]
  },
  {
    "signature": "walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor,int startRow,int endRow,int startColumn,int endColumn)",
    "name": "walkInColumnOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
          "name": "RealMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
            "name": "RealMatrixPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[2]<args[1] || args[4]<args[3]"
      }
    ]
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
          "name": "RealMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
            "name": "RealMatrixChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
          "name": "RealMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
            "name": "RealMatrixPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor,int startRow,int endRow,int startColumn,int endColumn)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
          "name": "RealMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixChangingVisitor",
            "name": "RealMatrixChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[2]<args[1] || args[4]<args[3]"
      }
    ]
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor,int startRow,int endRow,int startColumn,int endColumn)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "RealMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.RealMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
          "name": "RealMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.RealMatrixPreservingVisitor",
            "name": "RealMatrixPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor used to process all matrix entries",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "Initial row index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "Final row index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "Initial column index",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "Final column index (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by RealMatrixPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "endRow < startRow",
          "endColumn < startColumn"
        ],
        "comment": "if endRow < startRow or endColumn < startColumn.",
        "kind": "THROWS",
        "condition": "args[2]<args[1] || args[4]<args[3]"
      }
    ]
  }
]