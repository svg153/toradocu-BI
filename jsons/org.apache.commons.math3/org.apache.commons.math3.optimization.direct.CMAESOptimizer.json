[
  {
    "signature": "CMAESOptimizer()",
    "name": "CMAESOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "CMAESOptimizer(int lambda)",
    "name": "CMAESOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lambda"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "lambda"
        },
        "comment": "Population size.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CMAESOptimizer(int lambda,double[] inputSigma)",
    "name": "CMAESOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lambda"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "inputSigma"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "lambda"
        },
        "comment": "Population size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "inputSigma"
        },
        "comment": "Initial standard deviations to sample new points around the initial guess.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CMAESOptimizer(int lambda,double[] inputSigma,int maxIterations,double stopFitness,boolean isActiveCMA,int diagonalOnly,int checkFeasableCount,org.apache.commons.math3.random.RandomGenerator random,boolean generateStatistics)",
    "name": "CMAESOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lambda"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "inputSigma"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "stopFitness"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isActiveCMA"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "diagonalOnly"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "checkFeasableCount"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
          "name": "RandomGenerator",
          "isArray": false
        },
        "name": "random"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "generateStatistics"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "lambda"
        },
        "comment": "Population size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "inputSigma"
        },
        "comment": "Initial standard deviations to sample new points around the initial guess.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxIterations"
        },
        "comment": "Maximal number of iterations.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "stopFitness"
        },
        "comment": "Whether to stop if objective function value is smaller than stopFitness.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isActiveCMA"
        },
        "comment": "Chooses the covariance matrix update method.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "diagonalOnly"
        },
        "comment": "Number of initial iterations, where the covariance matrix remains diagonal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "checkFeasableCount"
        },
        "comment": "Determines how often new random objective variables are generated in case they are out of bounds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
            "name": "RandomGenerator",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "Random generator.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "generateStatistics"
        },
        "comment": "Whether statistic data is collected.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CMAESOptimizer(int lambda,double[] inputSigma,int maxIterations,double stopFitness,boolean isActiveCMA,int diagonalOnly,int checkFeasableCount,org.apache.commons.math3.random.RandomGenerator random,boolean generateStatistics,org.apache.commons.math3.optimization.ConvergenceChecker checker)",
    "name": "CMAESOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lambda"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "inputSigma"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "stopFitness"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isActiveCMA"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "diagonalOnly"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "checkFeasableCount"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
          "name": "RandomGenerator",
          "isArray": false
        },
        "name": "random"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "generateStatistics"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.ConvergenceChecker",
          "name": "ConvergenceChecker",
          "isArray": false
        },
        "name": "checker"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "lambda"
        },
        "comment": "Population size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "inputSigma"
        },
        "comment": "Initial standard deviations to sample new points around the initial guess.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxIterations"
        },
        "comment": "Maximal number of iterations.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "stopFitness"
        },
        "comment": "Whether to stop if objective function value is smaller than stopFitness.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isActiveCMA"
        },
        "comment": "Chooses the covariance matrix update method.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "diagonalOnly"
        },
        "comment": "Number of initial iterations, where the covariance matrix remains diagonal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "checkFeasableCount"
        },
        "comment": "Determines how often new random objective variables are generated in case they are out of bounds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
            "name": "RandomGenerator",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "Random generator.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "generateStatistics"
        },
        "comment": "Whether statistic data is collected.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.ConvergenceChecker",
            "name": "ConvergenceChecker",
            "isArray": false
          },
          "name": "checker"
        },
        "comment": "Convergence checker.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CMAESOptimizer(int maxIterations,double stopFitness,boolean isActiveCMA,int diagonalOnly,int checkFeasableCount,org.apache.commons.math3.random.RandomGenerator random,boolean generateStatistics,org.apache.commons.math3.optimization.ConvergenceChecker checker)",
    "name": "CMAESOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "stopFitness"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isActiveCMA"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "diagonalOnly"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "checkFeasableCount"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
          "name": "RandomGenerator",
          "isArray": false
        },
        "name": "random"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "generateStatistics"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.ConvergenceChecker",
          "name": "ConvergenceChecker",
          "isArray": false
        },
        "name": "checker"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxIterations"
        },
        "comment": "Maximal number of iterations.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "stopFitness"
        },
        "comment": "Whether to stop if objective function value is smaller than stopFitness.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isActiveCMA"
        },
        "comment": "Chooses the covariance matrix update method.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "diagonalOnly"
        },
        "comment": "Number of initial iterations, where the covariance matrix remains diagonal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "checkFeasableCount"
        },
        "comment": "Determines how often new random objective variables are generated in case they are out of bounds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
            "name": "RandomGenerator",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "Random generator.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "generateStatistics"
        },
        "comment": "Whether statistic data is collected.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.ConvergenceChecker",
            "name": "ConvergenceChecker",
            "isArray": false
          },
          "name": "checker"
        },
        "comment": "Convergence checker.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getStatisticsSigmaHistory()",
    "name": "getStatisticsSigmaHistory",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "History of sigma values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStatisticsMeanHistory()",
    "name": "getStatisticsMeanHistory",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "History of mean matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStatisticsFitnessHistory()",
    "name": "getStatisticsFitnessHistory",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "History of fitness values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStatisticsDHistory()",
    "name": "getStatisticsDHistory",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "History of D matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "optimizeInternal(int maxEval,org.apache.commons.math3.analysis.MultivariateFunction f,org.apache.commons.math3.optimization.GoalType goalType,org.apache.commons.math3.optimization.OptimizationData[] optData)",
    "name": "optimizeInternal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointValuePair",
      "name": "PointValuePair",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.MultivariateFunction",
          "name": "MultivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.GoalType",
          "name": "GoalType",
          "isArray": false
        },
        "name": "goalType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.OptimizationData[]",
          "name": "OptimizationData[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.optimization.OptimizationData",
            "name": "OptimizationData",
            "isArray": false
          }
        },
        "name": "optData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "Allowed number of evaluations of the objective function.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.MultivariateFunction",
            "name": "MultivariateFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Objective function.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.GoalType",
            "name": "GoalType",
            "isArray": false
          },
          "name": "goalType"
        },
        "comment": "Optimization type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.OptimizationData[]",
            "name": "OptimizationData[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.optimization.OptimizationData",
              "name": "OptimizationData",
              "isArray": false
            }
          },
          "name": "optData"
        },
        "comment": "Optimization data. The following data will be looked for: InitialGuess CMAESOptimizer.Sigma CMAESOptimizer.PopulationSize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the point/value pair giving the optimal value for objective function.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
      "name": "CMAESOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointValuePair",
      "name": "PointValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]