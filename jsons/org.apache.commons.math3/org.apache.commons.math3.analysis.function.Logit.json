[
  {
    "signature": "Logit()",
    "name": "Logit",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logit",
      "name": "Logit",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.function.Logit",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "Logit(double lo,double hi)",
    "name": "Logit",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logit",
      "name": "Logit",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.function.Logit",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lo"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "hi"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lo"
        },
        "comment": "Lower bound of the function domain.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "hi"
        },
        "comment": "Higher bound of the function domain.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "value(double x)",
    "name": "value",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logit",
      "name": "Logit",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.function.Logit",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "derivative()",
    "name": "derivative",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logit",
      "name": "Logit",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.function.Logit",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
      "name": "UnivariateFunction",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure t)",
    "name": "value",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.function.Logit",
      "name": "Logit",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.function.Logit",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure",
      "name": "DerivativeStructure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.differentiation.DerivativeStructure",
          "name": "DerivativeStructure",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if parameter is outside of function domain",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]