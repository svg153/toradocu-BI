[
  {
    "signature": "BracketingNthOrderBrentSolverDFP(org.apache.commons.math3.dfp.Dfp relativeAccuracy,org.apache.commons.math3.dfp.Dfp absoluteAccuracy,org.apache.commons.math3.dfp.Dfp functionValueAccuracy,int maximalOrder)",
    "name": "BracketingNthOrderBrentSolverDFP",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
      "name": "BracketingNthOrderBrentSolverDFP",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "functionValueAccuracy"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maximalOrder"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "Relative accuracy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "Absolute accuracy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "functionValueAccuracy"
        },
        "comment": "Function value accuracy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maximalOrder"
        },
        "comment": "maximal order.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if maximal order is lower than 2",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getAbsoluteAccuracy()",
    "name": "getAbsoluteAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
      "name": "BracketingNthOrderBrentSolverDFP",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "absolute accuracy",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getAbsoluteAccuracy())"
    },
    "throwsTags": []
  },
  {
    "signature": "getRelativeAccuracy()",
    "name": "getRelativeAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
      "name": "BracketingNthOrderBrentSolverDFP",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "relative accuracy",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getRelativeAccuracy())"
    },
    "throwsTags": []
  },
  {
    "signature": "getFunctionValueAccuracy()",
    "name": "getFunctionValueAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
      "name": "BracketingNthOrderBrentSolverDFP",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "function accuracy",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "solve(int maxEval,org.apache.commons.math3.dfp.UnivariateDfpFunction f,org.apache.commons.math3.dfp.Dfp min,org.apache.commons.math3.dfp.Dfp max,org.apache.commons.math3.analysis.solvers.AllowedSolution allowedSolution)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
      "name": "BracketingNthOrderBrentSolverDFP",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.UnivariateDfpFunction",
          "name": "UnivariateDfpFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.solvers.AllowedSolution",
          "name": "AllowedSolution",
          "isArray": false
        },
        "name": "allowedSolution"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "Maximum number of evaluations.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.UnivariateDfpFunction",
            "name": "UnivariateDfpFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Function to solve.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "min"
        },
        "comment": "Lower bound for the interval.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "Upper bound for the interval.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.solvers.AllowedSolution",
            "name": "AllowedSolution",
            "isArray": false
          },
          "name": "allowedSolution"
        },
        "comment": "The kind of solutions that the root-finding algorithm may accept as solutions.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a value where the function is zero.",
      "kind": "RETURN",
      "condition": "true ?result==0"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if f is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoBracketingException",
          "name": "NoBracketingException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if root cannot be bracketed",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "solve(int maxEval,org.apache.commons.math3.dfp.UnivariateDfpFunction f,org.apache.commons.math3.dfp.Dfp min,org.apache.commons.math3.dfp.Dfp max,org.apache.commons.math3.dfp.Dfp startValue,org.apache.commons.math3.analysis.solvers.AllowedSolution allowedSolution)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
      "name": "BracketingNthOrderBrentSolverDFP",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
      "name": "Dfp",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.UnivariateDfpFunction",
          "name": "UnivariateDfpFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
          "name": "Dfp",
          "isArray": false
        },
        "name": "startValue"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.solvers.AllowedSolution",
          "name": "AllowedSolution",
          "isArray": false
        },
        "name": "allowedSolution"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "Maximum number of evaluations.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.UnivariateDfpFunction",
            "name": "UnivariateDfpFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Function to solve.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "min"
        },
        "comment": "Lower bound for the interval.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "Upper bound for the interval.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.dfp.Dfp",
            "name": "Dfp",
            "isArray": false
          },
          "name": "startValue"
        },
        "comment": "Start value to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.solvers.AllowedSolution",
            "name": "AllowedSolution",
            "isArray": false
          },
          "name": "allowedSolution"
        },
        "comment": "The kind of solutions that the root-finding algorithm may accept as solutions.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a value where the function is zero.",
      "kind": "RETURN",
      "condition": "true ?result==0"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if f is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NoBracketingException",
          "name": "NoBracketingException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if root cannot be bracketed",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]