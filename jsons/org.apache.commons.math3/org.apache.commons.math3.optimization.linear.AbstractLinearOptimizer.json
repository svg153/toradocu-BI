[
  {
    "signature": "AbstractLinearOptimizer()",
    "name": "AbstractLinearOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "restrictToNonNegative()",
    "name": "restrictToNonNegative",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the variables are restricted to non-negative values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoalType()",
    "name": "getGoalType",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.GoalType",
      "name": "GoalType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the optimization type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFunction()",
    "name": "getFunction",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.LinearObjectiveFunction",
      "name": "LinearObjectiveFunction",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the optimization type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConstraints()",
    "name": "getConstraints",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the optimization type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMaxIterations(int maxIterations)",
    "name": "setMaxIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMaxIterations()",
    "name": "getMaxIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIterations()",
    "name": "getIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "incrementIterationsCounter()",
    "name": "incrementIterationsCounter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal number of iterations is exceeded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction f,java.util.Collection constraints,org.apache.commons.math3.optimization.GoalType goalType,boolean restrictToNonNegative)",
    "name": "optimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointValuePair",
      "name": "PointValuePair",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.linear.LinearObjectiveFunction",
          "name": "LinearObjectiveFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "constraints"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.GoalType",
          "name": "GoalType",
          "isArray": false
        },
        "name": "goalType"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "restrictToNonNegative"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
      "name": "AbstractLinearOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointValuePair",
      "name": "PointValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the point/value pair giving the optimal value for objective function",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if no solution fulfilling the constraints can be found in the allowed number of iterations",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]