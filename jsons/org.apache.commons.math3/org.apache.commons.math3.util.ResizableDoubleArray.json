[
  {
    "signature": "ResizableDoubleArray()",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "Initial size of the internal storage array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "initialCapacity <= 0"
        ],
        "comment": "if initialCapacity <= 0.",
        "kind": "THROWS",
        "condition": "args[0]<=0"
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(double[] initialArray)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "initialArray"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "initialArray"
        },
        "comment": "initial array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity,float expansionFactor)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "expansionFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "Initial size of the internal storage array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "The array will be expanded based on this parameter.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if parameters are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity,double expansionFactor)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "expansionFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "Initial size of the internal storage array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "The array will be expanded based on this parameter.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if parameters are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity,float expansionFactor,float contractionCriteria)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "expansionFactor"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "contractionCriteria"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "Initial size of the internal storage array..",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "The array will be expanded based on this parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "contractionCriteria"
        },
        "comment": "Contraction criteria.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if parameters are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity,double expansionFactor,double contractionCriterion)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "expansionFactor"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "contractionCriterion"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "Initial size of the internal storage array..",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "The array will be expanded based on this parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "contractionCriterion"
        },
        "comment": "Contraction criterion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the parameters are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity,float expansionFactor,float contractionCriteria,int expansionMode)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "expansionFactor"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "contractionCriteria"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expansionMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "the initial size of the internal storage array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "the array will be expanded based on this parameter",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "contractionCriteria"
        },
        "comment": "the contraction Criteria",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "expansionMode"
        },
        "comment": "the expansion mode",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if parameters are not valid",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(int initialCapacity,double expansionFactor,double contractionCriterion,org.apache.commons.math3.util.ResizableDoubleArray.ExpansionMode expansionMode,double[] data)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": true,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "expansionFactor"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "contractionCriterion"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray.ExpansionMode",
          "name": "ExpansionMode",
          "isArray": false
        },
        "name": "expansionMode"
      },
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "Initial size of the internal storage array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "The array will be expanded based on this parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "contractionCriterion"
        },
        "comment": "Contraction criteria.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray.ExpansionMode",
            "name": "ExpansionMode",
            "isArray": false
          },
          "name": "expansionMode"
        },
        "comment": "Expansion mode.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "data"
        },
        "comment": "Initial contents of the array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the parameters are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ResizableDoubleArray(org.apache.commons.math3.util.ResizableDoubleArray original)",
    "name": "ResizableDoubleArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
          "name": "ResizableDoubleArray",
          "isArray": false
        },
        "name": "original"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
            "name": "ResizableDoubleArray",
            "isArray": false
          },
          "name": "original"
        },
        "comment": "array to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if original is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addElement(double value)",
    "name": "addElement",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "Value to be added to end of array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addElements(double[] values)",
    "name": "addElements",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "values"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "values"
        },
        "comment": "Values to be added to end of array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addElementRolling(double value)",
    "name": "addElementRolling",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "Value to be added to the array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value which has been discarded or \"pushed\" out of the array by this rolling insert.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "substituteMostRecentElement(double value)",
    "name": "substituteMostRecentElement",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "New value to substitute for the most recently added value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value that has been replaced in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalStateException",
          "name": "MathIllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is empty",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "checkContractExpand(float contraction,float expansion)",
    "name": "checkContractExpand",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "contraction"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "expansion"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "expansion"
        },
        "comment": "factor to be checked",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "contraction"
        },
        "comment": "criteria to be checked",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the contractionCriteria is less than the expansionCriteria.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "checkContractExpand(double contraction,double expansion)",
    "name": "checkContractExpand",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "contraction"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "expansion"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "contraction"
        },
        "comment": "Criterion to be checked.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "expansion"
        },
        "comment": "Factor to be checked.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "contraction < expansion"
        ],
        "comment": "if contraction < expansion.",
        "kind": "THROWS",
        "condition": "args[0]<args[1]"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "contraction <= 1"
        ],
        "comment": "if contraction <= 1.",
        "kind": "THROWS",
        "condition": "args[0]<=1"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "expansion <= 1"
        ],
        "comment": "if expansion <= 1 .",
        "kind": "THROWS",
        "condition": "args[1]<=1"
      }
    ]
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contract()",
    "name": "contract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "discardFrontElements(int i)",
    "name": "discardFrontElements",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "i"
        },
        "comment": "the number of elements to discard from the front of the array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if i is greater than numElements.",
        "kind": "THROWS",
        "condition": "args[0]>target.getNumElements()"
      }
    ]
  },
  {
    "signature": "discardMostRecentElements(int i)",
    "name": "discardMostRecentElements",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "i"
        },
        "comment": "the number of elements to discard from the end of the array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if i is greater than numElements.",
        "kind": "THROWS",
        "condition": "args[0]>target.getNumElements()"
      }
    ]
  },
  {
    "signature": "expand()",
    "name": "expand",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getContractionCriteria()",
    "name": "getContractionCriteria",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the contraction criteria used to reclaim memory.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getContractionCriterion()",
    "name": "getContractionCriterion",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the contraction criterion used to reclaim memory.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElement(int index)",
    "name": "getElement",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index to fetch a value from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "value stored at the specified index",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [
          "index",
          "getNumElements() - 1"
        ],
        "comment": "if index is less than zero or is greater than getNumElements() - 1.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "getElements()",
    "name": "getElements",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the double array.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getExpansionFactor()",
    "name": "getExpansionFactor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the expansion factor of this expandable double array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getExpansionMode()",
    "name": "getExpansionMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the expansion mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInternalLength()",
    "name": "getInternalLength",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the length of the internal storage array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCapacity()",
    "name": "getCapacity",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the length of the internal array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNumElements()",
    "name": "getNumElements",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInternalValues()",
    "name": "getInternalValues",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the internal storage array used by this object",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getArrayRef()",
    "name": "getArrayRef",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the internal storage array used by this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStartIndex()",
    "name": "getStartIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the start index.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.start())"
    },
    "throwsTags": []
  },
  {
    "signature": "setContractionCriteria(float contractionCriteria)",
    "name": "setContractionCriteria",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "contractionCriteria"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "contractionCriteria"
        },
        "comment": "contraction criteria",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the contractionCriteria is less than the expansionCriteria.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "compute(org.apache.commons.math3.util.MathArrays.Function f)",
    "name": "compute",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.MathArrays.Function",
          "name": "Function",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.MathArrays.Function",
            "name": "Function",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Function to be applied on this array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the result.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "setElement(int index,double value)",
    "name": "setElement",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index to store a value in",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value to store at the specified index",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.ArrayIndexOutOfBoundsException",
          "name": "ArrayIndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [
          "index < 0"
        ],
        "comment": "if index < 0.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "setExpansionFactor(float expansionFactor)",
    "name": "setExpansionFactor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "expansionFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "expansionFactor"
        },
        "comment": "the new expansion factor value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if expansionFactor is <= 1 or greater than contractionFactor",
        "kind": "THROWS",
        "condition": "args[0]<=1"
      }
    ]
  },
  {
    "signature": "setExpansionMode(int expansionMode)",
    "name": "setExpansionMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expansionMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "expansionMode"
        },
        "comment": "The expansionMode to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified mode value is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setExpansionMode(org.apache.commons.math3.util.ResizableDoubleArray.ExpansionMode expansionMode)",
    "name": "setExpansionMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray.ExpansionMode",
          "name": "ExpansionMode",
          "isArray": false
        },
        "name": "expansionMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray.ExpansionMode",
            "name": "ExpansionMode",
            "isArray": false
          },
          "name": "expansionMode"
        },
        "comment": "Expansion mode to use for resizing the array.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setInitialCapacity(int initialCapacity)",
    "name": "setInitialCapacity",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "of the array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "initialCapacity"
        ],
        "comment": "if initialCapacity is not positive.",
        "kind": "THROWS",
        "condition": "(args[0]>0) == false"
      }
    ]
  },
  {
    "signature": "setNumElements(int i)",
    "name": "setNumElements",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "i"
        },
        "comment": "a new number of elements",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "i"
        ],
        "comment": "if i is negative.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "start()",
    "name": "start",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the starting index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "copy(org.apache.commons.math3.util.ResizableDoubleArray source,org.apache.commons.math3.util.ResizableDoubleArray dest)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
          "name": "ResizableDoubleArray",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
          "name": "ResizableDoubleArray",
          "isArray": false
        },
        "name": "dest"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
            "name": "ResizableDoubleArray",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "ResizableDoubleArray to copy",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
            "name": "ResizableDoubleArray",
            "isArray": false
          },
          "name": "dest"
        },
        "comment": "ResizableArray to replace with a copy of the source array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either source or dest is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new ResizableDoubleArray with the same data and configuration properties as this",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "object to be compared for equality with this",
        "kind": "PARAM",
        "condition": "args[0]==target"
      }
    ],
    "returnTag": {
      "comment": "true iff object is a ResizableDoubleArray with the same data and properties as this",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.util.ResizableDoubleArray",
      "name": "ResizableDoubleArray",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.util.ResizableDoubleArray",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hash code representing this ResizableDoubleArray.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]