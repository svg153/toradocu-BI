[
  {
    "signature": "OneWayAnova()",
    "name": "OneWayAnova",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.inference.OneWayAnova",
      "name": "OneWayAnova",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.inference.OneWayAnova",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "anovaFValue(java.util.Collection categoryData)",
    "name": "anovaFValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.inference.OneWayAnova",
      "name": "OneWayAnova",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.inference.OneWayAnova",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "categoryData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "categoryData"
        },
        "comment": "Collection of double[] arrays each containing data for one category",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Fvalue",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "null"
        ],
        "comment": "if categoryData is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "double[]"
        ],
        "comment": "if the length of the categoryData array is less than 2 or a contained double[] array does not have at least two values",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "anovaPValue(java.util.Collection categoryData)",
    "name": "anovaPValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.inference.OneWayAnova",
      "name": "OneWayAnova",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.inference.OneWayAnova",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "categoryData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "categoryData"
        },
        "comment": "Collection of double[] arrays each containing data for one category",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Pvalue",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "null"
        ],
        "comment": "if categoryData is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "double[]"
        ],
        "comment": "if the length of the categoryData array is less than 2 or a contained double[] array does not have at least two values",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.ConvergenceException",
          "name": "ConvergenceException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the p-value can not be computed due to a convergence error",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum number of iterations is exceeded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "anovaPValue(java.util.Collection categoryData,boolean allowOneElementData)",
    "name": "anovaPValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.inference.OneWayAnova",
      "name": "OneWayAnova",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.inference.OneWayAnova",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "categoryData"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "allowOneElementData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "categoryData"
        },
        "comment": "Collection of SummaryStatistics each containing data for one category",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "allowOneElementData"
        },
        "comment": "if true, allow computation for one catagory only or for one data element per category",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Pvalue",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "null"
        ],
        "comment": "if categoryData is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "SummaryStatistics"
        ],
        "comment": "if the length of the categoryData array is less than 2 or a contained SummaryStatistics does not have at least two values",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.ConvergenceException",
          "name": "ConvergenceException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the p-value can not be computed due to a convergence error",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum number of iterations is exceeded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "anovaTest(java.util.Collection categoryData,double alpha)",
    "name": "anovaTest",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.stat.inference.OneWayAnova",
      "name": "OneWayAnova",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.stat.inference.OneWayAnova",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "categoryData"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "alpha"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "categoryData"
        },
        "comment": "Collection of double[] arrays each containing data for one category",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "alpha"
        },
        "comment": "significance level of the test",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the null hypothesis can be rejected with confidence 1 - alpha",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "null"
        ],
        "comment": "if categoryData is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "categoryData",
          "double[]"
        ],
        "comment": "if the length of the categoryData array is less than 2 or a contained double[] array does not have at least two values",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [
          "alpha"
        ],
        "comment": "if alpha is not in the range (0, 0.5]",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.ConvergenceException",
          "name": "ConvergenceException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the p-value can not be computed due to a convergence error",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum number of iterations is exceeded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]