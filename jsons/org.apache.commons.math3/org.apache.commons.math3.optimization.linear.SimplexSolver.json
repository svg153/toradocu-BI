[
  {
    "signature": "SimplexSolver()",
    "name": "SimplexSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "SimplexSolver(double epsilon,int maxUlps)",
    "name": "SimplexSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "epsilon"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxUlps"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "epsilon"
        },
        "comment": "the amount of error to accept for algorithm convergence",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxUlps"
        },
        "comment": "amount of error to accept in floating point comparisons",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau tableau)",
    "name": "doIteration",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexTableau",
          "name": "SimplexTableau",
          "isArray": false
        },
        "name": "tableau"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexTableau",
            "name": "SimplexTableau",
            "isArray": false
          },
          "name": "tableau"
        },
        "comment": "simple tableau for the problem",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal iteration count has been exceeded",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.optimization.linear.UnboundedSolutionException",
          "name": "UnboundedSolutionException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the model is found not to have a bounded solution",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau tableau)",
    "name": "solvePhase1",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexTableau",
          "name": "SimplexTableau",
          "isArray": false
        },
        "name": "tableau"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexTableau",
            "name": "SimplexTableau",
            "isArray": false
          },
          "name": "tableau"
        },
        "comment": "simple tableau for the problem",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal iteration count has been exceeded",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.optimization.linear.UnboundedSolutionException",
          "name": "UnboundedSolutionException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the model is found not to have a bounded solution",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException",
          "name": "NoFeasibleSolutionException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is no feasible solution",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointValuePair",
      "name": "PointValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]