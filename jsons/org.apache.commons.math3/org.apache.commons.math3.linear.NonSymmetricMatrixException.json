[
  {
    "signature": "NonSymmetricMatrixException(int row,int column,double threshold)",
    "name": "NonSymmetricMatrixException",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
      "name": "NonSymmetricMatrixException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "threshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "Row index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "Column index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "threshold"
        },
        "comment": "Relative symmetry threshold.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRow()",
    "name": "getRow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
      "name": "NonSymmetricMatrixException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the row index of the entry.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getColumn()",
    "name": "getColumn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
      "name": "NonSymmetricMatrixException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the column index of the entry.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getThreshold()",
    "name": "getThreshold",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
      "name": "NonSymmetricMatrixException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.NonSymmetricMatrixException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the relative symmetry threshold.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]