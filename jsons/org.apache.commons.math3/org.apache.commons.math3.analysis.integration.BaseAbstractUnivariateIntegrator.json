[
  {
    "signature": "BaseAbstractUnivariateIntegrator(double relativeAccuracy,double absoluteAccuracy,int minimalIterationCount,int maximalIterationCount)",
    "name": "BaseAbstractUnivariateIntegrator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minimalIterationCount"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maximalIterationCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "relative accuracy of the result",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "absolute accuracy of the result",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minimalIterationCount"
        },
        "comment": "minimum number of iterations",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maximalIterationCount"
        },
        "comment": "maximum number of iterations",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if minimal number of iterations is not strictly positive",
        "kind": "THROWS",
        "condition": "(args[2]>0) == false"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if maximal number of iterations is lesser than or equal to the minimal number of iterations",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "BaseAbstractUnivariateIntegrator(double relativeAccuracy,double absoluteAccuracy)",
    "name": "BaseAbstractUnivariateIntegrator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "relative accuracy of the result",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "absolute accuracy of the result",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "BaseAbstractUnivariateIntegrator(int minimalIterationCount,int maximalIterationCount)",
    "name": "BaseAbstractUnivariateIntegrator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minimalIterationCount"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maximalIterationCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minimalIterationCount"
        },
        "comment": "minimum number of iterations",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maximalIterationCount"
        },
        "comment": "maximum number of iterations",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if minimal number of iterations is not strictly positive",
        "kind": "THROWS",
        "condition": "(args[0]>0) == false"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if maximal number of iterations is lesser than or equal to the minimal number of iterations",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRelativeAccuracy()",
    "name": "getRelativeAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAbsoluteAccuracy()",
    "name": "getAbsoluteAccuracy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMinimalIterationCount()",
    "name": "getMinimalIterationCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMaximalIterationCount()",
    "name": "getMaximalIterationCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEvaluations()",
    "name": "getEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIterations()",
    "name": "getIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "incrementCount()",
    "name": "incrementCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the number of iterations exceeds the allowed maximum number",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getMin()",
    "name": "getMin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the lower bound.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMax()",
    "name": "getMax",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the upper bound.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "computeObjectiveValue(double point)",
    "name": "computeObjectiveValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "point"
        },
        "comment": "Point at which the objective function must be evaluated.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the objective function value at specified point.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal number of function evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setup(int maxEval,org.apache.commons.math3.analysis.UnivariateFunction f,double lower,double upper)",
    "name": "setup",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
          "name": "UnivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lower"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "upper"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "Maximum number of evaluations.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
            "name": "UnivariateFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "the integrand function",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lower"
        },
        "comment": "the min bound for the interval",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "upper"
        },
        "comment": "the upper bound for the interval",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "f",
          "null"
        ],
        "comment": "if f is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "min >= max"
        ],
        "comment": "if min >= max.",
        "kind": "THROWS",
        "condition": "args[0]>=args[0]"
      }
    ]
  },
  {
    "signature": "integrate(int maxEval,org.apache.commons.math3.analysis.UnivariateFunction f,double lower,double upper)",
    "name": "integrate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.UnivariateFunction",
          "name": "UnivariateFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lower"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "upper"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doIntegrate()",
    "name": "doIntegrate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
      "name": "BaseAbstractUnivariateIntegrator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the root.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximal number of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MaxCountExceededException",
          "name": "MaxCountExceededException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the maximum iteration count is exceeded or the integrator detects convergence problems otherwise",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]