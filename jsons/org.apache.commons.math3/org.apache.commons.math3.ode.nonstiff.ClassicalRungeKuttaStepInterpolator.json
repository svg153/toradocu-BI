[
  {
    "signature": "ClassicalRungeKuttaStepInterpolator()",
    "name": "ClassicalRungeKuttaStepInterpolator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
      "name": "ClassicalRungeKuttaStepInterpolator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ClassicalRungeKuttaStepInterpolator(org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator interpolator)",
    "name": "ClassicalRungeKuttaStepInterpolator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
      "name": "ClassicalRungeKuttaStepInterpolator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
          "name": "ClassicalRungeKuttaStepInterpolator",
          "isArray": false
        },
        "name": "interpolator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
            "name": "ClassicalRungeKuttaStepInterpolator",
            "isArray": false
          },
          "name": "interpolator"
        },
        "comment": "interpolator to copy from. The copy is a deep copy: its arrays are separated from the original arrays of the instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "doCopy()",
    "name": "doCopy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
      "name": "ClassicalRungeKuttaStepInterpolator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ode.sampling.StepInterpolator",
      "name": "StepInterpolator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "computeInterpolatedStateAndDerivatives(double theta,double oneMinusThetaH)",
    "name": "computeInterpolatedStateAndDerivatives",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
      "name": "ClassicalRungeKuttaStepInterpolator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "theta"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "oneMinusThetaH"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]