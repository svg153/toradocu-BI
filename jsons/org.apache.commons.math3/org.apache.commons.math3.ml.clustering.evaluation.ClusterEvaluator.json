[
  {
    "signature": "ClusterEvaluator()",
    "name": "ClusterEvaluator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
      "name": "ClusterEvaluator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ClusterEvaluator(org.apache.commons.math3.ml.distance.DistanceMeasure measure)",
    "name": "ClusterEvaluator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
      "name": "ClusterEvaluator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ml.distance.DistanceMeasure",
          "name": "DistanceMeasure",
          "isArray": false
        },
        "name": "measure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ml.distance.DistanceMeasure",
            "name": "DistanceMeasure",
            "isArray": false
          },
          "name": "measure"
        },
        "comment": "the distance measure to use",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "score(java.util.List clusters)",
    "name": "score",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
      "name": "ClusterEvaluator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "clusters"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "clusters"
        },
        "comment": "the clusters to evaluate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the computed score",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBetterScore(double score1,double score2)",
    "name": "isBetterScore",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
      "name": "ClusterEvaluator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "score1"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "score2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "score1"
        },
        "comment": "the first score",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "score2"
        },
        "comment": "the second score",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the first score is considered to be better, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "distance(org.apache.commons.math3.ml.clustering.Clusterable p1,org.apache.commons.math3.ml.clustering.Clusterable p2)",
    "name": "distance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
      "name": "ClusterEvaluator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ml.clustering.Clusterable",
          "name": "Clusterable",
          "isArray": false
        },
        "name": "p1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ml.clustering.Clusterable",
          "name": "Clusterable",
          "isArray": false
        },
        "name": "p2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ml.clustering.Clusterable",
            "name": "Clusterable",
            "isArray": false
          },
          "name": "p1"
        },
        "comment": "the first clusterable",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ml.clustering.Clusterable",
            "name": "Clusterable",
            "isArray": false
          },
          "name": "p2"
        },
        "comment": "the second clusterable",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the distance between the two clusterables",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "centroidOf(org.apache.commons.math3.ml.clustering.Cluster cluster)",
    "name": "centroidOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
      "name": "ClusterEvaluator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.ml.clustering.Clusterable",
      "name": "Clusterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.ml.clustering.Cluster",
          "name": "Cluster",
          "isArray": false
        },
        "name": "cluster"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.ml.clustering.Cluster",
            "name": "Cluster",
            "isArray": false
          },
          "name": "cluster"
        },
        "comment": "the cluster",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the computed centroid for the cluster, or null if the cluster does not contain any points",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]