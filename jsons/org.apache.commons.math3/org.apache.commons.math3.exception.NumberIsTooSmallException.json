[
  {
    "signature": "NumberIsTooSmallException(java.lang.Number wrong,java.lang.Number min,boolean boundIsAllowed)",
    "name": "NumberIsTooSmallException",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
      "name": "NumberIsTooSmallException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NumberIsTooSmallException",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "wrong"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "boundIsAllowed"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "wrong"
        },
        "comment": "Value that is smaller than the minimum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "min"
        },
        "comment": "Minimum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "boundIsAllowed"
        },
        "comment": "Whether min is included in the allowed range.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable specific,java.lang.Number wrong,java.lang.Number min,boolean boundIsAllowed)",
    "name": "NumberIsTooSmallException",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
      "name": "NumberIsTooSmallException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NumberIsTooSmallException",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.exception.util.Localizable",
          "name": "Localizable",
          "isArray": false
        },
        "name": "specific"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "wrong"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "boundIsAllowed"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.exception.util.Localizable",
            "name": "Localizable",
            "isArray": false
          },
          "name": "specific"
        },
        "comment": "Specific context pattern.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "wrong"
        },
        "comment": "Value that is smaller than the minimum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "min"
        },
        "comment": "Minimum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "boundIsAllowed"
        },
        "comment": "Whether min is included in the allowed range.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getBoundIsAllowed()",
    "name": "getBoundIsAllowed",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
      "name": "NumberIsTooSmallException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NumberIsTooSmallException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the minimum is included in the allowed range.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMin()",
    "name": "getMin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
      "name": "NumberIsTooSmallException",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.exception.NumberIsTooSmallException",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "Number",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the minimum.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]