[
  {
    "signature": "LevenbergMarquardtOptimizer()",
    "name": "LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "LevenbergMarquardtOptimizer(double initialStepBoundFactor,double costRelativeTolerance,double parRelativeTolerance,double orthoTolerance,double qrRankingThreshold)",
    "name": "LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "initialStepBoundFactor"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "costRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "parRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "orthoTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "qrRankingThreshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "initialStepBoundFactor"
        },
        "comment": "initial step bound factor",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "costRelativeTolerance"
        },
        "comment": "cost relative tolerance",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "parRelativeTolerance"
        },
        "comment": "parameters relative tolerance",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "orthoTolerance"
        },
        "comment": "orthogonality tolerance",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "qrRankingThreshold"
        },
        "comment": "threshold in the QR decomposition. Columns with a 2 norm less than this threshold are considered to be all 0s.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "withInitialStepBoundFactor(double newInitialStepBoundFactor)",
    "name": "withInitialStepBoundFactor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newInitialStepBoundFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "newInitialStepBoundFactor"
        },
        "comment": "Positive input variable used in determining the initial step bound. This bound is set to the product of initialStepBoundFactor and the euclidean norm of diag * x if non-zero, or else to newInitialStepBoundFactor itself. In most cases factor should lie in the interval (0.1, 100.0). 100 is a generally recommended value. of the matrix is reduced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withCostRelativeTolerance(double newCostRelativeTolerance)",
    "name": "withCostRelativeTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newCostRelativeTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "newCostRelativeTolerance"
        },
        "comment": "Desired relative error in the sum of squares.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withParameterRelativeTolerance(double newParRelativeTolerance)",
    "name": "withParameterRelativeTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newParRelativeTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "newParRelativeTolerance"
        },
        "comment": "Desired relative error in the approximate solution parameters.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withOrthoTolerance(double newOrthoTolerance)",
    "name": "withOrthoTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newOrthoTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "newOrthoTolerance"
        },
        "comment": "Desired max cosine on the orthogonality between the function vector and the columns of the Jacobian.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withRankingThreshold(double newQRRankingThreshold)",
    "name": "withRankingThreshold",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "newQRRankingThreshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "newQRRankingThreshold"
        },
        "comment": "Desired threshold for QR ranking. If the squared norm of a column vector is smaller or equal to this threshold during QR decomposition, it is considered to be a zero vector and hence the rank of the matrix is reduced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInitialStepBoundFactor()",
    "name": "getInitialStepBoundFactor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the parameter's value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCostRelativeTolerance()",
    "name": "getCostRelativeTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the parameter's value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getParameterRelativeTolerance()",
    "name": "getParameterRelativeTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the parameter's value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOrthoTolerance()",
    "name": "getOrthoTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the parameter's value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRankingThreshold()",
    "name": "getRankingThreshold",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the parameter's value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "optimize(org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem problem)",
    "name": "optimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.Optimum",
      "name": "Optimum",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem",
          "name": "LeastSquaresProblem",
          "isArray": false
        },
        "name": "problem"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]