[
  {
    "signature": "EnumeratedDistribution(java.util.List pmf)",
    "name": "EnumeratedDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "pmf"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "pmf"
        },
        "comment": "probability mass function enumerated as a list of pairs.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotPositiveException",
          "name": "NotPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the probabilities are negative.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotFiniteNumberException",
          "name": "NotFiniteNumberException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the probabilities are infinite.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotANumberException",
          "name": "NotANumberException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the probabilities are NaN.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException",
          "name": "MathArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "all of the probabilities are 0.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "EnumeratedDistribution(org.apache.commons.math3.random.RandomGenerator rng,java.util.List pmf)",
    "name": "EnumeratedDistribution",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
          "name": "RandomGenerator",
          "isArray": false
        },
        "name": "rng"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "pmf"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.random.RandomGenerator",
            "name": "RandomGenerator",
            "isArray": false
          },
          "name": "rng"
        },
        "comment": "random number generator.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "pmf"
        },
        "comment": "probability mass function enumerated as a list of pairs.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotPositiveException",
          "name": "NotPositiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the probabilities are negative.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotFiniteNumberException",
          "name": "NotFiniteNumberException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the probabilities are infinite.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotANumberException",
          "name": "NotANumberException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the probabilities are NaN.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.MathArithmeticException",
          "name": "MathArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "all of the probabilities are 0.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "reseedRandomGenerator(long seed)",
    "name": "reseedRandomGenerator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "seed"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "seed"
        },
        "comment": "the new seed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "probability(java.lang.Object x)",
    "name": "probability",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "the point at which the PMF is evaluated",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value of the probability mass function at x",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPmf()",
    "name": "getPmf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the probability mass function.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sample()",
    "name": "sample",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a random value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sample(int sampleSize)",
    "name": "sample",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "sampleSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "sampleSize"
        },
        "comment": "the number of random values to generate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array representing the random sample.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [
          "sampleSize"
        ],
        "comment": "if sampleSize is not positive.",
        "kind": "THROWS",
        "condition": "(args[0]>0) == false"
      }
    ]
  },
  {
    "signature": "sample(int sampleSize,java.lang.Object[] array)",
    "name": "sample",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.distribution.EnumeratedDistribution",
      "name": "EnumeratedDistribution",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.distribution.EnumeratedDistribution",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "sampleSize"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "sampleSize"
        },
        "comment": "the number of random values to generate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array to populate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array representing the random sample.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NotStrictlyPositiveException",
          "name": "NotStrictlyPositiveException",
          "isArray": false
        },
        "codeTags": [
          "sampleSize"
        ],
        "comment": "if sampleSize is not positive.",
        "kind": "THROWS",
        "condition": "(args[0]>0) == false"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [
          "array"
        ],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  }
]