[
  {
    "signature": "SparseFieldVector(org.apache.commons.math3.Field field)",
    "name": "SparseFieldVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.Field",
            "name": "Field",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "Field to which the elements belong.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "SparseFieldVector(org.apache.commons.math3.Field field,int dimension)",
    "name": "SparseFieldVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dimension"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.Field",
            "name": "Field",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "Field to which the elements belong.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dimension"
        },
        "comment": "Size of the vector.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "SparseFieldVector(org.apache.commons.math3.linear.SparseFieldVector v,int resize)",
    "name": "SparseFieldVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
          "name": "SparseFieldVector",
          "isArray": false
        },
        "name": "v"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "resize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
            "name": "SparseFieldVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Original vector",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "resize"
        },
        "comment": "Amount to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "SparseFieldVector(org.apache.commons.math3.Field field,int dimension,int expectedSize)",
    "name": "SparseFieldVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dimension"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expectedSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.Field",
            "name": "Field",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "Field to which the elements belong.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dimension"
        },
        "comment": "Size of the vector.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "expectedSize"
        },
        "comment": "Expected number of non-zero entries.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "SparseFieldVector(org.apache.commons.math3.Field field,org.apache.commons.math3.FieldElement[] values)",
    "name": "SparseFieldVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement[]",
          "name": "FieldElement[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.math3.FieldElement",
            "name": "FieldElement",
            "isArray": false
          }
        },
        "name": "values"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.Field",
            "name": "Field",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "Field to which the elements belong.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.FieldElement[]",
            "name": "FieldElement[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.math3.FieldElement",
              "name": "FieldElement",
              "isArray": false
            }
          },
          "name": "values"
        },
        "comment": "Set of values to create from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if values is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "SparseFieldVector(org.apache.commons.math3.linear.SparseFieldVector v)",
    "name": "SparseFieldVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
          "name": "SparseFieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
            "name": "SparseFieldVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Instance to copy.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "add(org.apache.commons.math3.linear.SparseFieldVector v)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
          "name": "SparseFieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
            "name": "SparseFieldVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Vector to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this + v.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "v",
          "this"
        ],
        "comment": "if v is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "append(org.apache.commons.math3.linear.SparseFieldVector v)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
          "name": "SparseFieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
            "name": "SparseFieldVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Vector to append to this one.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new vector.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "append(org.apache.commons.math3.linear.FieldVector v)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "append(org.apache.commons.math3.FieldElement d)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if d is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "dotProduct(org.apache.commons.math3.linear.FieldVector v)",
    "name": "dotProduct",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ebeDivide(org.apache.commons.math3.linear.FieldVector v)",
    "name": "ebeDivide",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ebeMultiply(org.apache.commons.math3.linear.FieldVector v)",
    "name": "ebeMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getData()",
    "name": "getData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDimension()",
    "name": "getDimension",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEntry(int index)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getField()",
    "name": "getField",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.Field",
      "name": "Field",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSubVector(int index,int n)",
    "name": "getSubVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapAdd(org.apache.commons.math3.FieldElement d)",
    "name": "mapAdd",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapAddToSelf(org.apache.commons.math3.FieldElement d)",
    "name": "mapAddToSelf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapDivide(org.apache.commons.math3.FieldElement d)",
    "name": "mapDivide",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapDivideToSelf(org.apache.commons.math3.FieldElement d)",
    "name": "mapDivideToSelf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapInv()",
    "name": "mapInv",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapInvToSelf()",
    "name": "mapInvToSelf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapMultiply(org.apache.commons.math3.FieldElement d)",
    "name": "mapMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapMultiplyToSelf(org.apache.commons.math3.FieldElement d)",
    "name": "mapMultiplyToSelf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapSubtract(org.apache.commons.math3.FieldElement d)",
    "name": "mapSubtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mapSubtractToSelf(org.apache.commons.math3.FieldElement d)",
    "name": "mapSubtractToSelf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "outerProduct(org.apache.commons.math3.linear.SparseFieldVector v)",
    "name": "outerProduct",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "FieldMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
          "name": "SparseFieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
            "name": "SparseFieldVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "vector with which outer product should be computed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the matrix outer product between instance and v",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "outerProduct(org.apache.commons.math3.linear.FieldVector v)",
    "name": "outerProduct",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
      "name": "FieldMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "projection(org.apache.commons.math3.linear.FieldVector v)",
    "name": "projection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "set(org.apache.commons.math3.FieldElement value)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if value is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "setEntry(int index,org.apache.commons.math3.FieldElement value)",
    "name": "setEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if value is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "setSubVector(int index,org.apache.commons.math3.linear.FieldVector v)",
    "name": "setSubVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "subtract(org.apache.commons.math3.linear.SparseFieldVector v)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
          "name": "SparseFieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
            "name": "SparseFieldVector",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "vector to be subtracted",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this - v",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [
          "v",
          "this"
        ],
        "comment": "if v is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "subtract(org.apache.commons.math3.linear.FieldVector v)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toArray()",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkVectorDimensions(int n)",
    "name": "checkVectorDimensions",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "Expected dimension.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the dimensions do not match.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.apache.commons.math3.linear.FieldVector v)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
      "name": "FieldVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor visitor)",
    "name": "walkInDefaultOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
          "name": "FieldVectorPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
            "name": "FieldVectorPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "the visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor visitor,int start,int end)",
    "name": "walkInDefaultOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
          "name": "FieldVectorPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
            "name": "FieldVectorPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the first entry to be visited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the last entry to be visited (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "end < start"
        ],
        "comment": "if end < start.",
        "kind": "THROWS",
        "condition": "args[2]<args[1]"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor visitor)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
          "name": "FieldVectorPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
            "name": "FieldVectorPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "the visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorPreservingVisitor visitor,int start,int end)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
          "name": "FieldVectorPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorPreservingVisitor",
            "name": "FieldVectorPreservingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the first entry to be visited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the last entry to be visited (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorPreservingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "end < start"
        ],
        "comment": "if end < start.",
        "kind": "THROWS",
        "condition": "args[2]<args[1]"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor visitor)",
    "name": "walkInDefaultOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
          "name": "FieldVectorChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
            "name": "FieldVectorChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "the visitor to be used to process and modify the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInDefaultOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor visitor,int start,int end)",
    "name": "walkInDefaultOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
          "name": "FieldVectorChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
            "name": "FieldVectorChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the first entry to be visited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the last entry to be visited (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "end < start"
        ],
        "comment": "if end < start.",
        "kind": "THROWS",
        "condition": "args[2]<args[1]"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor visitor)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
          "name": "FieldVectorChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
            "name": "FieldVectorChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "the visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldVectorChangingVisitor visitor,int start,int end)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
          "name": "FieldVectorChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.linear.FieldVectorChangingVisitor",
            "name": "FieldVectorChangingVisitor",
            "isArray": false
          },
          "name": "visitor"
        },
        "comment": "visitor to be used to process the entries of this vector",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the first entry to be visited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the last entry to be visited (inclusive)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value returned by FieldVectorChangingVisitor.end() at the end of the walk",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [
          "end < start"
        ],
        "comment": "if end < start.",
        "kind": "THROWS",
        "condition": "args[2]<args[1]"
      },
      {
        "exception": {
          "qualifiedName": "org.apache.commons.math3.exception.OutOfRangeException",
          "name": "OutOfRangeException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the indices are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.SparseFieldVector",
      "name": "SparseFieldVector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.SparseFieldVector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]