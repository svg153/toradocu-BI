[
  {
    "signature": "VF2MappingIterator(org.jgrapht.alg.isomorphism.GraphOrdering ordering1,org.jgrapht.alg.isomorphism.GraphOrdering ordering2,java.util.Comparator vertexComparator,java.util.Comparator edgeComparator)",
    "name": "VF2MappingIterator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
      "name": "VF2MappingIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.isomorphism.GraphOrdering",
          "name": "GraphOrdering",
          "isArray": false
        },
        "name": "ordering1"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.isomorphism.GraphOrdering",
          "name": "GraphOrdering",
          "isArray": false
        },
        "name": "ordering2"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "vertexComparator"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "edgeComparator"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "match()",
    "name": "match",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
      "name": "VF2MappingIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "null or one matching between graph1 and graph2",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "matchAndCheck()",
    "name": "matchAndCheck",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
      "name": "VF2MappingIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
      "name": "VF2MappingIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
      "name": "VF2MappingIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
      "name": "VF2MappingIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.VF2MappingIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]