[
  {
    "signature": "AStarShortestPath(org.jgrapht.Graph graph)",
    "name": "AStarShortestPath",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.AStarShortestPath",
      "name": "AStarShortestPath",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.AStarShortestPath",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getShortestPath(java.lang.Object sourceVertex,java.lang.Object targetVertex,org.jgrapht.alg.interfaces.AStarAdmissibleHeuristic admissibleHeuristic)",
    "name": "getShortestPath",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.AStarShortestPath",
      "name": "AStarShortestPath",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.AStarShortestPath",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.GraphPath",
      "name": "GraphPath",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "sourceVertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "targetVertex"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.interfaces.AStarAdmissibleHeuristic",
          "name": "AStarAdmissibleHeuristic",
          "isArray": false
        },
        "name": "admissibleHeuristic"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "sourceVertex"
        },
        "comment": "source vertex",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "targetVertex"
        },
        "comment": "target vertex",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.alg.interfaces.AStarAdmissibleHeuristic",
            "name": "AStarAdmissibleHeuristic",
            "isArray": false
          },
          "name": "admissibleHeuristic"
        },
        "comment": "admissible heuristic which estimates the distance from a node to the target node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the shortest path from sourceVertex to targetVertex",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNumberOfExpandedNodes()",
    "name": "getNumberOfExpandedNodes",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.AStarShortestPath",
      "name": "AStarShortestPath",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.AStarShortestPath",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "number of expanded nodes",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]