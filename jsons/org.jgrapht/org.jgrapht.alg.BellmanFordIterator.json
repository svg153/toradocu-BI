[
  {
    "signature": "BellmanFordIterator(org.jgrapht.Graph graph,java.lang.Object startVertex,double epsilon)",
    "name": "BellmanFordIterator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "startVertex"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "epsilon"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.Graph",
            "name": "Graph",
            "isArray": false
          },
          "name": "graph"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "startVertex"
        },
        "comment": "start vertex.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "epsilon"
        },
        "comment": "tolerance factor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getPathElement(java.lang.Object endVertex)",
    "name": "getPathElement",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
      "name": "BellmanFordPathElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "endVertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "endVertex"
        },
        "comment": "end vertex.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": ".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if at least one path has been improved during the previous pass, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "assertValidEdge(java.lang.Object edge)",
    "name": "assertValidEdge",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "edge"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the graph is undirected and the edge-weight is negative.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "calculatePathCost(java.lang.Object vertex,java.lang.Object edge)",
    "name": "calculatePathCost",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "a vertex which has just been encountered.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "edge"
        },
        "comment": "the edge via which the vertex was encountered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the cost obtained by concatenation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "edgesOfIterator(java.lang.Object vertex)",
    "name": "edgesOfIterator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": ".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPrevSeenData(java.lang.Object vertex)",
    "name": "getPrevSeenData",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
      "name": "BellmanFordPathElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "a vertex which has already been seen.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "data associated with the seen vertex or null if no data was associated with the vertex.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSeenData(java.lang.Object vertex)",
    "name": "getSeenData",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
      "name": "BellmanFordPathElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "a vertex which has already been seen.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "data associated with the seen vertex or null if no data was associated with the vertex.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSeenVertex(java.lang.Object vertex)",
    "name": "isSeenVertex",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "vertex in question.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if vertex has already been seen.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "putPrevSeenData(java.lang.Object vertex,org.jgrapht.alg.BellmanFordPathElement data)",
    "name": "putPrevSeenData",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
      "name": "BellmanFordPathElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
          "name": "BellmanFordPathElement",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
            "name": "BellmanFordPathElement",
            "isArray": false
          },
          "name": "data"
        },
        "comment": "",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": ".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "putSeenData(java.lang.Object vertex,org.jgrapht.alg.BellmanFordPathElement data)",
    "name": "putSeenData",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordIterator",
      "name": "BellmanFordIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.BellmanFordIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
      "name": "BellmanFordPathElement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
          "name": "BellmanFordPathElement",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "a vertex which has been seen.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.alg.BellmanFordPathElement",
            "name": "BellmanFordPathElement",
            "isArray": false
          },
          "name": "data"
        },
        "comment": "data to be associated with the seen vertex.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "previous value associated with specified vertex or null if no data was associated with the vertex.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]