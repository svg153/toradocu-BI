[
  {
    "signature": "WheelGraphGenerator(int size)",
    "name": "WheelGraphGenerator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.WheelGraphGenerator",
      "name": "WheelGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.WheelGraphGenerator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "number of vertices to be generated.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "WheelGraphGenerator(int size,boolean inwardSpokes)",
    "name": "WheelGraphGenerator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.WheelGraphGenerator",
      "name": "WheelGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.WheelGraphGenerator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "inwardSpokes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "number of vertices to be generated.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "inwardSpokes"
        },
        "comment": "if true and graph is directed, spokes are oriented from rim to hub; else from hub to rim.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "generateGraph(org.jgrapht.Graph target,org.jgrapht.VertexFactory vertexFactory,java.util.Map resultMap)",
    "name": "generateGraph",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.WheelGraphGenerator",
      "name": "WheelGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.WheelGraphGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "target"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.VertexFactory",
          "name": "VertexFactory",
          "isArray": false
        },
        "name": "vertexFactory"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "resultMap"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]