[
  {
    "signature": "getVertexCorrespondence(java.lang.Object vertex,boolean forward)",
    "name": "getVertexCorrespondence",
    "containingClass": {
      "qualifiedName": "org.jgrapht.GraphMapping",
      "name": "GraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.GraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "forward"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "vertex"
        },
        "comment": "vertex in one of the graphs",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "forward"
        },
        "comment": "if true, uses mapping from graph1 to graph2; if false, use mapping from graph2 to graph1",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "corresponding vertex in other graph, or null if none",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEdgeCorrespondence(java.lang.Object edge,boolean forward)",
    "name": "getEdgeCorrespondence",
    "containingClass": {
      "qualifiedName": "org.jgrapht.GraphMapping",
      "name": "GraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.GraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "edge"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "forward"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "edge"
        },
        "comment": "edge in one of the graphs",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "forward"
        },
        "comment": "if true, uses mapping from graph1 to graph2; if false, use mapping from graph2 to graph1",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "corresponding edge in other graph, or null if none",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]