[
  {
    "signature": "FibonacciHeap()",
    "name": "FibonacciHeap",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the heap is empty, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "decreaseKey(org.jgrapht.util.FibonacciHeapNode x,double k)",
    "name": "decreaseKey",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "k"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "node to decrease the key of",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "k"
        },
        "comment": "new key value for node x",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "Thrown if k is larger than x.key value.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "delete(org.jgrapht.util.FibonacciHeapNode x)",
    "name": "delete",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "node to remove from heap",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "insert(org.jgrapht.util.FibonacciHeapNode node,double key)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "new node to insert into heap",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key value associated with data object",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "min()",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
      "name": "FibonacciHeapNode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "heap node with the smallest key",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeMin()",
    "name": "removeMin",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
      "name": "FibonacciHeapNode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "node with the smallest key",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "number of elements in the heap",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "union(org.jgrapht.util.FibonacciHeap h1,org.jgrapht.util.FibonacciHeap h2)",
    "name": "union",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeap",
          "name": "FibonacciHeap",
          "isArray": false
        },
        "name": "h1"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeap",
          "name": "FibonacciHeap",
          "isArray": false
        },
        "name": "h2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeap",
            "name": "FibonacciHeap",
            "isArray": false
          },
          "name": "h1"
        },
        "comment": "first heap",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeap",
            "name": "FibonacciHeap",
            "isArray": false
          },
          "name": "h2"
        },
        "comment": "second heap",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "new heap containing h1 and h2",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "String of this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cascadingCut(org.jgrapht.util.FibonacciHeapNode y)",
    "name": "cascadingCut",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "node to perform cascading cut on",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "consolidate()",
    "name": "consolidate",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cut(org.jgrapht.util.FibonacciHeapNode x,org.jgrapht.util.FibonacciHeapNode y)",
    "name": "cut",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "child of y to be removed from y's child list",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "parent of x about to lose a child",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "link(org.jgrapht.util.FibonacciHeapNode y,org.jgrapht.util.FibonacciHeapNode x)",
    "name": "link",
    "containingClass": {
      "qualifiedName": "org.jgrapht.util.FibonacciHeap",
      "name": "FibonacciHeap",
      "isArray": false
    },
    "targetClass": "org.jgrapht.util.FibonacciHeap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
          "name": "FibonacciHeapNode",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "node to become child",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.util.FibonacciHeapNode",
            "name": "FibonacciHeapNode",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "node to become parent",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]