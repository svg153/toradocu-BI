[
  {
    "signature": "RandomGraphGenerator(int aNumOfVertexes,int aNumOfEdges)",
    "name": "RandomGraphGenerator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.RandomGraphGenerator",
      "name": "RandomGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.RandomGraphGenerator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "aNumOfVertexes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "aNumOfEdges"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "RandomGraphGenerator(int aNumOfVertexes,int aNumOfEdges,long seed)",
    "name": "RandomGraphGenerator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.RandomGraphGenerator",
      "name": "RandomGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.RandomGraphGenerator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "aNumOfVertexes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "aNumOfEdges"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "seed"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRandomSeed()",
    "name": "getRandomSeed",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.RandomGraphGenerator",
      "name": "RandomGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.RandomGraphGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "generateGraph(org.jgrapht.Graph target,org.jgrapht.VertexFactory vertexFactory,java.util.Map resultMap)",
    "name": "generateGraph",
    "containingClass": {
      "qualifiedName": "org.jgrapht.generate.RandomGraphGenerator",
      "name": "RandomGraphGenerator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.generate.RandomGraphGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.Graph",
          "name": "Graph",
          "isArray": false
        },
        "name": "target"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.VertexFactory",
          "name": "VertexFactory",
          "isArray": false
        },
        "name": "vertexFactory"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "resultMap"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the aNumOfEdges passed in the constructor, cannot be created on a graph of the concrete type with aNumOfVertexes. org.jgrapht.generate.RandomGraphGenerator.DefaultEdgeTopologyFactory#isNumberOfEdgesValid(org.jgrapht.Graph, int)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]