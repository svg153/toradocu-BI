[
  {
    "signature": "TopologicalOrderIterator(org.jgrapht.DirectedGraph dg)",
    "name": "TopologicalOrderIterator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.traverse.TopologicalOrderIterator",
      "name": "TopologicalOrderIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.traverse.TopologicalOrderIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.DirectedGraph",
          "name": "DirectedGraph",
          "isArray": false
        },
        "name": "dg"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.DirectedGraph",
            "name": "DirectedGraph",
            "isArray": false
          },
          "name": "dg"
        },
        "comment": "the directed graph to be iterated.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "TopologicalOrderIterator(org.jgrapht.DirectedGraph dg,java.util.Queue queue)",
    "name": "TopologicalOrderIterator",
    "containingClass": {
      "qualifiedName": "org.jgrapht.traverse.TopologicalOrderIterator",
      "name": "TopologicalOrderIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.traverse.TopologicalOrderIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.DirectedGraph",
          "name": "DirectedGraph",
          "isArray": false
        },
        "name": "dg"
      },
      {
        "type": {
          "qualifiedName": "java.util.Queue",
          "name": "Queue",
          "isArray": false
        },
        "name": "queue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.DirectedGraph",
            "name": "DirectedGraph",
            "isArray": false
          },
          "name": "dg"
        },
        "comment": "the directed graph to be iterated.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Queue",
            "name": "Queue",
            "isArray": false
          },
          "name": "queue"
        },
        "comment": "queue to use for tie-break in case of partial order (e.g. a PriorityQueue can be used to break ties according to vertex priority); must be initially empty",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isConnectedComponentExhausted()",
    "name": "isConnectedComponentExhausted",
    "containingClass": {
      "qualifiedName": "org.jgrapht.traverse.TopologicalOrderIterator",
      "name": "TopologicalOrderIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.traverse.TopologicalOrderIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "encounterVertex(java.lang.Object vertex,java.lang.Object edge)",
    "name": "encounterVertex",
    "containingClass": {
      "qualifiedName": "org.jgrapht.traverse.TopologicalOrderIterator",
      "name": "TopologicalOrderIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.traverse.TopologicalOrderIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "encounterVertexAgain(java.lang.Object vertex,java.lang.Object edge)",
    "name": "encounterVertexAgain",
    "containingClass": {
      "qualifiedName": "org.jgrapht.traverse.TopologicalOrderIterator",
      "name": "TopologicalOrderIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.traverse.TopologicalOrderIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "vertex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "provideNextVertex()",
    "name": "provideNextVertex",
    "containingClass": {
      "qualifiedName": "org.jgrapht.traverse.TopologicalOrderIterator",
      "name": "TopologicalOrderIterator",
      "isArray": false
    },
    "targetClass": "org.jgrapht.traverse.TopologicalOrderIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]