[
  {
    "signature": "IsomorphicGraphMapping(org.jgrapht.alg.isomorphism.GraphOrdering g1,org.jgrapht.alg.isomorphism.GraphOrdering g2,int[] core1,int[] core2)",
    "name": "IsomorphicGraphMapping",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.isomorphism.GraphOrdering",
          "name": "GraphOrdering",
          "isArray": false
        },
        "name": "g1"
      },
      {
        "type": {
          "qualifiedName": "org.jgrapht.alg.isomorphism.GraphOrdering",
          "name": "GraphOrdering",
          "isArray": false
        },
        "name": "g2"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "core1"
      },
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "core2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.alg.isomorphism.GraphOrdering",
            "name": "GraphOrdering",
            "isArray": false
          },
          "name": "g1"
        },
        "comment": "the first graph",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.alg.isomorphism.GraphOrdering",
            "name": "GraphOrdering",
            "isArray": false
          },
          "name": "g2"
        },
        "comment": "the second graph which is a possible subgraph of g1",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "core1"
        },
        "comment": "the mapping as array (forwards)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "core2"
        },
        "comment": "the mapping as array (backwards)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getVertexCorrespondence(java.lang.Object v,boolean forward)",
    "name": "getVertexCorrespondence",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "forward"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEdgeCorrespondence(java.lang.Object e,boolean forward)",
    "name": "getEdgeCorrespondence",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "forward"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasVertexCorrespondence(java.lang.Object v)",
    "name": "hasVertexCorrespondence",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "is there a corresponding vertex to v in the subgraph",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasEdgeCorrespondence(java.lang.Object e)",
    "name": "hasEdgeCorrespondence",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "is there a corresponding edge to e in the subgraph",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEqualMapping(org.jgrapht.GraphMapping rel)",
    "name": "isEqualMapping",
    "containingClass": {
      "qualifiedName": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
      "name": "IsomorphicGraphMapping",
      "isArray": false
    },
    "targetClass": "org.jgrapht.alg.isomorphism.IsomorphicGraphMapping",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jgrapht.GraphMapping",
          "name": "GraphMapping",
          "isArray": false
        },
        "name": "rel"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jgrapht.GraphMapping",
            "name": "GraphMapping",
            "isArray": false
          },
          "name": "rel"
        },
        "comment": "the corresponding mapping",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "do both relations map to the same vertices",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]