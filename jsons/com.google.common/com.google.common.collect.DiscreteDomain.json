[
  {
    "signature": "DiscreteDomain()",
    "name": "DiscreteDomain",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "integers()",
    "name": "integers",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "longs()",
    "name": "longs",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "bigIntegers()",
    "name": "bigIntegers",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "next(java.lang.Comparable value)",
    "name": "next",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "C",
      "name": "C",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "any value of type C",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the least value greater than value, or null if value is maxValue()",
      "kind": "RETURN",
      "condition": "result>{value}"
    },
    "throwsTags": []
  },
  {
    "signature": "previous(java.lang.Comparable value)",
    "name": "previous",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "C",
      "name": "C",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Comparable",
            "name": "Comparable",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "any value of type C",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the greatest value less than value, or null if value is minValue()",
      "kind": "RETURN",
      "condition": "result<{value}"
    },
    "throwsTags": []
  },
  {
    "signature": "distance(java.lang.Comparable start,java.lang.Comparable end)",
    "name": "distance",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Comparable",
          "name": "Comparable",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "the distance as described above, or Long.MIN_VALUE or Long.MAX_VALUE if the distance is too small or too large, respectively.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minValue()",
    "name": "minValue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "C",
      "name": "C",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the minimum value of type C; never null",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [
          "BigInteger"
        ],
        "comment": "if the type has no (practical) minimum value; for example, BigInteger",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "maxValue()",
    "name": "maxValue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.DiscreteDomain",
      "name": "DiscreteDomain",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.DiscreteDomain",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "C",
      "name": "C",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the maximum value of type C; never null",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [
          "BigInteger"
        ],
        "comment": "if the type has no (practical) maximum value; for example, BigInteger",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]