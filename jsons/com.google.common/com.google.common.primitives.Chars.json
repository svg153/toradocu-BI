[
  {
    "signature": "hashCode(char value)",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "a primitive char value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a hash code for the value",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.hashCode())"
    },
    "throwsTags": []
  },
  {
    "signature": "checkedCast(long value)",
    "name": "checkedCast",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "any value in the range of the char type",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the char value that equals value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "value",
          "Character.MAX_VALUE",
          "Character.MIN_VALUE"
        ],
        "comment": "if value is greater than Character.MAX_VALUE or less than Character.MIN_VALUE",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "saturatedCast(long value)",
    "name": "saturatedCast",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "any long value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the same value cast to char if it is in the range of the char type, Character.MAX_VALUE if it is too large, or Character.MIN_VALUE if it is too small",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compare(char a,char b)",
    "name": "compare",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the first char to compare",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second char to compare",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a negative value if a is less than b; a positive value if a is greater than b; or zero if they are equal",
      "kind": "RETURN",
      "condition": "args[0]<args[1] ? result.equals(args[0]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "contains(char[] array,char target)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "an array of char values, possibly empty",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "target"
        },
        "comment": "a primitive char value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if array[i] == target for some value of i",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(char[] array,char target)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "an array of char values, possibly empty",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "target"
        },
        "comment": "a primitive char value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the least index i for which array[i] == target, or -1 if no such index exists.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(char[] array,char[] target)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array to search for the sequence target",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "target"
        },
        "comment": "the array to search for as a sub-sequence of array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(char[] array,char target)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "an array of char values, possibly empty",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "target"
        },
        "comment": "a primitive char value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the greatest index i for which array[i] == target, or -1 if no such index exists.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(char[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "a nonempty array of char values",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value present in array that is less than or equal to every other value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "array"
        ],
        "comment": "if array is empty",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(char[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "a nonempty array of char values",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value present in array that is greater than or equal to every other value in the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "array"
        ],
        "comment": "if array is empty",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "concat(char[][] arrays)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "char",
        "name": "char",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[][]",
          "name": "char[][]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "arrays"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[][]",
            "name": "char[][]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "arrays"
        },
        "comment": "zero or more char arrays",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a single array containing all the values from the source arrays, in order",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toByteArray(char value)",
    "name": "toByteArray",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "byte",
        "name": "byte",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "fromByteArray(byte[] bytes)",
    "name": "fromByteArray",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte[]",
          "name": "byte[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          }
        },
        "name": "bytes"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "bytes"
        ],
        "comment": "if bytes has fewer than 2 elements",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "fromBytes(byte b1,byte b2)",
    "name": "fromBytes",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "b1"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "b2"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ensureCapacity(char[] array,int minLength,int padding)",
    "name": "ensureCapacity",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "char",
        "name": "char",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minLength"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "padding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the source array",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minLength"
        },
        "comment": "the minimum length the returned array must guarantee",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "padding"
        },
        "comment": "an extra amount to \"grow\" the array by if growth is necessary",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array containing the values of array, with guaranteed minimum length minLength",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "minLength",
          "padding"
        ],
        "comment": "if minLength or padding is negative",
        "kind": "THROWS",
        "condition": "args[1]<0 || args[2]<0"
      }
    ]
  },
  {
    "signature": "join(java.lang.String separator,char[] array)",
    "name": "join",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      },
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the text that should appear between consecutive values in the resulting string (but not at the start or end)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "an array of char values, possibly empty",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "lexicographicalComparator()",
    "name": "lexicographicalComparator",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Comparator",
      "name": "Comparator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toArray(java.util.Collection collection)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "char",
        "name": "char",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "collection"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "collection"
        },
        "comment": "a collection of Character objects",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array containing the same values as collection, in the same order, converted to primitives",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "collection"
        ],
        "comment": "if collection or any of its elements is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asList(char[] backingArray)",
    "name": "asList",
    "containingClass": {
      "qualifiedName": "com.google.common.primitives.Chars",
      "name": "Chars",
      "isArray": false
    },
    "targetClass": "com.google.common.primitives.Chars",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char[]",
          "name": "char[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          }
        },
        "name": "backingArray"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char[]",
            "name": "char[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "char",
              "name": "char",
              "isArray": false
            }
          },
          "name": "backingArray"
        },
        "comment": "the array to back the list",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list view of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]