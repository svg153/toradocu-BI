[
  {
    "signature": "newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory.Policy policy)",
    "name": "newInstance",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory.Policy",
          "name": "Policy",
          "isArray": false
        },
        "name": "policy"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newReentrantLock(java.lang.String lockName)",
    "name": "newReentrantLock",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.locks.ReentrantLock",
      "name": "ReentrantLock",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "lockName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newReentrantLock(java.lang.String lockName,boolean fair)",
    "name": "newReentrantLock",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.locks.ReentrantLock",
      "name": "ReentrantLock",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "lockName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fair"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newReentrantReadWriteLock(java.lang.String lockName)",
    "name": "newReentrantReadWriteLock",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.locks.ReentrantReadWriteLock",
      "name": "ReentrantReadWriteLock",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "lockName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newReentrantReadWriteLock(java.lang.String lockName,boolean fair)",
    "name": "newReentrantReadWriteLock",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.locks.ReentrantReadWriteLock",
      "name": "ReentrantReadWriteLock",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "lockName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fair"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newInstanceWithExplicitOrdering(java.lang.Class enumClass,com.google.common.util.concurrent.CycleDetectingLockFactory.Policy policy)",
    "name": "newInstanceWithExplicitOrdering",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory.WithExplicitOrdering",
      "name": "WithExplicitOrdering",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "enumClass"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory.Policy",
          "name": "Policy",
          "isArray": false
        },
        "name": "policy"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createNodes(java.lang.Class clazz)",
    "name": "createNodes",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.CycleDetectingLockFactory",
      "name": "CycleDetectingLockFactory",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.CycleDetectingLockFactory",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "clazz"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]