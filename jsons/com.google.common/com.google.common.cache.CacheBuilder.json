[
  {
    "signature": "CacheBuilder()",
    "name": "CacheBuilder",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newBuilder()",
    "name": "newBuilder",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "from(com.google.common.cache.CacheBuilderSpec spec)",
    "name": "from",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.cache.CacheBuilderSpec",
          "name": "CacheBuilderSpec",
          "isArray": false
        },
        "name": "spec"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "from(java.lang.String spec)",
    "name": "from",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "spec"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "spec"
        },
        "comment": "a String in the format specified by CacheBuilderSpec",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "lenientParsing()",
    "name": "lenientParsing",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "keyEquivalence(com.google.common.base.Equivalence equivalence)",
    "name": "keyEquivalence",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.base.Equivalence",
          "name": "Equivalence",
          "isArray": false
        },
        "name": "equivalence"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getKeyEquivalence()",
    "name": "getKeyEquivalence",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Equivalence",
      "name": "Equivalence",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "valueEquivalence(com.google.common.base.Equivalence equivalence)",
    "name": "valueEquivalence",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.base.Equivalence",
          "name": "Equivalence",
          "isArray": false
        },
        "name": "equivalence"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueEquivalence()",
    "name": "getValueEquivalence",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Equivalence",
      "name": "Equivalence",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "initialCapacity(int initialCapacity)",
    "name": "initialCapacity",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "initialCapacity"
        ],
        "comment": "if initialCapacity is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an initial capacity was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getInitialCapacity()",
    "name": "getInitialCapacity",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "concurrencyLevel(int concurrencyLevel)",
    "name": "concurrencyLevel",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "concurrencyLevel"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "concurrencyLevel"
        ],
        "comment": "if concurrencyLevel is nonpositive",
        "kind": "THROWS",
        "condition": "args[0]<=0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a concurrency level was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getConcurrencyLevel()",
    "name": "getConcurrencyLevel",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "maximumSize(long size)",
    "name": "maximumSize",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "the maximum size of the cache",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "size"
        ],
        "comment": "if size is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a maximum size or weight was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "maximumWeight(long weight)",
    "name": "maximumWeight",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "weight"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "weight"
        },
        "comment": "the maximum total weight of entries the cache may contain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "weight"
        ],
        "comment": "if weight is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a maximum weight or size was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "weigher(com.google.common.cache.Weigher weigher)",
    "name": "weigher",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.cache.Weigher",
          "name": "Weigher",
          "isArray": false
        },
        "name": "weigher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.common.cache.Weigher",
            "name": "Weigher",
            "isArray": false
          },
          "name": "weigher"
        },
        "comment": "the weigher to use in calculating the weight of cache entries",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "size"
        ],
        "comment": "if size is negative",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a maximum size was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getMaximumWeight()",
    "name": "getMaximumWeight",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getWeigher()",
    "name": "getWeigher",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.Weigher",
      "name": "Weigher",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "weakKeys()",
    "name": "weakKeys",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the key strength was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setKeyStrength(com.google.common.cache.LocalCache.Strength strength)",
    "name": "setKeyStrength",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.cache.LocalCache.Strength",
          "name": "Strength",
          "isArray": false
        },
        "name": "strength"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getKeyStrength()",
    "name": "getKeyStrength",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.LocalCache.Strength",
      "name": "Strength",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "weakValues()",
    "name": "weakValues",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the value strength was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "softValues()",
    "name": "softValues",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the value strength was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setValueStrength(com.google.common.cache.LocalCache.Strength strength)",
    "name": "setValueStrength",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.cache.LocalCache.Strength",
          "name": "Strength",
          "isArray": false
        },
        "name": "strength"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueStrength()",
    "name": "getValueStrength",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.LocalCache.Strength",
      "name": "Strength",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expireAfterWrite(long duration,java.util.concurrent.TimeUnit unit)",
    "name": "expireAfterWrite",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the length of time after an entry is created that it should be automatically removed",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.TimeUnit",
            "name": "TimeUnit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "the unit that duration is expressed in",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "duration"
        ],
        "comment": "if duration is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the time to live or time to idle was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getExpireAfterWriteNanos()",
    "name": "getExpireAfterWriteNanos",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expireAfterAccess(long duration,java.util.concurrent.TimeUnit unit)",
    "name": "expireAfterAccess",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the length of time after an entry is last accessed that it should be automatically removed",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.TimeUnit",
            "name": "TimeUnit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "the unit that duration is expressed in",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "duration"
        ],
        "comment": "if duration is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the time to idle or time to live was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getExpireAfterAccessNanos()",
    "name": "getExpireAfterAccessNanos",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "refreshAfterWrite(long duration,java.util.concurrent.TimeUnit unit)",
    "name": "refreshAfterWrite",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the length of time after an entry is created that it should be considered stale, and thus eligible for refresh",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.TimeUnit",
            "name": "TimeUnit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "the unit that duration is expressed in",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "duration"
        ],
        "comment": "if duration is negative",
        "kind": "THROWS",
        "condition": "args[0]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the refresh interval was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRefreshNanos()",
    "name": "getRefreshNanos",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ticker(com.google.common.base.Ticker ticker)",
    "name": "ticker",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.base.Ticker",
          "name": "Ticker",
          "isArray": false
        },
        "name": "ticker"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a ticker was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getTicker(boolean recordsTime)",
    "name": "getTicker",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Ticker",
      "name": "Ticker",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "recordsTime"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removalListener(com.google.common.cache.RemovalListener listener)",
    "name": "removalListener",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.cache.RemovalListener",
          "name": "RemovalListener",
          "isArray": false
        },
        "name": "listener"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "the cache builder reference that should be used instead of this for any remaining configuration and cache building",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a removal listener was already set",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRemovalListener()",
    "name": "getRemovalListener",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.RemovalListener",
      "name": "RemovalListener",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "recordStats()",
    "name": "recordStats",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isRecordingStats()",
    "name": "isRecordingStats",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getStatsCounterSupplier()",
    "name": "getStatsCounterSupplier",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Supplier",
      "name": "Supplier",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "build(com.google.common.cache.CacheLoader loader)",
    "name": "build",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.LoadingCache",
      "name": "LoadingCache",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.cache.CacheLoader",
          "name": "CacheLoader",
          "isArray": false
        },
        "name": "loader"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.common.cache.CacheLoader",
            "name": "CacheLoader",
            "isArray": false
          },
          "name": "loader"
        },
        "comment": "the cache loader used to obtain new values",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a cache having the requested features",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "build()",
    "name": "build",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.cache.Cache",
      "name": "Cache",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a cache having the requested features",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.google.common.cache.CacheBuilder",
      "name": "CacheBuilder",
      "isArray": false
    },
    "targetClass": "com.google.common.cache.CacheBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]