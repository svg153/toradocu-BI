[
  {
    "signature": "equal(java.lang.Object a,java.lang.Object b)",
    "name": "equal",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Objects",
      "name": "Objects",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Objects",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "a",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "b",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode(java.lang.Object[] objects)",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Objects",
      "name": "Objects",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Objects",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "objects",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toStringHelper(java.lang.Object self)",
    "name": "toStringHelper",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Objects",
      "name": "Objects",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Objects",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Objects.ToStringHelper",
      "name": "ToStringHelper",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "self"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "self"
        },
        "comment": "the object to generate the string for (typically this), used only for its class name",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "toStringHelper(java.lang.Class clazz)",
    "name": "toStringHelper",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Objects",
      "name": "Objects",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Objects",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Objects.ToStringHelper",
      "name": "ToStringHelper",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "clazz"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "clazz"
        },
        "comment": "the Class of the instance",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "toStringHelper(java.lang.String className)",
    "name": "toStringHelper",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Objects",
      "name": "Objects",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Objects",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Objects.ToStringHelper",
      "name": "ToStringHelper",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "className"
        },
        "comment": "the name of the instance type",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "firstNonNull(java.lang.Object first,java.lang.Object second)",
    "name": "firstNonNull",
    "containingClass": {
      "qualifiedName": "com.google.common.base.Objects",
      "name": "Objects",
      "isArray": false
    },
    "targetClass": "com.google.common.base.Objects",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "first",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "second",
        "nullable": true
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "first if first is not null, or second if first is null and second is not null",
      "kind": "RETURN",
      "condition": "(args[0]==null) == false ? result == args[0] : result == args[1]"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "first",
          "second",
          "null"
        ],
        "comment": "if both first and second were null",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]