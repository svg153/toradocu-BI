[
  {
    "signature": "AbstractFuture()",
    "name": "AbstractFuture",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "get(long timeout,java.util.concurrent.TimeUnit unit)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeout"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.InterruptedException",
          "name": "InterruptedException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the current thread was interrupted before or during the call (optional but recommended).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.util.concurrent.CancellationException",
          "name": "CancellationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "get()",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.InterruptedException",
          "name": "InterruptedException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the current thread was interrupted before or during the call (optional but recommended).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.util.concurrent.CancellationException",
          "name": "CancellationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isDone()",
    "name": "isDone",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isCancelled()",
    "name": "isCancelled",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cancel(boolean mayInterruptIfRunning)",
    "name": "cancel",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "mayInterruptIfRunning"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "interruptTask()",
    "name": "interruptTask",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "wasInterrupted()",
    "name": "wasInterrupted",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addListener(java.lang.Runnable listener,java.util.concurrent.Executor executor)",
    "name": "addListener",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "listener"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Executor",
          "name": "Executor",
          "isArray": false
        },
        "name": "executor"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "set(java.lang.Object value)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value",
          "nullable": true
        },
        "comment": "the value to be used as the result",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the attempt was accepted, completing the Future",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setException(java.lang.Throwable throwable)",
    "name": "setException",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Throwable",
          "name": "Throwable",
          "isArray": false
        },
        "name": "throwable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Throwable",
            "name": "Throwable",
            "isArray": false
          },
          "name": "throwable"
        },
        "comment": "the exception to be used as the failed result",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the attempt was accepted, completing the Future",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setFuture(com.google.common.util.concurrent.ListenableFuture future)",
    "name": "setFuture",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.util.concurrent.ListenableFuture",
          "name": "ListenableFuture",
          "isArray": false
        },
        "name": "future"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.common.util.concurrent.ListenableFuture",
            "name": "ListenableFuture",
            "isArray": false
          },
          "name": "future"
        },
        "comment": "the future to delegate to",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the attempt was accepted, indicating that the Future was not previously cancelled or set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "done()",
    "name": "done",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "trustedGetException()",
    "name": "trustedGetException",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Throwable",
      "name": "Throwable",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.RuntimeException",
          "name": "RuntimeException",
          "isArray": false
        },
        "codeTags": [
          "Future"
        ],
        "comment": "if the Future has not failed",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "maybePropagateCancellation(java.util.concurrent.Future related)",
    "name": "maybePropagateCancellation",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.Future",
          "name": "Future",
          "isArray": false
        },
        "name": "related",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cancellationExceptionWithCause(java.lang.String message,java.lang.Throwable cause)",
    "name": "cancellationExceptionWithCause",
    "containingClass": {
      "qualifiedName": "com.google.common.util.concurrent.AbstractFuture",
      "name": "AbstractFuture",
      "isArray": false
    },
    "targetClass": "com.google.common.util.concurrent.AbstractFuture",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.CancellationException",
      "name": "CancellationException",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "message",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Throwable",
          "name": "Throwable",
          "isArray": false
        },
        "name": "cause",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]