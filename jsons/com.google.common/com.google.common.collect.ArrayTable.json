[
  {
    "signature": "create(java.lang.Iterable rowKeys,java.lang.Iterable columnKeys)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "rowKeys"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "columnKeys"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "rowKeys"
        },
        "comment": "row keys that may be stored in the generated table",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "columnKeys"
        },
        "comment": "column keys that may be stored in the generated table",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the provided keys is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "rowKeys",
          "columnKeys"
        ],
        "comment": "if rowKeys or columnKeys contains duplicates or is empty",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "create(com.google.common.collect.Table table)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.Table",
          "name": "Table",
          "isArray": false
        },
        "name": "table"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "table"
        ],
        "comment": "if table has a null key",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the provided table is empty",
        "kind": "THROWS",
        "condition": "args[0].isEmpty()"
      }
    ]
  },
  {
    "signature": "rowKeyList()",
    "name": "rowKeyList",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList",
      "name": "ImmutableList",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "columnKeyList()",
    "name": "columnKeyList",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList",
      "name": "ImmutableList",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "at(int rowIndex,int columnIndex)",
    "name": "at",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rowIndex"
        },
        "comment": "position of the row key in rowKeyList()",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "columnIndex"
        },
        "comment": "position of the row key in columnKeyList()",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value with the specified row and column",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [
          "rowIndex",
          "columnIndex"
        ],
        "comment": "if either index is negative, rowIndex is greater then or equal to the number of allowed row keys, or columnIndex is greater then or equal to the number of allowed column keys",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "set(int rowIndex,int columnIndex,java.lang.Object value)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnIndex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rowIndex"
        },
        "comment": "position of the row key in rowKeyList()",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "columnIndex"
        },
        "comment": "position of the row key in columnKeyList()",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value",
          "nullable": true
        },
        "comment": "value to store in the table",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the previous value with the specified row and column",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [
          "rowIndex",
          "columnIndex"
        ],
        "comment": "if either index is negative, rowIndex is greater then or equal to the number of allowed row keys, or columnIndex is greater then or equal to the number of allowed column keys",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toArray(java.lang.Class valueClass)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V[][]",
      "name": "V[][]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "V",
        "name": "V",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "valueClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "valueClass"
        },
        "comment": "class of values stored in the returned array",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "always",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "eraseAll()",
    "name": "eraseAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(java.lang.Object rowKey,java.lang.Object columnKey)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "containsColumn(java.lang.Object columnKey)",
    "name": "containsColumn",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "containsRow(java.lang.Object rowKey)",
    "name": "containsRow",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "containsValue(java.lang.Object value)",
    "name": "containsValue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "get(java.lang.Object rowKey,java.lang.Object columnKey)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "put(java.lang.Object rowKey,java.lang.Object columnKey,java.lang.Object value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "rowKey",
          "rowKeySet()",
          "columnKey",
          "columnKeySet()"
        ],
        "comment": "if rowKey is not in rowKeySet() or columnKey is not in columnKeySet().",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "putAll(com.google.common.collect.Table table)",
    "name": "putAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.Table",
          "name": "Table",
          "isArray": false
        },
        "name": "table"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "table"
        ],
        "comment": "if table has a null key",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "rowKeySet()",
          "columnKeySet()"
        ],
        "comment": "if any of the provided table's row keys or column keys is not in rowKeySet() or columnKeySet()",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "remove(java.lang.Object rowKey,java.lang.Object columnKey)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "always",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "erase(java.lang.Object rowKey,java.lang.Object columnKey)",
    "name": "erase",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rowKey",
          "nullable": true
        },
        "comment": "row key of mapping to be erased",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "columnKey",
          "nullable": true
        },
        "comment": "column key of mapping to be erased",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value previously associated with the keys, or null if no mapping existed for the keys",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cellSet()",
    "name": "cellSet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "set of table cells consisting of row key / column key / value triplets",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cellIterator()",
    "name": "cellIterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "column(java.lang.Object columnKey)",
    "name": "column",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "columnKey"
        },
        "comment": "key of column to search for in the table",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the corresponding map from row keys to values",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.get(java.lang.Object, java.lang.Object))"
    },
    "throwsTags": []
  },
  {
    "signature": "columnKeySet()",
    "name": "columnKeySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableSet",
      "name": "ImmutableSet",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "immutable set of column keys",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "columnMap()",
    "name": "columnMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "row(java.lang.Object rowKey)",
    "name": "row",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rowKey"
        },
        "comment": "key of row to search for in the table",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the corresponding map from column keys to values",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.get(java.lang.Object, java.lang.Object))"
    },
    "throwsTags": []
  },
  {
    "signature": "rowKeySet()",
    "name": "rowKeySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableSet",
      "name": "ImmutableSet",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "immutable set of row keys",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "rowMap()",
    "name": "rowMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "values()",
    "name": "values",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "collection of values",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]