[
  {
    "signature": "newArrayBlockingQueue(int capacity)",
    "name": "newArrayBlockingQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.ArrayBlockingQueue",
      "name": "ArrayBlockingQueue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newArrayDeque()",
    "name": "newArrayDeque",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ArrayDeque",
      "name": "ArrayDeque",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newArrayDeque(java.lang.Iterable elements)",
    "name": "newArrayDeque",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ArrayDeque",
      "name": "ArrayDeque",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newConcurrentLinkedQueue()",
    "name": "newConcurrentLinkedQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.ConcurrentLinkedQueue",
      "name": "ConcurrentLinkedQueue",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newConcurrentLinkedQueue(java.lang.Iterable elements)",
    "name": "newConcurrentLinkedQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.ConcurrentLinkedQueue",
      "name": "ConcurrentLinkedQueue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newLinkedBlockingDeque()",
    "name": "newLinkedBlockingDeque",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.LinkedBlockingDeque",
      "name": "LinkedBlockingDeque",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newLinkedBlockingDeque(int capacity)",
    "name": "newLinkedBlockingDeque",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.LinkedBlockingDeque",
      "name": "LinkedBlockingDeque",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "capacity"
        ],
        "comment": "if capacity is less than 1",
        "kind": "THROWS",
        "condition": "args[0]<1"
      }
    ]
  },
  {
    "signature": "newLinkedBlockingDeque(java.lang.Iterable elements)",
    "name": "newLinkedBlockingDeque",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.LinkedBlockingDeque",
      "name": "LinkedBlockingDeque",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newLinkedBlockingQueue()",
    "name": "newLinkedBlockingQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.LinkedBlockingQueue",
      "name": "LinkedBlockingQueue",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newLinkedBlockingQueue(int capacity)",
    "name": "newLinkedBlockingQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.LinkedBlockingQueue",
      "name": "LinkedBlockingQueue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "capacity"
        ],
        "comment": "if capacity is less than 1",
        "kind": "THROWS",
        "condition": "args[0]<1"
      }
    ]
  },
  {
    "signature": "newLinkedBlockingQueue(java.lang.Iterable elements)",
    "name": "newLinkedBlockingQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.LinkedBlockingQueue",
      "name": "LinkedBlockingQueue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "elements"
        },
        "comment": "the elements that the queue should contain, in order",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new LinkedBlockingQueue containing those elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "newPriorityBlockingQueue()",
    "name": "newPriorityBlockingQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.PriorityBlockingQueue",
      "name": "PriorityBlockingQueue",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newPriorityBlockingQueue(java.lang.Iterable elements)",
    "name": "newPriorityBlockingQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.PriorityBlockingQueue",
      "name": "PriorityBlockingQueue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newPriorityQueue()",
    "name": "newPriorityQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newPriorityQueue(java.lang.Iterable elements)",
    "name": "newPriorityQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.PriorityQueue",
      "name": "PriorityQueue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "newSynchronousQueue()",
    "name": "newSynchronousQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.concurrent.SynchronousQueue",
      "name": "SynchronousQueue",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "drain(java.util.concurrent.BlockingQueue q,java.util.Collection buffer,int numElements,long timeout,java.util.concurrent.TimeUnit unit)",
    "name": "drain",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.BlockingQueue",
          "name": "BlockingQueue",
          "isArray": false
        },
        "name": "q"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numElements"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeout"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.BlockingQueue",
            "name": "BlockingQueue",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "the blocking queue to be drained",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "buffer"
        },
        "comment": "where to add the transferred elements",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numElements"
        },
        "comment": "the number of elements to be waited for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "timeout"
        },
        "comment": "how long to wait before giving up, in units of unit",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.TimeUnit",
            "name": "TimeUnit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "a TimeUnit determining how to interpret the timeout parameter",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the number of elements transferred",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.InterruptedException",
          "name": "InterruptedException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if interrupted while waiting",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "drainUninterruptibly(java.util.concurrent.BlockingQueue q,java.util.Collection buffer,int numElements,long timeout,java.util.concurrent.TimeUnit unit)",
    "name": "drainUninterruptibly",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.concurrent.BlockingQueue",
          "name": "BlockingQueue",
          "isArray": false
        },
        "name": "q"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numElements"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "timeout"
      },
      {
        "type": {
          "qualifiedName": "java.util.concurrent.TimeUnit",
          "name": "TimeUnit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.BlockingQueue",
            "name": "BlockingQueue",
            "isArray": false
          },
          "name": "q"
        },
        "comment": "the blocking queue to be drained",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "buffer"
        },
        "comment": "where to add the transferred elements",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numElements"
        },
        "comment": "the number of elements to be waited for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "timeout"
        },
        "comment": "how long to wait before giving up, in units of unit",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.concurrent.TimeUnit",
            "name": "TimeUnit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "a TimeUnit determining how to interpret the timeout parameter",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the number of elements transferred",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "synchronizedQueue(java.util.Queue queue)",
    "name": "synchronizedQueue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Queue",
      "name": "Queue",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Queue",
          "name": "Queue",
          "isArray": false
        },
        "name": "queue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Queue",
            "name": "Queue",
            "isArray": false
          },
          "name": "queue"
        },
        "comment": "the queue to be wrapped in a synchronized view",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a synchronized view of the specified queue",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "synchronizedDeque(java.util.Deque deque)",
    "name": "synchronizedDeque",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Queues",
      "name": "Queues",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Queues",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Deque",
      "name": "Deque",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Deque",
          "name": "Deque",
          "isArray": false
        },
        "name": "deque"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Deque",
            "name": "Deque",
            "isArray": false
          },
          "name": "deque"
        },
        "comment": "the deque to be wrapped in a synchronized view",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a synchronized view of the specified deque",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]