[
  {
    "signature": "PairwiseEquivalence(com.google.common.base.Equivalence elementEquivalence)",
    "name": "PairwiseEquivalence",
    "containingClass": {
      "qualifiedName": "com.google.common.base.PairwiseEquivalence",
      "name": "PairwiseEquivalence",
      "isArray": false
    },
    "targetClass": "com.google.common.base.PairwiseEquivalence",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.base.Equivalence",
          "name": "Equivalence",
          "isArray": false
        },
        "name": "elementEquivalence"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doEquivalent(java.lang.Iterable iterableA,java.lang.Iterable iterableB)",
    "name": "doEquivalent",
    "containingClass": {
      "qualifiedName": "com.google.common.base.PairwiseEquivalence",
      "name": "PairwiseEquivalence",
      "isArray": false
    },
    "targetClass": "com.google.common.base.PairwiseEquivalence",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterableA"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterableB"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doHash(java.lang.Iterable iterable)",
    "name": "doHash",
    "containingClass": {
      "qualifiedName": "com.google.common.base.PairwiseEquivalence",
      "name": "PairwiseEquivalence",
      "isArray": false
    },
    "targetClass": "com.google.common.base.PairwiseEquivalence",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "com.google.common.base.PairwiseEquivalence",
      "name": "PairwiseEquivalence",
      "isArray": false
    },
    "targetClass": "com.google.common.base.PairwiseEquivalence",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "com.google.common.base.PairwiseEquivalence",
      "name": "PairwiseEquivalence",
      "isArray": false
    },
    "targetClass": "com.google.common.base.PairwiseEquivalence",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.google.common.base.PairwiseEquivalence",
      "name": "PairwiseEquivalence",
      "isArray": false
    },
    "targetClass": "com.google.common.base.PairwiseEquivalence",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]