[
  {
    "signature": "unmodifiableIterable(java.lang.Iterable iterable)",
    "name": "unmodifiableIterable",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "unmodifiableIterable(com.google.common.collect.ImmutableCollection iterable)",
    "name": "unmodifiableIterable",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.ImmutableCollection",
          "name": "ImmutableCollection",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "size(java.lang.Iterable iterable)",
    "name": "size",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(java.lang.Iterable iterable,java.lang.Object element)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeAll(java.lang.Iterable removeFrom,java.util.Collection elementsToRemove)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "removeFrom"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "elementsToRemove"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "removeFrom"
        },
        "comment": "the iterable to (potentially) remove elements from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "elementsToRemove"
        },
        "comment": "the elements to remove",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if any element was removed from iterable",
      "kind": "RETURN",
      "condition": "args[1].remove(java.lang.Object) ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "retainAll(java.lang.Iterable removeFrom,java.util.Collection elementsToRetain)",
    "name": "retainAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "removeFrom"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "elementsToRetain"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "removeFrom"
        },
        "comment": "the iterable to (potentially) remove elements from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "elementsToRetain"
        },
        "comment": "the elements to retain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if any element was removed from iterable",
      "kind": "RETURN",
      "condition": "args[1].remove(java.lang.Object) ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "removeIf(java.lang.Iterable removeFrom,com.google.common.base.Predicate predicate)",
    "name": "removeIf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "removeFrom"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "removeFrom"
        },
        "comment": "the iterable to (potentially) remove elements from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.common.base.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "a predicate that determines whether an element should be removed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if any elements were removed from the iterable",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [
          "remove()"
        ],
        "comment": "if the iterable does not support remove().",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "removeFirstMatching(java.lang.Iterable removeFrom,com.google.common.base.Predicate predicate)",
    "name": "removeFirstMatching",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "removeFrom"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "elementsEqual(java.lang.Iterable iterable1,java.lang.Iterable iterable2)",
    "name": "elementsEqual",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable2"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString(java.lang.Iterable iterable)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getOnlyElement(java.lang.Iterable iterable)",
    "name": "getOnlyElement",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterable is empty",
        "kind": "THROWS",
        "condition": "com.google.common.collect.Iterables.isEmpty(args[0])"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterable contains multiple elements",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getOnlyElement(java.lang.Iterable iterable,java.lang.Object defaultValue)",
    "name": "getOnlyElement",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterator contains multiple elements",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toArray(java.lang.Iterable iterable,java.lang.Class type)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "iterable"
        },
        "comment": "the iterable to copy",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the type of the elements",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a newly-allocated array into which all the elements of the iterable have been copied",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toArray(java.lang.Iterable iterable,java.lang.Object[] array)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toArray(java.lang.Iterable iterable)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "iterable"
        },
        "comment": "the iterable to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a newly-allocated array into which all the elements of the iterable have been copied",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addAll(java.util.Collection addTo,java.lang.Iterable elementsToAdd)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "addTo"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elementsToAdd"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "true if collection was modified as a result of this operation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "frequency(java.lang.Iterable iterable,java.lang.Object element)",
    "name": "frequency",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cycle(java.lang.Iterable iterable)",
    "name": "cycle",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "cycle(java.lang.Object[] elements)",
    "name": "cycle",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "elements"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.Iterable a,java.lang.Iterable b)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.Iterable a,java.lang.Iterable b,java.lang.Iterable c)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.Iterable a,java.lang.Iterable b,java.lang.Iterable c,java.lang.Iterable d)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "c"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "concat(java.lang.Iterable[] inputs)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable[]",
          "name": "Iterable[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          }
        },
        "name": "inputs"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the provided iterables is null",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "concat(java.lang.Iterable inputs)",
    "name": "concat",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "inputs"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "partition(java.lang.Iterable iterable,int size)",
    "name": "partition",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "iterable"
        },
        "comment": "the iterable to return a partitioned view of",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "the desired size of each partition (the last may be smaller)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterable of unmodifiable lists containing the elements of iterable divided into partitions",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "size"
        ],
        "comment": "if size is nonpositive",
        "kind": "THROWS",
        "condition": "args[1]<=0"
      }
    ]
  },
  {
    "signature": "paddedPartition(java.lang.Iterable iterable,int size)",
    "name": "paddedPartition",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "iterable"
        },
        "comment": "the iterable to return a partitioned view of",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "the desired size of each partition",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterable of unmodifiable lists containing the elements of iterable divided into partitions (the final iterable may have trailing null elements)",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "size"
        ],
        "comment": "if size is nonpositive",
        "kind": "THROWS",
        "condition": "args[1]<=0"
      }
    ]
  },
  {
    "signature": "filter(java.lang.Iterable unfiltered,com.google.common.base.Predicate predicate)",
    "name": "filter",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "unfiltered"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "filter(java.lang.Iterable unfiltered,java.lang.Class type)",
    "name": "filter",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "unfiltered"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "unfiltered"
        },
        "comment": "an iterable containing objects of any type",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the type of elements desired",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an unmodifiable iterable containing all elements of the original iterable that were of the requested type",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "any(java.lang.Iterable iterable,com.google.common.base.Predicate predicate)",
    "name": "any",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "all(java.lang.Iterable iterable,com.google.common.base.Predicate predicate)",
    "name": "all",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "find(java.lang.Iterable iterable,com.google.common.base.Predicate predicate)",
    "name": "find",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [
          "iterable"
        ],
        "comment": "if no element in iterable matches the given predicate",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "find(java.lang.Iterable iterable,com.google.common.base.Predicate predicate,java.lang.Object defaultValue)",
    "name": "find",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "tryFind(java.lang.Iterable iterable,com.google.common.base.Predicate predicate)",
    "name": "tryFind",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.base.Optional",
      "name": "Optional",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.Iterable iterable,com.google.common.base.Predicate predicate)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "transform(java.lang.Iterable fromIterable,com.google.common.base.Function function)",
    "name": "transform",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "fromIterable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Function",
          "name": "Function",
          "isArray": false
        },
        "name": "function"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "get(java.lang.Iterable iterable,int position)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "position"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "position"
        },
        "comment": "position of the element to return",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the element at the specified position in iterable",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [
          "position",
          "iterable"
        ],
        "comment": "if position is negative or greater than or equal to the size of iterable",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "get(java.lang.Iterable iterable,int position,java.lang.Object defaultValue)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "position"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "position"
        },
        "comment": "position of the element to return",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "defaultValue",
          "nullable": true
        },
        "comment": "the default value to return if position is greater than or equal to the size of the iterable",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the element at the specified position in iterable or defaultValue if iterable contains fewer than position + 1 elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [
          "position"
        ],
        "comment": "if position is negative",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "getFirst(java.lang.Iterable iterable,java.lang.Object defaultValue)",
    "name": "getFirst",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "defaultValue",
          "nullable": true
        },
        "comment": "the default value to return if the iterable is empty",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first element of iterable or the default value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLast(java.lang.Iterable iterable)",
    "name": "getLast",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "the last element of iterable",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterable is empty",
        "kind": "THROWS",
        "condition": "com.google.common.collect.Iterables.isEmpty(args[0])"
      }
    ]
  },
  {
    "signature": "getLast(java.lang.Iterable iterable,java.lang.Object defaultValue)",
    "name": "getLast",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "defaultValue",
          "nullable": true
        },
        "comment": "the value to return if iterable is empty",
        "kind": "PARAM",
        "condition": "com.google.common.collect.Iterables.isEmpty(args[0])"
      }
    ],
    "returnTag": {
      "comment": "the last element of iterable or the default value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "skip(java.lang.Iterable iterable,int numberToSkip)",
    "name": "skip",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numberToSkip"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "limit(java.lang.Iterable iterable,int limitSize)",
    "name": "limit",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "limitSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "iterable"
        },
        "comment": "the iterable to limit",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "limitSize"
        },
        "comment": "the maximum number of elements in the returned iterable",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "limitSize"
        ],
        "comment": "if limitSize is negative",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "consumingIterable(java.lang.Iterable iterable)",
    "name": "consumingIterable",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "iterable"
        },
        "comment": "the iterable to wrap",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a view of the supplied iterable that wraps each generated iterator through Iterators.consumingIterator(Iterator); for queues, an iterable that generates iterators that return and consume the queue's elements in queue order",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEmpty(java.lang.Iterable iterable)",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterable"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the iterable contains no elements",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "mergeSorted(java.lang.Iterable iterables,java.util.Comparator comparator)",
    "name": "mergeSorted",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.Iterables",
      "name": "Iterables",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.Iterables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "iterables"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]