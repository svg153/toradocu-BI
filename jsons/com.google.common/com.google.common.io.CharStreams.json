[
  {
    "signature": "copy(java.lang.Readable from,java.lang.Appendable to)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Readable",
          "name": "Readable",
          "isArray": false
        },
        "name": "from"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Appendable",
          "name": "Appendable",
          "isArray": false
        },
        "name": "to"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Readable",
            "name": "Readable",
            "isArray": false
          },
          "name": "from"
        },
        "comment": "the object to read from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Appendable",
            "name": "Appendable",
            "isArray": false
          },
          "name": "to"
        },
        "comment": "the object to write to",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the number of characters copied",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an I/O error occurs",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toString(java.lang.Readable r)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Readable",
          "name": "Readable",
          "isArray": false
        },
        "name": "r"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Readable",
            "name": "Readable",
            "isArray": false
          },
          "name": "r"
        },
        "comment": "the object to read from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string containing all the characters",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an I/O error occurs",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readLines(java.lang.Readable r)",
    "name": "readLines",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Readable",
          "name": "Readable",
          "isArray": false
        },
        "name": "r"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Readable",
            "name": "Readable",
            "isArray": false
          },
          "name": "r"
        },
        "comment": "the object to read from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a mutable List containing all the lines",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an I/O error occurs",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readLines(java.lang.Readable readable,com.google.common.io.LineProcessor processor)",
    "name": "readLines",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Readable",
          "name": "Readable",
          "isArray": false
        },
        "name": "readable"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.io.LineProcessor",
          "name": "LineProcessor",
          "isArray": false
        },
        "name": "processor"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an I/O error occurs",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "skipFully(java.io.Reader reader,long n)",
    "name": "skipFully",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "reader"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.Reader",
            "name": "Reader",
            "isArray": false
          },
          "name": "reader"
        },
        "comment": "the reader to read from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "the number of characters to skip",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.EOFException",
          "name": "EOFException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if this stream reaches the end before skipping all the characters",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if an I/O error occurs",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nullWriter()",
    "name": "nullWriter",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Writer",
      "name": "Writer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "asWriter(java.lang.Appendable target)",
    "name": "asWriter",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Writer",
      "name": "Writer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Appendable",
          "name": "Appendable",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Appendable",
            "name": "Appendable",
            "isArray": false
          },
          "name": "target"
        },
        "comment": "the object to which output will be sent",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new Writer object, unless target is a Writer, in which case the target is returned",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asReader(java.lang.Readable readable)",
    "name": "asReader",
    "containingClass": {
      "qualifiedName": "com.google.common.io.CharStreams",
      "name": "CharStreams",
      "isArray": false
    },
    "targetClass": "com.google.common.io.CharStreams",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Reader",
      "name": "Reader",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Readable",
          "name": "Readable",
          "isArray": false
        },
        "name": "readable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]