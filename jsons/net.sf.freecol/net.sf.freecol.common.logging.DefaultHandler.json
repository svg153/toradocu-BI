[
  {
    "signature": "DefaultHandler(boolean consoleLogging,java.lang.String fileName)",
    "name": "DefaultHandler",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.logging.DefaultHandler",
      "name": "DefaultHandler",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.logging.DefaultHandler",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "consoleLogging"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fileName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "consoleLogging"
        },
        "comment": "The flag to log to the console as well.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "net.sf.freecol.common.FreeColException",
          "name": "FreeColException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "In case the log file could not be created/written to.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.logging.DefaultHandler",
      "name": "DefaultHandler",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.logging.DefaultHandler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "flush()",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.logging.DefaultHandler",
      "name": "DefaultHandler",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.logging.DefaultHandler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "publish(java.util.logging.LogRecord record)",
    "name": "publish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.logging.DefaultHandler",
      "name": "DefaultHandler",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.logging.DefaultHandler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.LogRecord",
          "name": "LogRecord",
          "isArray": false
        },
        "name": "record"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.logging.LogRecord",
            "name": "LogRecord",
            "isArray": false
          },
          "name": "record"
        },
        "comment": "The LogRecord to publish.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]