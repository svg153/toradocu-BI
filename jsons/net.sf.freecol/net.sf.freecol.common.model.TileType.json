[
  {
    "signature": "TileType(java.lang.String id,net.sf.freecol.common.model.Specification specification)",
    "name": "TileType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isForested()",
    "name": "isForested",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a forested tile type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isWater()",
    "name": "isWater",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a water tile type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canSettle()",
    "name": "canSettle",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a settleable tile type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isHighSeasConnected()",
    "name": "isHighSeasConnected",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the tile type is inherently connected to the high seas.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDirectlyHighSeasConnected()",
    "name": "isDirectlyHighSeasConnected",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the tile type is directly connected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isElevation()",
    "name": "isElevation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is an elevated tile type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBasicMoveCost()",
    "name": "getBasicMoveCost",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The basic movement cost.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBasicWorkTurns()",
    "name": "getBasicWorkTurns",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The basic work turns.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withinRange(net.sf.freecol.common.model.TileType.RangeType rangeType,int value)",
    "name": "withinRange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileType.RangeType",
          "name": "RangeType",
          "isArray": false
        },
        "name": "rangeType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileType.RangeType",
            "name": "RangeType",
            "isArray": false
          },
          "name": "rangeType"
        },
        "comment": "The RangeType to test.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The value to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the tile type meets the range limits.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWeightedResources()",
    "name": "getWeightedResources",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A weighted list of resource types.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getResourceTypes()",
    "name": "getResourceTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of ResourceTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canHaveResourceType(net.sf.freecol.common.model.ResourceType resourceType)",
    "name": "canHaveResourceType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ResourceType",
          "name": "ResourceType",
          "isArray": false
        },
        "name": "resourceType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ResourceType",
            "name": "ResourceType",
            "isArray": false
          },
          "name": "resourceType"
        },
        "comment": "The ResourceType to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the ResourceType is compatible.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDisasters()",
    "name": "getDisasters",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a List> value",
      "kind": "RETURN",
      "condition": "true ?result>{value}"
    },
    "throwsTags": []
  },
  {
    "signature": "getAvailableProductionTypes(boolean unattended)",
    "name": "getAvailableProductionTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "Whether the production is unattended.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of ProductionTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAvailableProductionTypes(boolean unattended,java.lang.String level)",
    "name": "getAvailableProductionTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "Whether the production is unattended.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The production level.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of ProductionTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canProduce(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "canProduce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "An optional UnitType that is to do the work, if null the unattended production is considered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this tile type produces the goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBaseProduction(net.sf.freecol.common.model.ProductionType productionType,net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "getBaseProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ProductionType",
          "name": "ProductionType",
          "isArray": false
        },
        "name": "productionType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ProductionType",
            "name": "ProductionType",
            "isArray": false
          },
          "name": "productionType"
        },
        "comment": "An optional ProductionType to use, if null the best available one is used.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "An optional UnitType that is to do the work, if null the unattended production is considered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of goods produced.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPotentialProduction(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "getPotentialProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "An optional UnitType that is to do the work, if null the unattended production is considered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of goods produced.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPossibleProduction(boolean unattended)",
    "name": "getPossibleProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "Select unattended production.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of produced AbstractGoods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIndex()",
    "name": "getIndex",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"tile-type\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]