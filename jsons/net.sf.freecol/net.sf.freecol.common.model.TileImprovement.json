[
  {
    "signature": "TileImprovement(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Tile tile,net.sf.freecol.common.model.TileImprovementType type)",
    "name": "TileImprovement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
          "name": "TileImprovementType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile on which this object sits.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
            "name": "TileImprovementType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The TileImprovementType of this TileImprovement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "TileImprovement(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Tile tile,net.sf.freecol.common.model.TileImprovement template)",
    "name": "TileImprovement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
          "name": "TileImprovement",
          "isArray": false
        },
        "name": "template"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile where the improvement resides.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
            "name": "TileImprovement",
            "isArray": false
          },
          "name": "template"
        },
        "comment": "The TileImprovement to copy.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "TileImprovement(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "TileImprovement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
      "name": "TileImprovementType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The type of this improvement.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "isRiver()",
    "name": "isRiver",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a river improvement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isRoad()",
    "name": "isRoad",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a road improvement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConnectionDirections()",
    "name": "getConnectionDirections",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An array of relevant directions, or null if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTurnsToComplete()",
    "name": "getTurnsToComplete",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current turns to completion.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTurnsToComplete(int turns)",
    "name": "setTurnsToComplete",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "turns"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "turns"
        },
        "comment": "The new turns to completion.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMagnitude()",
    "name": "getMagnitude",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The magnitude of this immprovement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMagnitude(int magnitude)",
    "name": "setMagnitude",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "magnitude"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "magnitude"
        },
        "comment": "The new magnitude.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getStyle()",
    "name": "getStyle",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovementStyle",
      "name": "TileImprovementStyle",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The style",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getType())"
    },
    "throwsTags": []
  },
  {
    "signature": "isVirtual()",
    "name": "isVirtual",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a virtual improvement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setVirtual(boolean virtual)",
    "name": "setVirtual",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "virtual"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "virtual"
        },
        "comment": "The new virtual value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isConnectedTo(net.sf.freecol.common.model.Direction direction)",
    "name": "isConnectedTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this improvement is connected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setConnected(net.sf.freecol.common.model.Direction direction,boolean value)",
    "name": "setConnected",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The new status for the connection.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getConnections()",
    "name": "getConnections",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A map of the connections.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getProductionModifier(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getProductionModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Modifier",
      "name": "Modifier",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A production Modifier, or null if none applicable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMoveCost(net.sf.freecol.common.model.Direction direction,int moveCost)",
    "name": "getMoveCost",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "moveCost"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to move.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "moveCost"
        },
        "comment": "The original movement cost.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The movement cost with this improvement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getChange(net.sf.freecol.common.model.TileType tileType)",
    "name": "getChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileType",
          "name": "TileType",
          "isArray": false
        },
        "name": "tileType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileType",
            "name": "TileType",
            "isArray": false
          },
          "name": "tileType"
        },
        "comment": "The original TileType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The TileType that results from completing this improvement, or null if nothing changes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isWorkerAllowed(net.sf.freecol.common.model.Unit unit)",
    "name": "isWorkerAllowed",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "A Unit to do the building.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the supplied unit can build this improvement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConnectionsFromStyle()",
    "name": "getConnectionsFromStyle",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The connections implied by the current style.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateRiverConnections(java.lang.String conns)",
    "name": "updateRiverConnections",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "conns"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "conns"
        },
        "comment": "The encoded river connections, or null to disconnect.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The actual encoded connections found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateRoadConnections(boolean connect)",
    "name": "updateRoadConnections",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "connect"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "connect"
        },
        "comment": "If true, add connections, otherwise remove them.",
        "kind": "PARAM",
        "condition": "target.getTile().add(net.sf.freecol.common.model.Locatable)"
      }
    ],
    "returnTag": {
      "comment": "A string encoding of the correct connections for this improvement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNameKey()",
    "name": "getNameKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getZIndex()",
    "name": "getZIndex",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isTileTypeAllowed(net.sf.freecol.common.model.TileType tileType)",
    "name": "isTileTypeAllowed",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileType",
          "name": "TileType",
          "isArray": false
        },
        "name": "tileType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "applyBonus(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType,int potential)",
    "name": "applyBonus",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "potential"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canProduce(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "canProduce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getProductionModifiers(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "getProductionModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isNatural()",
    "name": "isNatural",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isComplete()",
    "name": "isComplete",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkIntegrity(boolean fix)",
    "name": "checkIntegrity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fix"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovement",
      "name": "TileImprovement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileImprovement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"tileImprovement\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]