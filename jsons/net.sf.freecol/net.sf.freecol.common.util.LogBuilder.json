[
  {
    "signature": "LogBuilder(int size)",
    "name": "LogBuilder",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "An initial size for the buffer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "add(java.lang.Object[] objects)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "objects"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "objects"
        },
        "comment": "The objects to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addCollection(java.lang.String delim,java.util.Collection c)",
    "name": "addCollection",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "delim"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "delim"
        },
        "comment": "An internal delimiter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "The Collection of objects to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addStackTrace()",
    "name": "addStackTrace",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "truncate(int size)",
    "name": "truncate",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "The size to truncate to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "mark()",
    "name": "mark",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "grew(java.lang.Object[] objects)",
    "name": "grew",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "objects"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "objects"
        },
        "comment": "Optional Objects to insert if the buffer has grown.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the buffer grew (before inserting).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "shrink(java.lang.String delim)",
    "name": "shrink",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "delim"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "delim"
        },
        "comment": "The delimiter to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "log(java.util.logging.Logger logger,java.util.logging.Level level)",
    "name": "log",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.Logger",
          "name": "Logger",
          "isArray": false
        },
        "name": "logger"
      },
      {
        "type": {
          "qualifiedName": "java.util.logging.Level",
          "name": "Level",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.logging.Logger",
            "name": "Logger",
            "isArray": false
          },
          "name": "logger"
        },
        "comment": "The Logger to write to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.logging.Level",
            "name": "Level",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The logging Level.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The amount of data accumulated so far.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "wide(int size,java.lang.Object[] objects)",
    "name": "wide",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "objects"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "The width to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "objects"
        },
        "comment": "The Objects to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
      "name": "LogBuilder",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.util.LogBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The buffer contents.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]