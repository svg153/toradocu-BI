[
  {
    "signature": "requireCitiesOfCibola(java.util.Random random)",
    "name": "requireCitiesOfCibola",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSeasonName(int index)",
    "name": "getSeasonName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "The index to look up.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The season name, or null on failure.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNextCityOfCibola()",
    "name": "getNextCityOfCibola",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A name for a city of Cibola, or null if exhausted.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCitiesOfCibola()",
    "name": "getCitiesOfCibola",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of city names.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clearCitiesOfCibola()",
    "name": "clearCitiesOfCibola",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addCityOfCibola(java.lang.String key)",
    "name": "addCityOfCibola",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "The key to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMercenaryLeaderIndex(java.util.Random random)",
    "name": "getMercenaryLeaderIndex",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The index of a random mercenary leader.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMercenaryLeaderName(int index)",
    "name": "getMercenaryLeaderName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "The index to look up.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The mercenary leader name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNewLandName(net.sf.freecol.common.model.Player player)",
    "name": "getNewLandName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to query.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The new land name of a player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRegionName(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.Region region)",
    "name": "getRegionName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Region",
          "name": "Region",
          "isArray": false
        },
        "name": "region"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to find a region name for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Region",
            "name": "Region",
            "isArray": false
          },
          "name": "region"
        },
        "comment": "The Region to name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A suitable name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCapitalName(net.sf.freecol.common.model.Player player,java.util.Random random)",
    "name": "getCapitalName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to get a capital name for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "An optional pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The name of this players capital.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSettlementName(net.sf.freecol.common.model.Player player,java.util.Random random)",
    "name": "getSettlementName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to get a settlement name for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "An optional pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A new settlement name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "putSettlementName(net.sf.freecol.common.model.Player player,java.lang.String name)",
    "name": "putSettlementName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player returning the settlement name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "A formerly suggested settlement name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getTradeRouteName(net.sf.freecol.common.model.Player player)",
    "name": "getTradeRouteName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to get the name for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A new trade route name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitName(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.UnitType type,java.util.Random random)",
    "name": "getUnitName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.i18n.NameCache",
      "name": "NameCache",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.i18n.NameCache",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player who will own the unit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The UnitType to choose a name for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A name for the unit, or null if not available.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]