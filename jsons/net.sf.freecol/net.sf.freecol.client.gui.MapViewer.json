[
  {
    "signature": "MapViewer(net.sf.freecol.client.FreeColClient freeColClient)",
    "name": "MapViewer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.FreeColClient",
          "name": "FreeColClient",
          "isArray": false
        },
        "name": "freeColClient"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.FreeColClient",
            "name": "FreeColClient",
            "isArray": false
          },
          "name": "freeColClient"
        },
        "comment": "The FreeColClient for the game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getImageLibrary()",
    "name": "getImageLibrary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.client.gui.ImageLibrary",
      "name": "ImageLibrary",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The image library;",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getViewMode()",
    "name": "getViewMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The view mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toggleViewMode()",
    "name": "toggleViewMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "changeViewMode(int newViewMode)",
    "name": "changeViewMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newViewMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newViewMode"
        },
        "comment": "The new view mode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "centerActiveUnit()",
    "name": "centerActiveUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "convertToMapTile(int x,int y)",
    "name": "convertToMapTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "Tile",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "The x-coordinate in pixels.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "The y-coordinate in pixels.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Tile that is located at the given position on the screen.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "executeWithUnitOutForAnimation(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Tile sourceTile,net.sf.freecol.client.gui.OutForAnimationCallback r)",
    "name": "executeWithUnitOutForAnimation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "sourceTile"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.OutForAnimationCallback",
          "name": "OutForAnimationCallback",
          "isArray": false
        },
        "name": "r"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to be hidden.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "sourceTile"
        },
        "comment": "The source Tile.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.OutForAnimationCallback",
            "name": "OutForAnimationCallback",
            "isArray": false
          },
          "name": "r"
        },
        "comment": "The code to be executed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "calculateTileBounds(net.sf.freecol.common.model.Tile tile)",
    "name": "calculateTileBounds",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Rectangle",
      "name": "Rectangle",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile on the screen.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The bounds Rectangle.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "calculateTilePosition(net.sf.freecol.common.model.Tile t)",
    "name": "calculateTilePosition",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Point",
      "name": "Point",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The Tile to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The position of the given Tile, or null if the Tile is not drawn on the mapboard.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTileWidth()",
    "name": "getTileWidth",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "calculateUnitLabelPositionInTile(int labelWidth,int labelHeight,java.awt.Point tileP)",
    "name": "calculateUnitLabelPositionInTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Point",
      "name": "Point",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "labelWidth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "labelHeight"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Point",
          "name": "Point",
          "isArray": false
        },
        "name": "tileP"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "labelWidth"
        },
        "comment": "The width of the unit label.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "labelHeight"
        },
        "comment": "The width of the unit label.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Point",
            "name": "Point",
            "isArray": false
          },
          "name": "tileP"
        },
        "comment": "The position of the Tile on the screen.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The position where to put the label, null if tileP is null.",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "onScreen(net.sf.freecol.common.model.Tile tileToCheck)",
    "name": "onScreen",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tileToCheck"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tileToCheck"
        },
        "comment": "The position of the Tile in question.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the Tile will be drawn on the screen, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "startCursorBlinking()",
    "name": "startCursorBlinking",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "stopBlinking()",
    "name": "stopBlinking",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "restartBlinking()",
    "name": "restartBlinking",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFocus()",
    "name": "getFocus",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "Tile",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The center tile of the displayed map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setFocus(net.sf.freecol.common.model.Tile focus)",
    "name": "setFocus",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "focus"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "focus"
        },
        "comment": "The Position of the center tile of the displayed map.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setOffsetFocus(net.sf.freecol.common.model.Tile tile)",
    "name": "setOffsetFocus",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Positive if the focus is on the right hand side, negative if on the left, zero on failure.",
      "kind": "RETURN",
      "condition": "result<0"
    },
    "throwsTags": []
  },
  {
    "signature": "forceReposition()",
    "name": "forceReposition",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "scrollMap(net.sf.freecol.common.model.Direction direction)",
    "name": "scrollMap",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to scroll in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if scrolling occurred.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSelectedTile()",
    "name": "getSelectedTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "Tile",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Tile selected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSelectedTile(net.sf.freecol.common.model.Tile newTile)",
    "name": "setSelectedTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "newTile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "newTile"
        },
        "comment": "The Tile, the tile to be selected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the focus was set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getActiveUnit()",
    "name": "getActiveUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "Unit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Unit.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.wait())"
    },
    "throwsTags": []
  },
  {
    "signature": "setActiveUnit(net.sf.freecol.common.model.Unit activeUnit)",
    "name": "setActiveUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "activeUnit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "activeUnit"
        },
        "comment": "The new active Unit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the focus was set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isGotoStarted()",
    "name": "isGotoStarted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if a goto operation is in progress.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "startGoto()",
    "name": "startGoto",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "stopGoto()",
    "name": "stopGoto",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGotoPath()",
    "name": "getGotoPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.PathNode",
      "name": "PathNode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The path that should be drawn on the map or null if no path should be drawn.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGotoPath(net.sf.freecol.common.model.PathNode gotoPath)",
    "name": "setGotoPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.PathNode",
          "name": "PathNode",
          "isArray": false
        },
        "name": "gotoPath"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.PathNode",
            "name": "PathNode",
            "isArray": false
          },
          "name": "gotoPath"
        },
        "comment": "The path that should be drawn on the map or null if no path should be drawn.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "updateCurrentPathForActiveUnit()",
    "name": "updateCurrentPathForActiveUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCurrentPath(net.sf.freecol.common.model.PathNode path)",
    "name": "setCurrentPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.PathNode",
          "name": "PathNode",
          "isArray": false
        },
        "name": "path"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.PathNode",
            "name": "PathNode",
            "isArray": false
          },
          "name": "path"
        },
        "comment": "The current PathNode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setSize(java.awt.Dimension size)",
    "name": "setSize",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Dimension",
          "name": "Dimension",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetMapScale()",
    "name": "resetMapScale",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isAtMaxMapScale()",
    "name": "isAtMaxMapScale",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isAtMinMapScale()",
    "name": "isAtMinMapScale",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "increaseMapScale()",
    "name": "increaseMapScale",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "decreaseMapScale()",
    "name": "decreaseMapScale",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "displayMap(java.awt.Graphics2D g)",
    "name": "displayMap",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
      "name": "MapViewer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.MapViewer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics2D",
          "name": "Graphics2D",
          "isArray": false
        },
        "name": "g"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Graphics2D",
            "name": "Graphics2D",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "The Graphics2D object on which to draw the Map.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]