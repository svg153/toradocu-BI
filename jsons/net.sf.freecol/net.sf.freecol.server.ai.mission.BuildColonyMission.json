[
  {
    "signature": "BuildColonyMission(net.sf.freecol.server.ai.AIMain aiMain,net.sf.freecol.server.ai.AIUnit aiUnit,net.sf.freecol.common.model.Location target)",
    "name": "BuildColonyMission",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit this mission is created for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "target"
        },
        "comment": "The target Location for this mission.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "BuildColonyMission(net.sf.freecol.server.ai.AIMain aiMain,net.sf.freecol.server.ai.AIUnit aiUnit,net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "BuildColonyMission",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit this mission is created for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The input stream containing the XML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "extractTarget(net.sf.freecol.server.ai.AIUnit aiUnit,net.sf.freecol.common.model.PathNode path)",
    "name": "extractTarget",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.PathNode",
          "name": "PathNode",
          "isArray": false
        },
        "name": "path"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "A AIUnit to perform the mission.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.PathNode",
            "name": "PathNode",
            "isArray": false
          },
          "name": "path"
        },
        "comment": "A PathNode to extract a target from, (uses the unit location if null).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A target for this mission, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "scorePath(net.sf.freecol.server.ai.AIUnit aiUnit,net.sf.freecol.common.model.PathNode path)",
    "name": "scorePath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.PathNode",
          "name": "PathNode",
          "isArray": false
        },
        "name": "path"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit to build the colony.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.PathNode",
            "name": "PathNode",
            "isArray": false
          },
          "name": "path"
        },
        "comment": "The PathNode to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A score for the target.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findTargetPath(net.sf.freecol.server.ai.AIUnit aiUnit,int range,boolean deferOK)",
    "name": "findTargetPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.PathNode",
      "name": "PathNode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "range"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "deferOK"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit to execute this mission.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "range"
        },
        "comment": "An upper bound on the number of moves.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "deferOK"
        },
        "comment": "Enables deferring to a fallback colony.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A path to the new target, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findTarget(net.sf.freecol.server.ai.AIUnit aiUnit,int range,boolean deferOK)",
    "name": "findTarget",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "range"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "deferOK"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit to find a colony site with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "range"
        },
        "comment": "An upper bound on the number of moves.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "deferOK"
        },
        "comment": "Enables deferring to a fallback colony.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A new target for this mission.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "invalidReason(net.sf.freecol.server.ai.AIUnit aiUnit,net.sf.freecol.common.model.Location loc)",
    "name": "invalidReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "loc"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit to check.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "loc"
        },
        "comment": "The Location to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A reason for invalidity, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "invalidReason(net.sf.freecol.server.ai.AIUnit aiUnit)",
    "name": "invalidReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiUnit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiUnit"
        },
        "comment": "The AIUnit to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A reason for mission invalidity, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBaseTransportPriority()",
    "name": "getBaseTransportPriority",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTarget()",
    "name": "getTarget",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setTarget(net.sf.freecol.common.model.Location target)",
    "name": "setTarget",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "findTarget()",
    "name": "findTarget",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "invalidReason()",
    "name": "invalidReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doMission(net.sf.freecol.common.util.LogBuilder lb)",
    "name": "doMission",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.Mission",
      "name": "Mission",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.mission.BuildColonyMission",
      "name": "BuildColonyMission",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.mission.BuildColonyMission",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"buildColonyMission\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]