[
  {
    "signature": "RandomRange(int probability,int minimum,int maximum,int factor)",
    "name": "RandomRange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "probability"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minimum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maximum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "factor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "probability"
        },
        "comment": "The probability of this result.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minimum"
        },
        "comment": "The range inclusive minimum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maximum"
        },
        "comment": "The range inclusive maximum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "factor"
        },
        "comment": "The result multiplier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "RandomRange(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "RandomRange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getProbability()",
    "name": "getProbability",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The probability.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMinimum()",
    "name": "getMinimum",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The lower bound.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMaximum()",
    "name": "getMaximum",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The upper bound.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFactor()",
    "name": "getFactor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The factor.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getScopes()",
    "name": "getScopes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The scopes of this RandomRange.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appliesTo(net.sf.freecol.common.model.FreeColObject fco)",
    "name": "appliesTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "fco"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "fco"
        },
        "comment": "The FreeColObject to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the scopes are satisfied.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAmount(java.lang.String prefix,java.util.Random random,boolean continuous)",
    "name": "getAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "continuous"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "prefix"
        },
        "comment": "A logger prefix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "continuous"
        },
        "comment": "Choose a continuous or discrete result.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A random amount of plunder as defined by this RandomRange.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw,java.lang.String tag)",
    "name": "toXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readFromXML(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readFromXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.RandomRange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The input stream with the XML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems reading from the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]