[
  {
    "signature": "getCost(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Location oldLocation,net.sf.freecol.common.model.Location newLocation,int movesLeftBefore)",
    "name": "getCost",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.pathfinding.CostDecider",
      "name": "CostDecider",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.pathfinding.CostDecider",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "oldLocation"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "newLocation"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "movesLeftBefore"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that will be used when determining the cost. This should be the same type of unit as the one following the path.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "oldLocation"
        },
        "comment": "The Location we are moving from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "newLocation"
        },
        "comment": "The Location we are moving to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "movesLeftBefore"
        },
        "comment": "The moves left to the unit prior to moving.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The cost of moving the given unit from the oldLocation to the newLocation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMovesLeft()",
    "name": "getMovesLeft",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.pathfinding.CostDecider",
      "name": "CostDecider",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.pathfinding.CostDecider",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of moves left.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNewTurns()",
    "name": "getNewTurns",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.pathfinding.CostDecider",
      "name": "CostDecider",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.pathfinding.CostDecider",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of turns consumed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]