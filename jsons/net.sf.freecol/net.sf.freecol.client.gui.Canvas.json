[
  {
    "signature": "Canvas(net.sf.freecol.client.FreeColClient freeColClient,java.awt.GraphicsDevice graphicsDevice,net.sf.freecol.client.gui.SwingGUI gui,java.awt.Dimension desiredSize,net.sf.freecol.client.gui.MapViewer mapViewer)",
    "name": "Canvas",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.FreeColClient",
          "name": "FreeColClient",
          "isArray": false
        },
        "name": "freeColClient"
      },
      {
        "type": {
          "qualifiedName": "java.awt.GraphicsDevice",
          "name": "GraphicsDevice",
          "isArray": false
        },
        "name": "graphicsDevice"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.SwingGUI",
          "name": "SwingGUI",
          "isArray": false
        },
        "name": "gui"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Dimension",
          "name": "Dimension",
          "isArray": false
        },
        "name": "desiredSize"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
          "name": "MapViewer",
          "isArray": false
        },
        "name": "mapViewer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.FreeColClient",
            "name": "FreeColClient",
            "isArray": false
          },
          "name": "freeColClient"
        },
        "comment": "The FreeColClient for the game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.GraphicsDevice",
            "name": "GraphicsDevice",
            "isArray": false
          },
          "name": "graphicsDevice"
        },
        "comment": "The used graphics device.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.SwingGUI",
            "name": "SwingGUI",
            "isArray": false
          },
          "name": "gui"
        },
        "comment": "The gui.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Dimension",
            "name": "Dimension",
            "isArray": false
          },
          "name": "desiredSize"
        },
        "comment": "The desired size of the frame.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.MapViewer",
            "name": "MapViewer",
            "isArray": false
          },
          "name": "mapViewer"
        },
        "comment": "The object responsible of drawing the map onto this component.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isWindowed()",
    "name": "isWindowed",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "changeWindowedMode()",
    "name": "changeWindowedMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "startMapEditorGUI()",
    "name": "startMapEditorGUI",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "quit()",
    "name": "quit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "initializeInGame()",
    "name": "initializeInGame",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetMenuBar()",
    "name": "resetMenuBar",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "updateMenuBar()",
    "name": "updateMenuBar",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "scrollMap(net.sf.freecol.common.model.Direction direction)",
    "name": "scrollMap",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to scroll in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if scrolling occurred.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "convertToMapTile(int x,int y)",
    "name": "convertToMapTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "Tile",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "The x-coordinate in pixels.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "The y-coordinate in pixels.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Tile that is located at the given position on the screen.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getViewMode()",
    "name": "getViewMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The view mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getActiveUnit()",
    "name": "getActiveUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "Unit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Unit.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getUI())"
    },
    "throwsTags": []
  },
  {
    "signature": "setCurrentPath(net.sf.freecol.common.model.PathNode path)",
    "name": "setCurrentPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.PathNode",
          "name": "PathNode",
          "isArray": false
        },
        "name": "path"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.PathNode",
            "name": "PathNode",
            "isArray": false
          },
          "name": "path"
        },
        "comment": "The current PathNode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "updateCurrentPathForActiveUnit()",
    "name": "updateCurrentPathForActiveUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDragPoint()",
    "name": "getDragPoint",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Point",
      "name": "Point",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Point where the mouse was initially clicked.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDragPoint(int x,int y)",
    "name": "setDragPoint",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "The mouse's x position.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "The mouse's y position.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isGotoStarted()",
    "name": "isGotoStarted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if a goto operation is in progress.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGotoPath()",
    "name": "getGotoPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.PathNode",
      "name": "PathNode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The path that should be drawn on the map or null if no path should be drawn.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGotoPath(net.sf.freecol.common.model.PathNode gotoPath)",
    "name": "setGotoPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.PathNode",
          "name": "PathNode",
          "isArray": false
        },
        "name": "gotoPath"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.PathNode",
            "name": "PathNode",
            "isArray": false
          },
          "name": "gotoPath"
        },
        "comment": "The path that should be drawn on the map or null if no path should be drawn.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "startGoto()",
    "name": "startGoto",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "stopGoto()",
    "name": "stopGoto",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "add(java.awt.Component comp)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Component",
      "name": "Component",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Component",
          "name": "Component",
          "isArray": false
        },
        "name": "comp"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Component",
            "name": "Component",
            "isArray": false
          },
          "name": "comp"
        },
        "comment": "The Component to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The component argument.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "add(java.awt.Component comp,java.lang.Integer i)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Component",
          "name": "Component",
          "isArray": false
        },
        "name": "comp"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Component",
            "name": "Component",
            "isArray": false
          },
          "name": "comp"
        },
        "comment": "The Component to add to this canvas.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "i"
        },
        "comment": "The layer to add the component to (see JLayeredPane).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "closeMenus()",
    "name": "closeMenus",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "closeMainPanel()",
    "name": "closeMainPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "closeStatusPanel()",
    "name": "closeStatusPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "containsInGameComponents()",
    "name": "containsInGameComponents",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if there is any in game components.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "displayChatMessage(net.sf.freecol.client.gui.GUIMessage message)",
    "name": "displayChatMessage",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.GUIMessage",
          "name": "GUIMessage",
          "isArray": false
        },
        "name": "message"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.GUIMessage",
            "name": "GUIMessage",
            "isArray": false
          },
          "name": "message"
        },
        "comment": "The chat message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "dialogRemove(net.sf.freecol.client.gui.panel.FreeColDialog fcd)",
    "name": "dialogRemove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.panel.FreeColDialog",
          "name": "FreeColDialog",
          "isArray": false
        },
        "name": "fcd"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.panel.FreeColDialog",
            "name": "FreeColDialog",
            "isArray": false
          },
          "name": "fcd"
        },
        "comment": "The dialog to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLoadingSavegameDialog()",
    "name": "getLoadingSavegameDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.LoadingSavegameDialog",
      "name": "LoadingSavegameDialog",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The LoadingSavegameDialog.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "getShowingSubPanel()",
    "name": "getShowingSubPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Component",
      "name": "Component",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A Component the Canvas is displaying, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isClientOptionsDialogShowing()",
    "name": "isClientOptionsDialogShowing",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the client options are showing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isMapboardActionsEnabled()",
    "name": "isMapboardActionsEnabled",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if no internal frames are open.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isShowingSubPanel()",
    "name": "isShowingSubPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the Canvas is displaying an internal frame.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "refresh()",
    "name": "refresh",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeFromCanvas(java.awt.Component comp)",
    "name": "removeFromCanvas",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Component",
          "name": "Component",
          "isArray": false
        },
        "name": "comp"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Component",
            "name": "Component",
            "isArray": false
          },
          "name": "comp"
        },
        "comment": "The Component to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeInGameComponents()",
    "name": "removeInGameComponents",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "restoreSavedSize(java.awt.Component comp,java.awt.Dimension d)",
    "name": "restoreSavedSize",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Component",
          "name": "Component",
          "isArray": false
        },
        "name": "comp"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Dimension",
          "name": "Dimension",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Component",
            "name": "Component",
            "isArray": false
          },
          "name": "comp"
        },
        "comment": "The Component to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Dimension",
            "name": "Dimension",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "The Dimension to use as default.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "returnToTitle()",
    "name": "returnToTitle",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setupMouseListeners()",
    "name": "setupMouseListeners",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "paintComponent(java.awt.Graphics g)",
    "name": "paintComponent",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Graphics",
          "name": "Graphics",
          "isArray": false
        },
        "name": "g"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove(java.awt.Component comp)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Component",
          "name": "Component",
          "isArray": false
        },
        "name": "comp"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "refreshPlayersTable()",
    "name": "refreshPlayersTable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "updateGameOptions()",
    "name": "updateGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "updateMapGeneratorOptions()",
    "name": "updateMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showChoiceDialog(net.sf.freecol.common.model.Tile tile,java.lang.Object obj,javax.swing.ImageIcon icon,java.lang.String cancelKey,java.util.List choices)",
    "name": "showChoiceDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      },
      {
        "type": {
          "qualifiedName": "javax.swing.ImageIcon",
          "name": "ImageIcon",
          "isArray": false
        },
        "name": "icon"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cancelKey"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "choices"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "An optional Tile to make visible (not under the dialog!)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "An object that explains the choice for the user.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "javax.swing.ImageIcon",
            "name": "ImageIcon",
            "isArray": false
          },
          "name": "icon"
        },
        "comment": "An optional icon to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "cancelKey"
        },
        "comment": "Key for the text of the optional cancel button.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "choices"
        },
        "comment": "The List containing the ChoiceItems to create buttons for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The corresponding member of the values array to the selected option.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showConfirmDialog(net.sf.freecol.common.model.Tile tile,java.lang.Object obj,javax.swing.ImageIcon icon,java.lang.String okKey,java.lang.String cancelKey)",
    "name": "showConfirmDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      },
      {
        "type": {
          "qualifiedName": "javax.swing.ImageIcon",
          "name": "ImageIcon",
          "isArray": false
        },
        "name": "icon"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "okKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cancelKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "An optional Tile to make visible (not under the dialog!)",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "An object that explains the choice for the user.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "javax.swing.ImageIcon",
            "name": "ImageIcon",
            "isArray": false
          },
          "name": "icon"
        },
        "comment": "An optional icon to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "okKey"
        },
        "comment": "The text displayed on the \"ok\"-button.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "cancelKey"
        },
        "comment": "The text displayed on the \"cancel\"-button.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the user clicked the \"ok\"-button.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showInputDialog(net.sf.freecol.common.model.Tile tile,net.sf.freecol.common.model.StringTemplate template,java.lang.String defaultValue,java.lang.String okKey,java.lang.String cancelKey)",
    "name": "showInputDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "template"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defaultValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "okKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cancelKey"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "An optional tile to make visible (not under the dialog).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "template"
        },
        "comment": "A StringTemplate that explains the action to the user.",
        "kind": "PARAM",
        "condition": "target.action(java.awt.Event, java.lang.Object)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value appearing in the text field.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "okKey"
        },
        "comment": "A key displayed on the \"ok\"-button.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "cancelKey"
        },
        "comment": "A key displayed on the optional \"cancel\"-button.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The text the user entered, or null if cancelled.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeTradeRoutePanel(net.sf.freecol.client.gui.panel.TradeRoutePanel panel)",
    "name": "removeTradeRoutePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.panel.TradeRoutePanel",
          "name": "TradeRoutePanel",
          "isArray": false
        },
        "name": "panel"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showAboutPanel()",
    "name": "showAboutPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showBuildQueuePanel(net.sf.freecol.common.model.Colony colony)",
    "name": "showBuildQueuePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony to show the build queue of.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showBuildQueuePanel(net.sf.freecol.common.model.Colony colony,java.lang.Runnable callBack)",
    "name": "showBuildQueuePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "callBack"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony to show the build queue of.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Runnable",
            "name": "Runnable",
            "isArray": false
          },
          "name": "callBack"
        },
        "comment": "The Runnable that is run when the panel closes.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showCaptureGoodsDialog(net.sf.freecol.common.model.Unit unit,java.util.List gl,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showCaptureGoodsDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "gl"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit capturing goods.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "gl"
        },
        "comment": "The list of Goods to choose from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showChatPanel()",
    "name": "showChatPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showChooseFoundingFatherDialog(java.util.List ffs,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showChooseFoundingFatherDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "ffs"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "ffs"
        },
        "comment": "The FoundingFathers to choose from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showClientOptionsDialog()",
    "name": "showClientOptionsDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The modified OptionGroup, or null if not modified.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showColonyPanel(net.sf.freecol.common.model.Colony colony,net.sf.freecol.common.model.Unit unit)",
    "name": "showColonyPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.ColonyPanel",
      "name": "ColonyPanel",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The colony whose panel needs to be displayed.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "An optional Unit to select within the panel.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The colony panel.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showColopediaPanel(java.lang.String nodeId)",
    "name": "showColopediaPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nodeId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "nodeId"
        },
        "comment": "The node identifier to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showColorChooserPanel(java.awt.event.ActionListener al)",
    "name": "showColorChooserPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.ColorChooserPanel",
      "name": "ColorChooserPanel",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.event.ActionListener",
          "name": "ActionListener",
          "isArray": false
        },
        "name": "al"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.event.ActionListener",
            "name": "ActionListener",
            "isArray": false
          },
          "name": "al"
        },
        "comment": "An ActionListener to handle panel button presses.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The ColorChooserPanel created.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showCompactLabourReport()",
    "name": "showCompactLabourReport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showCompactLabourReport(net.sf.freecol.client.gui.panel.LabourData.UnitData unitData)",
    "name": "showCompactLabourReport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.panel.LabourData.UnitData",
          "name": "UnitData",
          "isArray": false
        },
        "name": "unitData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.panel.LabourData.UnitData",
            "name": "UnitData",
            "isArray": false
          },
          "name": "unitData"
        },
        "comment": "The UnitData to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showConfirmDeclarationDialog()",
    "name": "showConfirmDeclarationDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of names for a new nation.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showDeclarationPanel()",
    "name": "showDeclarationPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showDifficultyDialog(net.sf.freecol.common.model.Specification spec,net.sf.freecol.common.option.OptionGroup group,boolean editable)",
    "name": "showDifficultyDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "spec"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "group"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "editable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "spec"
        },
        "comment": "The enclosing Specification.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "group"
        },
        "comment": "The OptionGroup containing the difficulty.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "editable"
        },
        "comment": "If the options should be editable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The resulting OptionGroup.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showDumpCargoDialog(net.sf.freecol.common.model.Unit unit,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showDumpCargoDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is dumping.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showEditOptionDialog(net.sf.freecol.common.option.Option option)",
    "name": "showEditOptionDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.Option",
          "name": "Option",
          "isArray": false
        },
        "name": "option"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.Option",
            "name": "Option",
            "isArray": false
          },
          "name": "option"
        },
        "comment": "The Option to edit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The response returned by the dialog.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showEditSettlementDialog(net.sf.freecol.common.model.IndianSettlement settlement)",
    "name": "showEditSettlementDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
          "name": "IndianSettlement",
          "isArray": false
        },
        "name": "settlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
            "name": "IndianSettlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The IndianSettlement to edit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showEmigrationDialog(net.sf.freecol.common.model.Player player,boolean fountainOfYouth,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showEmigrationDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fountainOfYouth"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player whose unit is emigrating.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "fountainOfYouth"
        },
        "comment": "Is this dialog displayed as a result of a fountain of youth.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showEndTurnDialog(java.util.List units,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showEndTurnDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "units"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "units"
        },
        "comment": "A list of Units that could still move.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showErrorMessage(java.lang.String messageId)",
    "name": "showErrorMessage",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "messageId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "messageId"
        },
        "comment": "The i18n-keyname of the error message to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showErrorMessage(java.lang.String messageId,java.lang.String message)",
    "name": "showErrorMessage",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "messageId"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "message"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "messageId"
        },
        "comment": "The i18n-keyname of the error message to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "message"
        },
        "comment": "An alternative (possibly non-i18n) message to display if the resource specified by messageId is unavailable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showEuropePanel()",
    "name": "showEuropePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showEventPanel(java.lang.String header,java.lang.String image,java.lang.String footer)",
    "name": "showEventPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "header"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "image"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "footer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "header"
        },
        "comment": "The title.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "image"
        },
        "comment": "A resource key for the image to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "footer"
        },
        "comment": "Optional footer text.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showFindSettlementPanel()",
    "name": "showFindSettlementPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showFirstContactDialog(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.Player other,net.sf.freecol.common.model.Tile tile,int settlementCount,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showFirstContactDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "other"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "settlementCount"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player making contact.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "The Player to contact.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "An optional Tile on offer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "settlementCount"
        },
        "comment": "The number of settlements the other player has (from the server, other.getNumberOfSettlements() is wrong here!).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showForeignColony(net.sf.freecol.common.model.Settlement settlement)",
    "name": "showForeignColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement with the colony",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showGameOptionsDialog(boolean editable,boolean custom)",
    "name": "showGameOptionsDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "editable"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "custom"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "editable"
        },
        "comment": "Should the game options be editable?",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "custom"
        },
        "comment": "Whether to load custom options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The OptionGroup selected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showHighScoresPanel(java.lang.String messageId,java.util.List scores)",
    "name": "showHighScoresPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "messageId"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "scores"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "messageId"
        },
        "comment": "An optional message to add to the high scores panel.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "scores"
        },
        "comment": "The list of HighScores to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showIndianSettlementPanel(net.sf.freecol.common.model.IndianSettlement indianSettlement)",
    "name": "showIndianSettlementPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
          "name": "IndianSettlement",
          "isArray": false
        },
        "name": "indianSettlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
            "name": "IndianSettlement",
            "isArray": false
          },
          "name": "indianSettlement"
        },
        "comment": "The IndianSettlement to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showInformationMessage(net.sf.freecol.common.model.FreeColObject displayObject,net.sf.freecol.common.model.StringTemplate template)",
    "name": "showInformationMessage",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "displayObject"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "template"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "displayObject"
        },
        "comment": "Optional object for displaying an icon.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "template"
        },
        "comment": "The StringTemplate to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showInformationMessage(net.sf.freecol.common.model.FreeColObject displayObject,net.sf.freecol.common.model.Tile tile,javax.swing.ImageIcon icon,net.sf.freecol.common.model.StringTemplate template)",
    "name": "showInformationMessage",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "displayObject"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "javax.swing.ImageIcon",
          "name": "ImageIcon",
          "isArray": false
        },
        "name": "icon"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "template"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "displayObject"
        },
        "comment": "Optional object for displaying.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile the object is at.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "javax.swing.ImageIcon",
            "name": "ImageIcon",
            "isArray": false
          },
          "name": "icon"
        },
        "comment": "The icon to display for the object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "template"
        },
        "comment": "The StringTemplate to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showLoadDialog(java.io.File directory,javax.swing.filechooser.FileFilter[] filters)",
    "name": "showLoadDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.File",
      "name": "File",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "directory"
      },
      {
        "type": {
          "qualifiedName": "javax.swing.filechooser.FileFilter[]",
          "name": "FileFilter[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "javax.swing.filechooser.FileFilter",
            "name": "FileFilter",
            "isArray": false
          }
        },
        "name": "filters"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "directory"
        },
        "comment": "The directory containing the files.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "javax.swing.filechooser.FileFilter[]",
            "name": "FileFilter[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "javax.swing.filechooser.FileFilter",
              "name": "FileFilter",
              "isArray": false
            }
          },
          "name": "filters"
        },
        "comment": "The file filters which the user can select in the dialog.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The selected File.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showLoadingSavegameDialog(boolean publicServer,boolean singlePlayer)",
    "name": "showLoadingSavegameDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "publicServer"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "singlePlayer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "publicServer"
        },
        "comment": "Default value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "singlePlayer"
        },
        "comment": "Default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the \"ok\"-button was pressed and false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showLogFilePanel()",
    "name": "showLogFilePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showMainPanel(java.lang.String userMsg)",
    "name": "showMainPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "userMsg"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "userMsg"
        },
        "comment": "An option message key to show.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showMapEditorTransformPanel()",
    "name": "showMapEditorTransformPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showMapGeneratorOptionsDialog(boolean editable)",
    "name": "showMapGeneratorOptionsDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "editable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "editable"
        },
        "comment": "Should these options be editable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The OptionGroup as edited.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showMapSizeDialog()",
    "name": "showMapSizeDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Dimension",
      "name": "Dimension",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The response returned by the dialog.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showModelMessages(java.util.List messages)",
    "name": "showModelMessages",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "messages"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "messages"
        },
        "comment": "The ModelMessages to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showMonarchDialog(net.sf.freecol.common.model.Monarch.MonarchAction action,net.sf.freecol.common.model.StringTemplate template,java.lang.String monarchKey,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showMonarchDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Monarch.MonarchAction",
          "name": "MonarchAction",
          "isArray": false
        },
        "name": "action"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "template"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "monarchKey"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Monarch.MonarchAction",
            "name": "MonarchAction",
            "isArray": false
          },
          "name": "action"
        },
        "comment": "The MonarchAction underway.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "template"
        },
        "comment": "The StringTemplate describing the situation.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "monarchKey"
        },
        "comment": "The resource key for the monarch image.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showNamingDialog(net.sf.freecol.common.model.StringTemplate template,java.lang.String defaultName,net.sf.freecol.common.model.Unit unit,net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showNamingDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "template"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defaultName"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "template"
        },
        "comment": "A StringTemplate for the message to explain the dialog.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "defaultName"
        },
        "comment": "The default name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit discovering it.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showNegotiationDialog(net.sf.freecol.common.model.FreeColGameObject our,net.sf.freecol.common.model.FreeColGameObject other,net.sf.freecol.common.model.DiplomaticTrade agreement,net.sf.freecol.common.model.StringTemplate comment)",
    "name": "showNegotiationDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
      "name": "DiplomaticTrade",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "our"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "other"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
          "name": "DiplomaticTrade",
          "isArray": false
        },
        "name": "agreement"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "comment"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "our"
        },
        "comment": "Our FreeColGameObject that is negotiating.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "The other FreeColGameObject.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
            "name": "DiplomaticTrade",
            "isArray": false
          },
          "name": "agreement"
        },
        "comment": "The current DiplomaticTrade agreement.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "comment"
        },
        "comment": "An optional StringTemplate containing a commentary message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An updated agreement.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showNewPanel(net.sf.freecol.common.model.Specification specification)",
    "name": "showNewPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showVideoComponent(java.awt.Component vp,java.awt.event.MouseListener ml,java.awt.event.KeyListener kl)",
    "name": "showVideoComponent",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Component",
          "name": "Component",
          "isArray": false
        },
        "name": "vp"
      },
      {
        "type": {
          "qualifiedName": "java.awt.event.MouseListener",
          "name": "MouseListener",
          "isArray": false
        },
        "name": "ml"
      },
      {
        "type": {
          "qualifiedName": "java.awt.event.KeyListener",
          "name": "KeyListener",
          "isArray": false
        },
        "name": "kl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Component",
            "name": "Component",
            "isArray": false
          },
          "name": "vp"
        },
        "comment": "The video Component.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.event.MouseListener",
            "name": "MouseListener",
            "isArray": false
          },
          "name": "ml"
        },
        "comment": "A MouseListener for stopping the video.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.event.KeyListener",
            "name": "KeyListener",
            "isArray": false
          },
          "name": "kl"
        },
        "comment": "A KeyListener for stopping the video.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showParametersDialog()",
    "name": "showParametersDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.Parameters",
      "name": "Parameters",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The response returned by the dialog.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showPreCombatDialog(net.sf.freecol.common.model.Unit attacker,net.sf.freecol.common.model.FreeColGameObject defender,net.sf.freecol.common.model.Tile tile)",
    "name": "showPreCombatDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "attacker"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "defender"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "attacker"
        },
        "comment": "The attacker Unit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "defender"
        },
        "comment": "The defender.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "A Tile to make visible.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the combat is to proceed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showPurchasePanel()",
    "name": "showPurchasePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showRecruitPanel()",
    "name": "showRecruitPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportLabourDetailPanel(net.sf.freecol.common.model.UnitType unitType,java.util.Map data,net.sf.freecol.common.model.TypeCountMap unitCount,java.util.List colonies)",
    "name": "showReportLabourDetailPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TypeCountMap",
          "name": "TypeCountMap",
          "isArray": false
        },
        "name": "unitCount"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "colonies"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "unitType"
        },
        "comment": "The UnitType to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "data"
        },
        "comment": "The labour data.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TypeCountMap",
            "name": "TypeCountMap",
            "isArray": false
          },
          "name": "unitCount"
        },
        "comment": "A map of unit distribution.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "colonies"
        },
        "comment": "The list of player Colonys.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showRiverStyleDialog(net.sf.freecol.common.model.Tile tile)",
    "name": "showRiverStyleDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "An optional tile to make visible (not under the dialog).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The response returned by the dialog.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showSaveDialog(java.io.File directory,javax.swing.filechooser.FileFilter[] filters,java.lang.String defaultName)",
    "name": "showSaveDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.File",
      "name": "File",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "directory"
      },
      {
        "type": {
          "qualifiedName": "javax.swing.filechooser.FileFilter[]",
          "name": "FileFilter[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "javax.swing.filechooser.FileFilter",
            "name": "FileFilter",
            "isArray": false
          }
        },
        "name": "filters"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defaultName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "directory"
        },
        "comment": "The directory containing the files in which the user may overwrite.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "javax.swing.filechooser.FileFilter[]",
            "name": "FileFilter[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "javax.swing.filechooser.FileFilter",
              "name": "FileFilter",
              "isArray": false
            }
          },
          "name": "filters"
        },
        "comment": "The available file filters in the dialog.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "defaultName"
        },
        "comment": "Default filename for the savegame.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The selected File.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showScaleMapSizeDialog()",
    "name": "showScaleMapSizeDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Dimension",
      "name": "Dimension",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The response returned by the dialog.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showSelectAmountDialog(net.sf.freecol.common.model.GoodsType goodsType,int available,int defaultAmount,boolean needToPay)",
    "name": "showSelectAmountDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "available"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultAmount"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "needToPay"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to select an amount of.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "available"
        },
        "comment": "The amount of goods available.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "defaultAmount"
        },
        "comment": "The amount to select to start with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "needToPay"
        },
        "comment": "If true, check the player has sufficient funds.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount selected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showSelectTributeAmountDialog(net.sf.freecol.common.model.StringTemplate question,int maximum)",
    "name": "showSelectTributeAmountDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
          "name": "StringTemplate",
          "isArray": false
        },
        "name": "question"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maximum"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
            "name": "StringTemplate",
            "isArray": false
          },
          "name": "question"
        },
        "comment": "a stringtemplate describing the amount of tribute to demand.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maximum"
        },
        "comment": "The maximum amount available.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount selected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showSelectDestinationDialog(net.sf.freecol.common.model.Unit unit)",
    "name": "showSelectDestinationDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to select a destination for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A destination for the unit, or null.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showServerListPanel(java.util.List serverList)",
    "name": "showServerListPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "serverList"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "serverList"
        },
        "comment": "The list containing the servers retrieved from the metaserver.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showSpyColonyPanel(net.sf.freecol.common.model.Tile tile)",
    "name": "showSpyColonyPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.ColonyPanel",
      "name": "ColonyPanel",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile containing the colony to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The colony panel.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "showStartGamePanel(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Player player,boolean singlePlayerMode)",
    "name": "showStartGamePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "singlePlayerMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game that is about to start.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player using this client.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "singlePlayerMode"
        },
        "comment": "True to start a single player game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showStatisticsPanel()",
    "name": "showStatisticsPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showStatusPanel(java.lang.String message)",
    "name": "showStatusPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "message"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "message"
        },
        "comment": "The text message to display on the status panel.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showTilePanel(net.sf.freecol.common.model.Tile tile)",
    "name": "showTilePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showTilePopup(net.sf.freecol.common.model.Tile tile,int x,int y)",
    "name": "showTilePopup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile where the popup occurred.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "The x-coordinate on the screen where the popup needs to be placed.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "y"
        },
        "comment": "The y-coordinate on the screen where the popup needs to be placed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showTradeRoutePanel(net.sf.freecol.common.model.Unit unit)",
    "name": "showTradeRoutePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "An optional Unit to select a trade route for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showTradeRouteInputPanel(net.sf.freecol.common.model.TradeRoute newRoute,java.lang.Runnable callBack)",
    "name": "showTradeRouteInputPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TradeRoute",
          "name": "TradeRoute",
          "isArray": false
        },
        "name": "newRoute"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "callBack"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TradeRoute",
            "name": "TradeRoute",
            "isArray": false
          },
          "name": "newRoute"
        },
        "comment": "The TradeRoute to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Runnable",
            "name": "Runnable",
            "isArray": false
          },
          "name": "callBack"
        },
        "comment": "The Runnable that is run when the panel closes.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showTrainPanel()",
    "name": "showTrainPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showVictoryDialog(net.sf.freecol.client.gui.DialogHandler handler)",
    "name": "showVictoryDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
          "name": "DialogHandler",
          "isArray": false
        },
        "name": "handler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.DialogHandler",
            "name": "DialogHandler",
            "isArray": false
          },
          "name": "handler"
        },
        "comment": "A DialogHandler for the dialog response.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "showWarehouseDialog(net.sf.freecol.common.model.Colony colony)",
    "name": "showWarehouseDialog",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The response returned by the dialog.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "showWorkProductionPanel(net.sf.freecol.common.model.Unit unit)",
    "name": "showWorkProductionPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to display.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "updateEuropeanSubpanels()",
    "name": "updateEuropeanSubpanels",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportCargoPanel()",
    "name": "showReportCargoPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportColonyPanel()",
    "name": "showReportColonyPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportContinentalCongressPanel()",
    "name": "showReportContinentalCongressPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportEducationPanel()",
    "name": "showReportEducationPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportExplorationPanel()",
    "name": "showReportExplorationPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportForeignAffairPanel()",
    "name": "showReportForeignAffairPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportHistoryPanel()",
    "name": "showReportHistoryPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportIndianPanel()",
    "name": "showReportIndianPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportLabourPanel()",
    "name": "showReportLabourPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportMilitaryPanel()",
    "name": "showReportMilitaryPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportNavalPanel()",
    "name": "showReportNavalPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportProductionPanel()",
    "name": "showReportProductionPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportReligiousPanel()",
    "name": "showReportReligiousPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportRequirementsPanel()",
    "name": "showReportRequirementsPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportTradePanel()",
    "name": "showReportTradePanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "showReportTurnPanel(java.util.List messages)",
    "name": "showReportTurnPanel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.Canvas",
      "name": "Canvas",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.Canvas",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "messages"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "messages"
        },
        "comment": "The ModelMessages to show.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]