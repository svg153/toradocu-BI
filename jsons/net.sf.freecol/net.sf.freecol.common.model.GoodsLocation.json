[
  {
    "signature": "GoodsLocation(net.sf.freecol.common.model.Game game)",
    "name": "GoodsLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "GoodsLocation(net.sf.freecol.common.model.Game game,org.w3c.dom.Element e)",
    "name": "GoodsLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "e"
        },
        "comment": "An XML-element that will be used to initialize this object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "GoodsLocation(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "GoodsLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setGoodsContainer(net.sf.freecol.common.model.GoodsContainer goodsContainer)",
    "name": "setGoodsContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
          "name": "GoodsContainer",
          "isArray": false
        },
        "name": "goodsContainer"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addGoods(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "addGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The AbstractGoods to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the goods were added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addGoods(java.util.List goods)",
    "name": "addGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The list of AbstractGoods to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the goods were all added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeGoods(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "removeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The AbstractGoods to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods that was removed, which may be less than that requested, or null if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeGoods(net.sf.freecol.common.model.GoodsType type)",
    "name": "removeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods that was removed, or null if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsCount(net.sf.freecol.common.model.GoodsType type)",
    "name": "getGoodsCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to look for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "containsGoods(java.util.List goods)",
    "name": "containsGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "A list of AbstractGoods to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the goods are all present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsIterator()",
    "name": "getGoodsIterator",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoods()",
    "name": "getGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCompactGoods()",
    "name": "getCompactGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "add(net.sf.freecol.common.model.Locatable locatable)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove(net.sf.freecol.common.model.Locatable locatable)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(net.sf.freecol.common.model.Locatable locatable)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGoodsContainer()",
    "name": "getGoodsContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNoAddReason(net.sf.freecol.common.model.Locatable locatable)",
    "name": "getNoAddReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation.NoAddReason",
      "name": "NoAddReason",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGoodsCapacity()",
    "name": "getGoodsCapacity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The capacity for goods",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addGoods(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "addGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to add.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the goods were added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeGoods(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "removeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type of goods to remove.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods that was removed, which may be less than that requested, or null if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDisposeList()",
    "name": "getDisposeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsLocation",
      "name": "GoodsLocation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsLocation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]