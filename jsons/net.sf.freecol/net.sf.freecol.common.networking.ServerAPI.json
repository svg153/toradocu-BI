[
  {
    "signature": "ServerAPI()",
    "name": "ServerAPI",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doClientProcessingFor(org.w3c.dom.Element reply)",
    "name": "doClientProcessingFor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "reply"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "reply"
        },
        "comment": "The reply Element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "doRaiseErrorMessage(java.lang.String complaint)",
    "name": "doRaiseErrorMessage",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "complaint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "complaint"
        },
        "comment": "The error message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getHost()",
    "name": "getHost",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current host, or null if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPort()",
    "name": "getPort",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current port, or negative if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConnection()",
    "name": "getConnection",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.networking.Connection",
      "name": "Connection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The server Connection.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "registerMessageHandler(net.sf.freecol.common.networking.MessageHandler messageHandler)",
    "name": "registerMessageHandler",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.networking.MessageHandler",
          "name": "MessageHandler",
          "isArray": false
        },
        "name": "messageHandler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.networking.MessageHandler",
            "name": "MessageHandler",
            "isArray": false
          },
          "name": "messageHandler"
        },
        "comment": "The new MessageHandler.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "disconnect()",
    "name": "disconnect",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "connect(java.lang.String threadName,java.lang.String host,int port,net.sf.freecol.common.networking.MessageHandler messageHandler)",
    "name": "connect",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "threadName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "host"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "port"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.networking.MessageHandler",
          "name": "MessageHandler",
          "isArray": false
        },
        "name": "messageHandler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "threadName"
        },
        "comment": "The name for the thread.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "host"
        },
        "comment": "The name of the machine running the FreeColServer.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "port"
        },
        "comment": "The port to use when connecting to the host.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the connection succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on connection failure.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "abandonColony(net.sf.freecol.common.model.Colony colony)",
    "name": "abandonColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony to abandon.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "answerMonarch(net.sf.freecol.common.model.Monarch.MonarchAction action,boolean accept)",
    "name": "answerMonarch",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Monarch.MonarchAction",
          "name": "MonarchAction",
          "isArray": false
        },
        "name": "action"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "accept"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Monarch.MonarchAction",
            "name": "MonarchAction",
            "isArray": false
          },
          "name": "action"
        },
        "comment": "The monarch action responded to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "accept"
        },
        "comment": "Accept or reject the offer.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "askSkill(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "askSkill",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is asking.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to a settlement to ask.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "assignTeacher(net.sf.freecol.common.model.Unit student,net.sf.freecol.common.model.Unit teacher)",
    "name": "assignTeacher",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "student"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "teacher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "student"
        },
        "comment": "The student Unit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "teacher"
        },
        "comment": "The teacher Unit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "assignTradeRoute(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.TradeRoute tradeRoute)",
    "name": "assignTradeRoute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TradeRoute",
          "name": "TradeRoute",
          "isArray": false
        },
        "name": "tradeRoute"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to assign a trade route to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TradeRoute",
            "name": "TradeRoute",
            "isArray": false
          },
          "name": "tradeRoute"
        },
        "comment": "The TradeRoute to assign.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "attack(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "attack",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to perform the attack.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction in which to attack.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "buildColony(java.lang.String name,net.sf.freecol.common.model.Unit unit)",
    "name": "buildColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The name for the colony.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that will build.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "buyFromSettlement(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement,net.sf.freecol.common.model.Goods goods,int gold)",
    "name": "buyFromSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "gold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to buy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "gold"
        },
        "comment": "The agreed price.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "buyProposition(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement,net.sf.freecol.common.model.Goods goods,int gold)",
    "name": "buyProposition",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "gold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to trade.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "gold"
        },
        "comment": "The proposed price (including query on negative).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The price of the goods.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "cashInTreasureTrain(net.sf.freecol.common.model.Unit unit)",
    "name": "cashInTreasureTrain",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The treasure train Unit to cash in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "changeState(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Unit.UnitState state)",
    "name": "changeState",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit.UnitState",
          "name": "UnitState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to change the state of.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit.UnitState",
            "name": "UnitState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "The new UnitState.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "boolean true if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "changeWorkImprovementType(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.TileImprovementType type)",
    "name": "changeWorkImprovementType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
          "name": "TileImprovementType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to change the work type of.",
        "kind": "PARAM",
        "condition": "args[0].changeType(net.sf.freecol.common.model.UnitType)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
            "name": "TileImprovementType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The new TileImprovementType to work on.",
        "kind": "PARAM",
        "condition": "target.work(args[0])"
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "changeWorkType(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.GoodsType workType)",
    "name": "changeWorkType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "workType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to change the work type of.",
        "kind": "PARAM",
        "condition": "args[0].changeType(net.sf.freecol.common.model.UnitType)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "workType"
        },
        "comment": "The new GoodsType to produce.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "chat(net.sf.freecol.common.model.Player player,java.lang.String chat)",
    "name": "chat",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "chat"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "chat"
        },
        "comment": "The text of the message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the send succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "chooseFoundingFather(java.util.List ffs,net.sf.freecol.common.model.FoundingFather ff)",
    "name": "chooseFoundingFather",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "ffs"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
          "name": "FoundingFather",
          "isArray": false
        },
        "name": "ff"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "ffs"
        },
        "comment": "A list of FoundingFathers to choose from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
            "name": "FoundingFather",
            "isArray": false
          },
          "name": "ff"
        },
        "comment": "The chosen FoundingFather (may be null).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the send succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "claimTile(net.sf.freecol.common.model.Tile tile,net.sf.freecol.common.model.FreeColGameObject claimant,int price)",
    "name": "claimTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "claimant"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "price"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile to claim.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "claimant"
        },
        "comment": "The Unit or Settlement that is claiming the tile.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "price"
        },
        "comment": "The amount to pay.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clearSpeciality(net.sf.freecol.common.model.Unit unit)",
    "name": "clearSpeciality",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to operate on.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "closeTransactionSession(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement)",
    "name": "closeTransactionSession",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "continuePlaying()",
    "name": "continuePlaying",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "declareIndependence(java.lang.String nation,java.lang.String country)",
    "name": "declareIndependence",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nation"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "country"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "nation"
        },
        "comment": "The name for the new nation.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "country"
        },
        "comment": "The name for the new country.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "declineMounds(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "declineMounds",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is exploring.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to move.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "deliverGiftToSettlement(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement,net.sf.freecol.common.model.Goods goods)",
    "name": "deliverGiftToSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to give.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "demandTribute(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "demandTribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that demands.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to demand in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "diplomacy(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Unit ourUnit,net.sf.freecol.common.model.Colony otherColony,net.sf.freecol.common.model.DiplomaticTrade agreement)",
    "name": "diplomacy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
      "name": "DiplomaticTrade",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "ourUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "otherColony"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
          "name": "DiplomaticTrade",
          "isArray": false
        },
        "name": "agreement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "ourUnit"
        },
        "comment": "Our Unit conducting the diplomacy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "otherColony"
        },
        "comment": "The other Colony to negotiate with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
            "name": "DiplomaticTrade",
            "isArray": false
          },
          "name": "agreement"
        },
        "comment": "The DiplomaticTrade agreement to propose.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The resulting agreement or null if none present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "diplomacy(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Unit ourUnit,net.sf.freecol.common.model.Unit otherUnit,net.sf.freecol.common.model.DiplomaticTrade agreement)",
    "name": "diplomacy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
      "name": "DiplomaticTrade",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "ourUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "otherUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
          "name": "DiplomaticTrade",
          "isArray": false
        },
        "name": "agreement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "ourUnit"
        },
        "comment": "Out Unit conducting the diplomacy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "otherUnit"
        },
        "comment": "The other Unit to negotiate with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
            "name": "DiplomaticTrade",
            "isArray": false
          },
          "name": "agreement"
        },
        "comment": "The DiplomaticTrade agreement to propose.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The resulting agreement or null if none present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "diplomacy(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Colony ourColony,net.sf.freecol.common.model.Unit otherUnit,net.sf.freecol.common.model.DiplomaticTrade agreement)",
    "name": "diplomacy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
      "name": "DiplomaticTrade",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "ourColony"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "otherUnit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
          "name": "DiplomaticTrade",
          "isArray": false
        },
        "name": "agreement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "ourColony"
        },
        "comment": "Out Colony conducting the diplomacy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "otherUnit"
        },
        "comment": "The other Unit to negotiate with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.DiplomaticTrade",
            "name": "DiplomaticTrade",
            "isArray": false
          },
          "name": "agreement"
        },
        "comment": "The DiplomaticTrade agreement to propose.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The resulting agreement or null if none present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "disbandUnit(net.sf.freecol.common.model.Unit unit)",
    "name": "disbandUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to operate on.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "disembark(net.sf.freecol.common.model.Unit unit)",
    "name": "disembark",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is disembarking.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "embark(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Unit carrier,net.sf.freecol.common.model.Direction direction)",
    "name": "embark",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is boarding.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The carrier Unit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "An optional direction if the unit is boarding from an adjacent tile, or null if from the same tile.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emigrate(int slot)",
    "name": "emigrate",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "slot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "slot"
        },
        "comment": "The slot from which the unit migrates, 1-3 selects a specific one, otherwise the server will choose one.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the client-server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "endTurn()",
    "name": "endTurn",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "enterRevengeMode()",
    "name": "enterRevengeMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equipUnitForRole(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Role role,int roleCount)",
    "name": "equipUnitForRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "role"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "roleCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to equip.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "role"
        },
        "comment": "The Role to assume.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "roleCount"
        },
        "comment": "The role count.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "firstContact(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.Player other,net.sf.freecol.common.model.Tile tile,boolean result)",
    "name": "firstContact",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "other"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "result"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player making contact.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "The native Player being contacted.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "An optional Tile to offer the player if they have made a first landing.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "result"
        },
        "comment": "Whether the initial peace treaty was accepted.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsForSaleInSettlement(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement)",
    "name": "getGoodsForSaleInSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods for sale in the settlement, or null if the server interaction failed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getHighScores()",
    "name": "getHighScores",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The list of high scores.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getNationSummary(net.sf.freecol.common.model.Player player)",
    "name": "getNationSummary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.NationSummary",
      "name": "NationSummary",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to summarize.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A summary of that nation, or null on error.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getNewTradeRoute()",
    "name": "getNewTradeRoute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getREFUnits()",
    "name": "getREFUnits",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of REF units for the player.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getStatistics()",
    "name": "getStatistics",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The server statistics.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "incite(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction,net.sf.freecol.common.model.Player enemy,int gold)",
    "name": "incite",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "enemy"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "gold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The missionary Unit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to a settlement to speak to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "enemy"
        },
        "comment": "An enemy Player.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "gold"
        },
        "comment": "The amount of bribe, negative to enquire.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of gold to bribe with if this was an inquiry, zero for failure to incite and >0 for successful incitement, negative if the server interaction failed.",
      "kind": "RETURN",
      "condition": "result>0"
    },
    "throwsTags": []
  },
  {
    "signature": "joinColony(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Colony colony)",
    "name": "joinColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that will join.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony to join.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "learnSkill(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "learnSkill",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is asking.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to a settlement to ask.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "loadGoods(net.sf.freecol.common.model.Location loc,net.sf.freecol.common.model.GoodsType type,int amount,net.sf.freecol.common.model.Unit carrier)",
    "name": "loadGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "loc"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "loc"
        },
        "comment": "The Location where the goods are.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to load.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to load.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The Unit to load onto.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the query-response succeeds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "login(java.lang.String userName,java.lang.String version)",
    "name": "login",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.networking.LoginMessage",
      "name": "LoginMessage",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "userName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "version"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "userName"
        },
        "comment": "The user name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "version"
        },
        "comment": "The client version.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A LoginMessage on success, or null on error.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "logout()",
    "name": "logout",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "loot(net.sf.freecol.common.model.Unit winner,java.lang.String defenderId,java.util.List goods)",
    "name": "loot",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "winner"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defenderId"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "winner"
        },
        "comment": "The Unit that is looting.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "defenderId"
        },
        "comment": "The identifier of the defender unit (it may have sunk).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "A list of Goods, if empty this is a query as to what is to be looted which is filled into the list, if non-empty, then the list of goods to loot.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "missionary(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction,boolean denounce)",
    "name": "missionary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "denounce"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The missionary Unit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to a settlement to establish with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "denounce"
        },
        "comment": "True if this is a denouncement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "move(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "move",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to move.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to move in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "moveTo(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Location destination)",
    "name": "moveTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "destination"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to move.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "The Location to move to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "newLandName(net.sf.freecol.common.model.Unit unit,java.lang.String name)",
    "name": "newLandName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that has come ashore.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The new land name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "newRegionName(net.sf.freecol.common.model.Region region,net.sf.freecol.common.model.Tile tile,net.sf.freecol.common.model.Unit unit,java.lang.String name)",
    "name": "newRegionName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Region",
          "name": "Region",
          "isArray": false
        },
        "name": "region"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Region",
            "name": "Region",
            "isArray": false
          },
          "name": "region"
        },
        "comment": "The Region that is being discovered.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile where the region is discovered.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit discovering the region.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The new region name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "openTransactionSession(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement)",
    "name": "openTransactionSession",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean[]",
      "name": "boolean[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "boolean",
        "name": "boolean",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An array of booleans for the buy/sell/gift status, or null if the server interaction failed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "payArrears(net.sf.freecol.common.model.GoodsType type)",
    "name": "payArrears",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to pay the arrears for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "payForBuilding(net.sf.freecol.common.model.Colony colony)",
    "name": "payForBuilding",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony that is building.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "putOutsideColony(net.sf.freecol.common.model.Unit unit)",
    "name": "putOutsideColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to put out.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "rename(net.sf.freecol.common.model.FreeColGameObject object,java.lang.String name)",
    "name": "rename",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "object"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "A FreeColGameObject to rename.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The name to apply.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "requestLaunch()",
    "name": "requestLaunch",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "retire()",
    "name": "retire",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "scoutSettlement(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "scoutSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is speaking.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to a settlement to ask.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The number of settlements of this tribe (which is needed in the dialog following), or negative on error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "scoutSpeakToChief(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "scoutSpeakToChief",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is speaking.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The direction to a settlement to ask.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A string describing the result, or null if the server interaction failed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sellProposition(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement,net.sf.freecol.common.model.Goods goods,int gold)",
    "name": "sellProposition",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "gold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to trade.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "gold"
        },
        "comment": "The proposed price (including query on negative).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The selling price for the goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sellToSettlement(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Settlement settlement,net.sf.freecol.common.model.Goods goods,int gold)",
    "name": "sellToSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Settlement",
          "name": "Settlement",
          "isArray": false
        },
        "name": "settlement"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "gold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Settlement",
            "name": "Settlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The Settlement that is trading.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to sell.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "gold"
        },
        "comment": "The agreed price.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setAvailable(net.sf.freecol.common.model.Nation nation,net.sf.freecol.common.model.NationOptions.NationState state)",
    "name": "setAvailable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Nation",
          "name": "Nation",
          "isArray": false
        },
        "name": "nation"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationOptions.NationState",
          "name": "NationState",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Nation",
            "name": "Nation",
            "isArray": false
          },
          "name": "nation"
        },
        "comment": "The Nation to whose availability is to be set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationOptions.NationState",
            "name": "NationState",
            "isArray": false
          },
          "name": "state"
        },
        "comment": "The NationState defining the availability.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setBuildQueue(net.sf.freecol.common.model.Colony colony,java.util.List buildQueue)",
    "name": "setBuildQueue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "buildQueue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "the Colony",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "buildQueue"
        },
        "comment": "the new values for the build queue",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setColor(net.sf.freecol.common.model.Nation nation,java.awt.Color color)",
    "name": "setColor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Nation",
          "name": "Nation",
          "isArray": false
        },
        "name": "nation"
      },
      {
        "type": {
          "qualifiedName": "java.awt.Color",
          "name": "Color",
          "isArray": false
        },
        "name": "color"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Nation",
            "name": "Nation",
            "isArray": false
          },
          "name": "nation"
        },
        "comment": "The Nation to set the color for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Color",
            "name": "Color",
            "isArray": false
          },
          "name": "color"
        },
        "comment": "The Color selected.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setCurrentStop(net.sf.freecol.common.model.Unit unit,int index)",
    "name": "setCurrentStop",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit whose stop is to be updated.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "The stop index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the query-response succeeds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDestination(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Location destination)",
    "name": "setDestination",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "destination"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to direct.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "The destination Location.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGoodsLevels(net.sf.freecol.common.model.Colony colony,net.sf.freecol.common.model.ExportData data)",
    "name": "setGoodsLevels",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ExportData",
          "name": "ExportData",
          "isArray": false
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony where the levels are set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ExportData",
            "name": "ExportData",
            "isArray": false
          },
          "name": "data"
        },
        "comment": "The ExportData setting.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setNation(net.sf.freecol.common.model.Nation nation)",
    "name": "setNation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Nation",
          "name": "Nation",
          "isArray": false
        },
        "name": "nation"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Nation",
            "name": "Nation",
            "isArray": false
          },
          "name": "nation"
        },
        "comment": "The Nation selected.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setNationType(net.sf.freecol.common.model.NationType nationType)",
    "name": "setNationType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationType",
          "name": "NationType",
          "isArray": false
        },
        "name": "nationType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationType",
            "name": "NationType",
            "isArray": false
          },
          "name": "nationType"
        },
        "comment": "The NationType selected.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setReady(boolean ready)",
    "name": "setReady",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "ready"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "ready"
        },
        "comment": "The readiness state to signal.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTradeRoutes(java.util.List routes)",
    "name": "setTradeRoutes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "routes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "routes"
        },
        "comment": "A list of trade routes to update.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "spy(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Direction direction)",
    "name": "spy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is spying.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction of a colony to spy on.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the client/server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "startSkipping()",
    "name": "startSkipping",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "trainUnitInEurope(net.sf.freecol.common.model.UnitType type)",
    "name": "trainUnitInEurope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The UnitType to train.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unloadGoods(net.sf.freecol.common.model.GoodsType type,int amount,net.sf.freecol.common.model.Unit carrier)",
    "name": "unloadGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to unload.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to unload.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The Unit to unload from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the query-response succeeds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateGameOptions(net.sf.freecol.common.option.OptionGroup gameOptions)",
    "name": "updateGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "gameOptions"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "gameOptions"
        },
        "comment": "The OptionGroup containing the game options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateMapGeneratorOptions(net.sf.freecol.common.option.OptionGroup mapOptions)",
    "name": "updateMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "mapOptions"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "mapOptions"
        },
        "comment": "The OptionGroup containing the map generator options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateTradeRoute(net.sf.freecol.common.model.TradeRoute route)",
    "name": "updateTradeRoute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TradeRoute",
          "name": "TradeRoute",
          "isArray": false
        },
        "name": "route"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TradeRoute",
            "name": "TradeRoute",
            "isArray": false
          },
          "name": "route"
        },
        "comment": "The trade route to update.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "work(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.WorkLocation workLocation)",
    "name": "work",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.networking.ServerAPI",
      "name": "ServerAPI",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.networking.ServerAPI",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.WorkLocation",
          "name": "WorkLocation",
          "isArray": false
        },
        "name": "workLocation"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to change the workLocation of.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.WorkLocation",
            "name": "WorkLocation",
            "isArray": false
          },
          "name": "workLocation"
        },
        "comment": "The WorkLocation to change to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the server interaction succeeded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]