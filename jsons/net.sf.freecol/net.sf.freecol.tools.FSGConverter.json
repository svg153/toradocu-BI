[
  {
    "signature": "getFSGConverter()",
    "name": "getFSGConverter",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.tools.FSGConverter",
      "name": "FSGConverter",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.tools.FSGConverter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.tools.FSGConverter",
      "name": "FSGConverter",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The singleton object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "convertToXML(java.io.File in,java.io.File out)",
    "name": "convertToXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.tools.FSGConverter",
      "name": "FSGConverter",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.tools.FSGConverter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "The input file.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "The output file. This file will be overwritten if it already exists.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.FileNotFoundException",
          "name": "FileNotFoundException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the given input file could not be found.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if thrown while reading or writing the files.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "convertToXML(java.io.InputStream in,java.io.OutputStream out)",
    "name": "convertToXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.tools.FSGConverter",
      "name": "FSGConverter",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.tools.FSGConverter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "The input stream.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "The output stream.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if thrown while reading or writing the streams.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "main(java.lang.String[] args)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.tools.FSGConverter",
      "name": "FSGConverter",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.tools.FSGConverter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "args"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "args"
        },
        "comment": "The command-line parameters.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]