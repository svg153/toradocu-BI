[
  {
    "signature": "ColonyTile(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Colony colony,net.sf.freecol.common.model.Tile workTile)",
    "name": "ColonyTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "workTile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The Colony this object belongs to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "workTile"
        },
        "comment": "The tile in which this ColonyTile represents a WorkLocation for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ColonyTile(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "ColonyTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isColonyCenterTile()",
    "name": "isColonyCenterTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is the colony center tile.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWorkTile()",
    "name": "getWorkTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "Tile",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Tile in which this ColonyTile represents a WorkLocation for.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setWorkTile(net.sf.freecol.common.model.Tile workTile)",
    "name": "setWorkTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "workTile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "workTile"
        },
        "comment": "The new work Tile.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOccupyingUnit()",
    "name": "getOccupyingUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "Unit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A Unit who is occupying the work tile, if any.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isOccupied()",
    "name": "isOccupied",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if an fortified enemy unit is in the tile.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBasicProductionInfo()",
    "name": "getBasicProductionInfo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The raw production of this colony tile.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "improvedBy(net.sf.freecol.common.model.TileImprovementType ti)",
    "name": "improvedBy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
          "name": "TileImprovementType",
          "isArray": false
        },
        "name": "ti"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
            "name": "TileImprovementType",
            "isArray": false
          },
          "name": "ti"
        },
        "comment": "The TileImprovementType to assess.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A measure of improvement (negative is a bad idea).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "evaluateFor(net.sf.freecol.common.model.Player player)",
    "name": "evaluateFor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to evaluate for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A value for the player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLocationLabel()",
    "name": "getLocationLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "up()",
    "name": "up",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toShortString()",
    "name": "toShortString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNoAddReason(net.sf.freecol.common.model.Locatable locatable)",
    "name": "getNoAddReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation.NoAddReason",
      "name": "NoAddReason",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getUnitCapacity()",
    "name": "getUnitCapacity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLabel()",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isAvailable()",
    "name": "isAvailable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isCurrent()",
    "name": "isCurrent",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNoWorkReason()",
    "name": "getNoWorkReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation.NoAddReason",
      "name": "NoAddReason",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canAutoProduce()",
    "name": "canAutoProduce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canProduce(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "canProduce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBaseProduction(net.sf.freecol.common.model.ProductionType productionType,net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "getBaseProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ProductionType",
          "name": "ProductionType",
          "isArray": false
        },
        "name": "productionType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getProductionModifiers(net.sf.freecol.common.model.GoodsType goodsType,net.sf.freecol.common.model.UnitType unitType)",
    "name": "getProductionModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "unitType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAvailableProductionTypes(boolean unattended)",
    "name": "getAvailableProductionTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getClaimTemplate()",
    "name": "getClaimTemplate",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ColonyTile",
      "name": "ColonyTile",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ColonyTile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"colonyTile\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]