[
  {
    "signature": "AIColony(net.sf.freecol.server.ai.AIMain aiMain,java.lang.String id)",
    "name": "AIColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AIColony(net.sf.freecol.server.ai.AIMain aiMain,net.sf.freecol.common.model.Colony colony)",
    "name": "AIColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Colony",
          "name": "Colony",
          "isArray": false
        },
        "name": "colony"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Colony",
            "name": "Colony",
            "isArray": false
          },
          "name": "colony"
        },
        "comment": "The colony to make an AIObject for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AIColony(net.sf.freecol.server.ai.AIMain aiMain,org.w3c.dom.Element element)",
    "name": "AIColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "element"
        },
        "comment": "The root element for the XML-representation of a Wish.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AIColony(net.sf.freecol.server.ai.AIMain aiMain,net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "AIColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The input stream containing the XML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getColony()",
    "name": "getColony",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Colony",
      "name": "Colony",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Colony.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getAIUnit(net.sf.freecol.common.model.Unit unit)",
    "name": "getAIUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
      "name": "AIUnit",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAIOwner()",
    "name": "getAIOwner",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.server.ai.AIPlayer",
      "name": "AIPlayer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isBadlyDefended()",
    "name": "isBadlyDefended",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this colony needs more defenders.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "update(net.sf.freecol.common.util.LogBuilder lb)",
    "name": "update",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "rearrangeWorkers(net.sf.freecol.common.util.LogBuilder lb)",
    "name": "rearrangeWorkers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A collection of worker AIUnits that now need a WorkInsideColonyMission.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "stopUsing(net.sf.freecol.common.model.WorkLocation wl)",
    "name": "stopUsing",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.WorkLocation",
          "name": "WorkLocation",
          "isArray": false
        },
        "name": "wl"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.WorkLocation",
            "name": "WorkLocation",
            "isArray": false
          },
          "name": "wl"
        },
        "comment": "The WorkLocation to stop using.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getExportGoods()",
    "name": "getExportGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A copy of the exportGoods list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeExportGoods(net.sf.freecol.server.ai.AIGoods ag)",
    "name": "removeExportGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIGoods",
          "name": "AIGoods",
          "isArray": false
        },
        "name": "ag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIGoods",
            "name": "AIGoods",
            "isArray": false
          },
          "name": "ag"
        },
        "comment": "The AIGoods to be removed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addWish(net.sf.freecol.server.ai.Wish wish)",
    "name": "addWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.Wish",
          "name": "Wish",
          "isArray": false
        },
        "name": "wish"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.Wish",
            "name": "Wish",
            "isArray": false
          },
          "name": "wish"
        },
        "comment": "The Wish to be added.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "completeWish(net.sf.freecol.server.ai.Wish wish,java.lang.String reason,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "completeWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.Wish",
          "name": "Wish",
          "isArray": false
        },
        "name": "wish"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "reason"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.Wish",
            "name": "Wish",
            "isArray": false
          },
          "name": "wish"
        },
        "comment": "The Wish to complete.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "reason"
        },
        "comment": "A reason for wish completion.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this wish was successfully completed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "completeWish(net.sf.freecol.common.model.Goods goods,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "completeWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "Some Goods that are arriving in this colony.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if a wish was successfully completed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "completeWish(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "completeWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "A Unit that is arriving in this colony.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if a wish was successfully completed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "completeWish(net.sf.freecol.server.ai.TransportableAIObject t,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "completeWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
          "name": "TransportableAIObject",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
            "name": "TransportableAIObject",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The arriving TransportableAIObject.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if a wish was successfully completed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWishes()",
    "name": "getWishes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A copy of the wishes list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsWishes()",
    "name": "getGoodsWishes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A copy of the wishes list with non-goods wishes removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWorkerWishes()",
    "name": "getWorkerWishes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A copy of the wishes list with non-worker wishes removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "requireGoodsWish(net.sf.freecol.common.model.GoodsType type,int amount,int value,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "requireGoodsWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to wish for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods wished for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The urgency of the wish.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "requireWorkerWish(net.sf.freecol.common.model.UnitType type,boolean expertNeeded,int value,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "requireWorkerWish",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "expertNeeded"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The UnitType to wish for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "expertNeeded"
        },
        "comment": "Is an expert unit required?",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The urgency of the wish.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getTileImprovementPlans()",
    "name": "getTileImprovementPlans",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A copy of the tile improvement plan list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeTileImprovementPlan(net.sf.freecol.server.ai.TileImprovementPlan plan)",
    "name": "removeTileImprovementPlan",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.TileImprovementPlan",
          "name": "TileImprovementPlan",
          "isArray": false
        },
        "name": "plan"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "True if it was successfully deleted, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateTileImprovementPlans(net.sf.freecol.common.util.LogBuilder lb)",
    "name": "updateTileImprovementPlans",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getPlannedBuildableTypes()",
    "name": "getPlannedBuildableTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of planned BuildableType.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "planToString()",
    "name": "planToString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A summary of the colony plan.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "propertyChange(java.beans.PropertyChangeEvent event)",
    "name": "propertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.beans.PropertyChangeEvent",
          "name": "PropertyChangeEvent",
          "isArray": false
        },
        "name": "event"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.beans.PropertyChangeEvent",
            "name": "PropertyChangeEvent",
            "isArray": false
          },
          "name": "event"
        },
        "comment": "The PropertyChangeEvent.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "requestRearrange()",
    "name": "requestRearrange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "dispose()",
    "name": "dispose",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkIntegrity(boolean fix)",
    "name": "checkIntegrity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "fix"
        },
        "comment": "Fix problems if possible.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Negative if there are problems remaining, zero if problems were fixed, positive if no problems found at all.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.AIColony",
      "name": "AIColony",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.AIColony",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"aiColony\"",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]