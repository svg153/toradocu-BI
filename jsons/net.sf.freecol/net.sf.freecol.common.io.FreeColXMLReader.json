[
  {
    "signature": "FreeColXMLReader(java.io.InputStream inputStream)",
    "name": "FreeColXMLReader",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "inputStream"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "inputStream"
        },
        "comment": "The InputStream to create an FreeColXMLReader for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [
          "XMLStreamReader"
        ],
        "comment": "if thrown while creating the XMLStreamReader.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "FreeColXMLReader(java.io.Reader reader)",
    "name": "FreeColXMLReader",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "reader"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.Reader",
            "name": "Reader",
            "isArray": false
          },
          "name": "reader"
        },
        "comment": "A Reader to create an FreeColXMLReader for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [
          "FreeColXMLReader"
        ],
        "comment": "if thrown while creating the FreeColXMLReader.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "shouldIntern()",
    "name": "shouldIntern",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is an interning stream.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getReadScope()",
    "name": "getReadScope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader.ReadScope",
      "name": "ReadScope",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The ReadScope.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setReadScope(net.sf.freecol.common.io.FreeColXMLReader.ReadScope readScope)",
    "name": "setReadScope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader.ReadScope",
          "name": "ReadScope",
          "isArray": false
        },
        "name": "readScope"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader.ReadScope",
            "name": "ReadScope",
            "isArray": false
          },
          "name": "readScope"
        },
        "comment": "The new ReadScope.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readId()",
    "name": "readId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The identifier found, or null if none present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "atTag(java.lang.String tag)",
    "name": "atTag",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "The tag to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if at the given tag.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "expectTag(java.lang.String tag)",
    "name": "expectTag",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "The expected tag name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the expected tag is not found.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "closeTag(java.lang.String tag)",
    "name": "closeTag",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "The expected tag name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a closing tag is not found.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "currentTag()",
    "name": "currentTag",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A simple display of the stream state.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasAttribute(java.lang.String attributeName)",
    "name": "hasAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "An attribute name",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the attribute is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(java.lang.String attributeName,boolean defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The boolean attribute value, or the default value if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(java.lang.String attributeName,float defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The float attribute value, or the default value if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(java.lang.String attributeName,int defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The int attribute value, or the default value if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(java.lang.String attributeName,long defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The long attribute value, or the default value if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(java.lang.String attributeName,java.lang.String defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The string attribute value, or the default value if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(java.lang.String attributeName,java.lang.Class returnClass,java.lang.Enum defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Enum",
          "name": "Enum",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The class of the return value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Enum",
            "name": "Enum",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The enum attribute value, or the default value if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAttribute(net.sf.freecol.common.model.Game game,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.common.model.FreeColObject defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The FreeColObject type to expect.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FreeColObject found, or the default value if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the wrong class was passed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getAttribute(net.sf.freecol.server.ai.AIMain aiMain,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.server.ai.AIObject defaultValue)",
    "name": "getAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIObject",
          "name": "AIObject",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The AIMain that contains the object.",
        "kind": "PARAM",
        "condition": "target.getText().contains(java.lang.CharSequence)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The AIObject type to expect.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIObject",
            "name": "AIObject",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The AIObject found, or the default value if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLocationAttribute(net.sf.freecol.common.model.Game game,java.lang.String attributeName,boolean make)",
    "name": "getLocationAttribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "make"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute to check.",
        "kind": "PARAM",
        "condition": "target.getAttribute(args[1],args[2])"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "make"
        },
        "comment": "If true, try to make the location if it is not found.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Location found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "readList(java.lang.String tag,java.lang.Class type)",
    "name": "readList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "The tag for the list Element.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type of the items to be added. This type needs to have a constructor accepting a single String.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readList(net.sf.freecol.common.model.Specification spec,java.lang.String tag,java.lang.Class type)",
    "name": "readList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "spec"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "The tag for the list Element.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "spec"
        },
        "comment": "The Specification to find items in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type of the items to be added. The type must exist in the supplied specification.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The list.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[2])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "findFreeColGameObject(net.sf.freecol.common.model.Game game,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.common.model.FreeColGameObject defaultValue,boolean required)",
    "name": "findFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "defaultValue"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "required"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The class to expect.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "A default value to return if not found.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "required"
        },
        "comment": "If true a null result should throw an exception.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FreeColGameObject found, or the default value if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the attribute is missing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "makeFreeColGameObject(net.sf.freecol.common.model.Game game,java.lang.String attributeName,java.lang.Class returnClass,boolean required)",
    "name": "makeFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "required"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The required attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The class of object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "required"
        },
        "comment": "If true a null result should throw an exception.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FreeColGameObject found or made, or null if the attribute was not present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "readFreeColGameObject(net.sf.freecol.common.model.Game game,java.lang.Class returnClass)",
    "name": "readFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The class to expect.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FreeColGameObject found, or null there was no ID_ATTRIBUTE_TAG present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "findAIObject(net.sf.freecol.server.ai.AIMain aiMain,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.server.ai.AIObject defaultValue,boolean required)",
    "name": "findAIObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIObject",
          "name": "AIObject",
          "isArray": false
        },
        "name": "defaultValue"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "required"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The AIMain that contains the object.",
        "kind": "PARAM",
        "condition": "target.getText().contains(java.lang.CharSequence)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The AIObject type to expect.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIObject",
            "name": "AIObject",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "required"
        },
        "comment": "If true a null result should throw an exception.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The AIObject found, or the default value if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "makeAIObject(net.sf.freecol.server.ai.AIMain aiMain,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.server.ai.AIObject defaultValue,boolean required)",
    "name": "makeAIObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIObject",
          "name": "AIObject",
          "isArray": false
        },
        "name": "defaultValue"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "required"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The AIMain that contains the object.",
        "kind": "PARAM",
        "condition": "target.getText().contains(java.lang.CharSequence)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "The attribute name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The AIObject type to expect.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIObject",
            "name": "AIObject",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The AIObject found, or the default value if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "shouldClearContainers()",
    "name": "shouldClearContainers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the containers should be cleared.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getType(net.sf.freecol.common.model.Specification spec,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.common.model.FreeColGameObjectType defaultValue)",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "spec"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "spec"
        },
        "comment": "The Specification to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeName"
        },
        "comment": "the name of the attribute identifying the FreeColGameObjectType.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The expected class of the return value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "A default value to return if the attributeName attribute is not present.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FreeColGameObjectType found, or the defaultValue.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRole(net.sf.freecol.common.model.Specification spec,java.lang.String attributeName,java.lang.Class returnClass,net.sf.freecol.common.model.FreeColGameObjectType defaultValue)",
    "name": "getRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "spec"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "copy(net.sf.freecol.common.model.Game game,java.lang.Class returnClass)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
      "name": "FreeColXMLReader",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.io.FreeColXMLReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to look in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The class to expect.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The copied FreeColObject found, or null there was no ID_ATTRIBUTE_TAG present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]