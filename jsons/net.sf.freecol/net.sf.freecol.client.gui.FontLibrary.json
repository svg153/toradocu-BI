[
  {
    "signature": "FontLibrary()",
    "name": "FontLibrary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "FontLibrary(float scaleFactor)",
    "name": "FontLibrary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "scaleFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "scaleFactor"
        },
        "comment": "How much scaling should be applied. Typically the same value as in ImageLibrary.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "createMainFont(java.lang.String fontName,float scaleFactor)",
    "name": "createMainFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fontName"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "scaleFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "fontName"
        },
        "comment": "Can be used to choose a different font from a user-provided name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "scaleFactor"
        },
        "comment": "The applied scale factor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "createScaledFont(net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize)",
    "name": "createScaledFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createScaledFont(net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,int style)",
    "name": "createScaledFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "style"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
            "name": "FontType",
            "isArray": false
          },
          "name": "fontType"
        },
        "comment": "How the font should look like.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
            "name": "FontSize",
            "isArray": false
          },
          "name": "fontSize"
        },
        "comment": "Its relative size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "style"
        },
        "comment": "The font style for choosing plain, bold or italic.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The created Font.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createCompatibleScaledFont(java.lang.String string,net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize)",
    "name": "createCompatibleScaledFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createCompatibleScaledFont(java.lang.String string,net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,int style)",
    "name": "createCompatibleScaledFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "style"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createFont(net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize)",
    "name": "createFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createFont(net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,int style)",
    "name": "createFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "style"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
            "name": "FontType",
            "isArray": false
          },
          "name": "fontType"
        },
        "comment": "How the font should look like.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
            "name": "FontSize",
            "isArray": false
          },
          "name": "fontSize"
        },
        "comment": "Its size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "style"
        },
        "comment": "The font style for choosing plain, bold or italic.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The created Font.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createFont(net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,float scaleFactor)",
    "name": "createFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "scaleFactor"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createCompatibleFont(java.lang.String string,net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize)",
    "name": "createCompatibleFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createCompatibleFont(java.lang.String string,net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,int style)",
    "name": "createCompatibleFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "style"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createCompatibleFont(java.lang.String string,net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,float scaleFactor)",
    "name": "createCompatibleFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "scaleFactor"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createFont(net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,int style,float scaleFactor)",
    "name": "createFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "style"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "scaleFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
            "name": "FontType",
            "isArray": false
          },
          "name": "fontType"
        },
        "comment": "How the font should look like.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
            "name": "FontSize",
            "isArray": false
          },
          "name": "fontSize"
        },
        "comment": "Its relative size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "style"
        },
        "comment": "The font style for choosing plain, bold or italic.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "scaleFactor"
        },
        "comment": "The applied scale factor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The created Font.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createCompatibleFont(java.lang.String string,net.sf.freecol.client.gui.FontLibrary.FontType fontType,net.sf.freecol.client.gui.FontLibrary.FontSize fontSize,int style,float scaleFactor)",
    "name": "createCompatibleFont",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.FontLibrary",
      "name": "FontLibrary",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.FontLibrary",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Font",
      "name": "Font",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
          "name": "FontType",
          "isArray": false
        },
        "name": "fontType"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
          "name": "FontSize",
          "isArray": false
        },
        "name": "fontSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "style"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "scaleFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "string"
        },
        "comment": "The text to find a compatible font for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontType",
            "name": "FontType",
            "isArray": false
          },
          "name": "fontType"
        },
        "comment": "How the font should look like.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.client.gui.FontLibrary.FontSize",
            "name": "FontSize",
            "isArray": false
          },
          "name": "fontSize"
        },
        "comment": "Its relative size.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "style"
        },
        "comment": "The font style for choosing plain, bold or italic.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "scaleFactor"
        },
        "comment": "The applied scale factor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The created Font.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]