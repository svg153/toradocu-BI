[
  {
    "signature": "TransportableAIObject(net.sf.freecol.server.ai.AIMain aiMain,java.lang.String id)",
    "name": "TransportableAIObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "an AIMain value",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "TransportableAIObject(net.sf.freecol.server.ai.AIMain aiMain,org.w3c.dom.Element element)",
    "name": "TransportableAIObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "element"
        },
        "comment": "The root element for the XML-representation of the object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "TransportableAIObject(net.sf.freecol.server.ai.AIMain aiMain,net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "TransportableAIObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIMain",
          "name": "AIMain",
          "isArray": false
        },
        "name": "aiMain"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIMain",
            "name": "AIMain",
            "isArray": false
          },
          "name": "aiMain"
        },
        "comment": "The main AI-object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The input stream containing the XML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getTransportPriority()",
    "name": "getTransportPriority",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The priority of the transport.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTransportPriority(int transportPriority)",
    "name": "setTransportPriority",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "transportPriority"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "transportPriority"
        },
        "comment": "The priority.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "incrementTransportPriority()",
    "name": "incrementTransportPriority",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTransport()",
    "name": "getTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
      "name": "AIUnit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The AIUnit which will transport this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTransport(net.sf.freecol.server.ai.AIUnit transport)",
    "name": "setTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "transport"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "transport"
        },
        "comment": "The new carrier AIUnit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSpaceTaken()",
    "name": "getSpaceTaken",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of cargo slots taken.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dropTransport()",
    "name": "dropTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the unit has no allocated transport.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "changeTransport(net.sf.freecol.server.ai.AIUnit aiCarrier)",
    "name": "changeTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
          "name": "AIUnit",
          "isArray": false
        },
        "name": "aiCarrier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.server.ai.AIUnit",
            "name": "AIUnit",
            "isArray": false
          },
          "name": "aiCarrier"
        },
        "comment": "The new carrier AIUnit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the transport was changed, false if the transportable was unable to disembark from the old carrier or unable to be added to the new carrier transport list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLocation()",
    "name": "getLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The transportable Location.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTransportLocatable()",
    "name": "getTransportLocatable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Locatable",
      "name": "Locatable",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Locatable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTransportSource()",
    "name": "getTransportSource",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The source Location.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTransportDestination()",
    "name": "getTransportDestination",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The destination Location.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTransportDestination(net.sf.freecol.common.model.Location destination)",
    "name": "setTransportDestination",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "destination"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "destination"
        },
        "comment": "The destination Location.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDeliveryPath(net.sf.freecol.common.model.Unit carrier,net.sf.freecol.common.model.Location dst)",
    "name": "getDeliveryPath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.PathNode",
      "name": "PathNode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "dst"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The carrier Unit to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "dst"
        },
        "comment": "The destination Location, defaulting to the transport destination if null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A path, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIntermediatePath(net.sf.freecol.common.model.Unit carrier,net.sf.freecol.common.model.Location dst)",
    "name": "getIntermediatePath",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.PathNode",
      "name": "PathNode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "dst"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The carrier Unit to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "dst"
        },
        "comment": "The destination Location, defaulting to the transport destination if null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A path, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "carriableBy(net.sf.freecol.common.model.Unit carrier)",
    "name": "carriableBy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The potential carrier Unit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the unit can carry this transportable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canMove()",
    "name": "canMove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the transportable can move.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "leaveTransport()",
    "name": "leaveTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the object successfully left the carrier.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "leaveTransport(net.sf.freecol.common.model.Direction direction)",
    "name": "leaveTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to leave in, null to leave in place.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the object successfully left the carrier.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "joinTransport(net.sf.freecol.common.model.Unit carrier,net.sf.freecol.common.model.Direction direction)",
    "name": "joinTransport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "carrier"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Direction",
          "name": "Direction",
          "isArray": false
        },
        "name": "direction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "carrier"
        },
        "comment": "The carrier Unit to join.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Direction",
            "name": "Direction",
            "isArray": false
          },
          "name": "direction"
        },
        "comment": "The Direction to move, null to join a carrier in the same location.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the object has joined tha carrier.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "invalidReason()",
    "name": "invalidReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A reason to abort transport, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.server.ai.TransportableAIObject",
      "name": "TransportableAIObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.server.ai.TransportableAIObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]