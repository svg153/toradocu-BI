[
  {
    "signature": "Game(net.sf.freecol.common.model.Specification specification)",
    "name": "Game",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification for this game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Game(org.w3c.dom.Element element,java.lang.String clientUserName)",
    "name": "Game",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "element"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "clientUserName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "element"
        },
        "comment": "The Element containing the game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "clientUserName"
        },
        "comment": "The name of the owner of this view of the game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSpecification()",
    "name": "getSpecification",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Specification for this game.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDifficultyOptionGroup()",
    "name": "getDifficultyOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An OptionGroup containing the difficulty settings.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGameOptions()",
    "name": "getGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An OptionGroup containing the game options.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setGameOptions(net.sf.freecol.common.option.OptionGroup go)",
    "name": "setGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "go"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "go"
        },
        "comment": "An OptionGroup containing the game options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMapGeneratorOptions()",
    "name": "getMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An OptionGroup containing the map generator options.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMapGeneratorOptions(net.sf.freecol.common.option.OptionGroup mgo)",
    "name": "setMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "mgo"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "mgo"
        },
        "comment": "An OptionGroup containing the map generator options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getNextId()",
    "name": "getNextId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Nothing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "IllegalStateException,",
          "name": "IllegalStateException,",
          "isArray": false
        },
        "codeTags": [],
        "comment": "unimplemented in the client.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getFreeColGameObject(java.lang.String id)",
    "name": "getFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
      "name": "FreeColGameObject",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The game object, or null if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFreeColGameObject(java.lang.String id,java.lang.Class returnClass)",
    "name": "getFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The expected class of the object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The game object, or null if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setFreeColGameObject(java.lang.String id,net.sf.freecol.common.model.FreeColGameObject fcgo)",
    "name": "setFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "fcgo"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "fcgo"
        },
        "comment": "The FreeColGameObject to add to this Game.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If either the identifier or object are null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "removeFreeColGameObject(java.lang.String id,java.lang.String reason)",
    "name": "removeFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "reason"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "reason"
        },
        "comment": "A reason to remove the object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If the identifier is null or empty.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[0].isEmpty()"
      }
    ]
  },
  {
    "signature": "findFreeColLocation(java.lang.String id)",
    "name": "findFreeColLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Location if any.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFreeColGameObjectIterator()",
    "name": "getFreeColGameObjectIterator",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An Iterator containing every registered FreeColGameObject.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFreeColGameObjects()",
    "name": "getFreeColGameObjects",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A suitable Iterable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUUID()",
    "name": "getUUID",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.UUID",
      "name": "UUID",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The game UUID.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlayers()",
    "name": "getPlayers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The list of Players.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlayerByNation(net.sf.freecol.common.model.Nation nation)",
    "name": "getPlayerByNation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Nation",
          "name": "Nation",
          "isArray": false
        },
        "name": "nation"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Nation",
            "name": "Nation",
            "isArray": false
          },
          "name": "nation"
        },
        "comment": "The Nation to search for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Player of the given nation, or null if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlayerByNationId(java.lang.String nationId)",
    "name": "getPlayerByNationId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nationId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "nationId"
        },
        "comment": "The nation identifier to search for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Player of the given nation, or null if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLivePlayers(net.sf.freecol.common.model.Player other)",
    "name": "getLivePlayers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "An optional Player to omit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The list of live Players.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOtherLivePlayers(net.sf.freecol.common.model.Player[] players)",
    "name": "getOtherLivePlayers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player[]",
          "name": "Player[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          }
        },
        "name": "players"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player[]",
            "name": "Player[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "net.sf.freecol.common.model.Player",
              "name": "Player",
              "isArray": false
            }
          },
          "name": "players"
        },
        "comment": "The Players to exclude.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of live Players, with exclusions.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLiveEuropeanPlayers(net.sf.freecol.common.model.Player other)",
    "name": "getLiveEuropeanPlayers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "An optional Player to omit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of live European Players in this game.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLiveNativePlayers(net.sf.freecol.common.model.Player other)",
    "name": "getLiveNativePlayers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "An optional Player to omit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of live native Players in this game.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNextPlayer()",
    "name": "getNextPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Player whose turn follows the current player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlayerAfter(net.sf.freecol.common.model.Player beforePlayer)",
    "name": "getPlayerAfter",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "beforePlayer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "beforePlayer"
        },
        "comment": "The Player before the Player to be returned.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Player after the beforePlayer in the list which determines the order each player becomes the current player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFirstPlayer()",
    "name": "getFirstPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The first player, or null if none present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlayerByName(java.lang.String name)",
    "name": "getPlayerByName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The name identifying the Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Player or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "playerNameInUse(java.lang.String name)",
    "name": "playerNameInUse",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The name to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the name is already in use.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addPlayer(net.sf.freecol.common.model.Player player)",
    "name": "addPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the player was added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removePlayer(net.sf.freecol.common.model.Player player)",
    "name": "removePlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the player was removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnknownEnemy()",
    "name": "getUnknownEnemy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The unknown enemy Player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUnknownEnemy(net.sf.freecol.common.model.Player player)",
    "name": "setUnknownEnemy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to serve as the unknown enemy.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getClientPlayer()",
    "name": "getClientPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The client Player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isInClient()",
    "name": "isInClient",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True in a client.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isInServer()",
    "name": "isInServer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True in the server.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isInRevengeMode()",
    "name": "isInRevengeMode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if an undead player is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCurrentPlayer()",
    "name": "getCurrentPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setCurrentPlayer(net.sf.freecol.common.model.Player newCurrentPlayer)",
    "name": "setCurrentPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "newCurrentPlayer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "newCurrentPlayer"
        },
        "comment": "The new current Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMap()",
    "name": "getMap",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The game Map.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMap(net.sf.freecol.common.model.Map newMap)",
    "name": "setMap",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "newMap"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "newMap"
        },
        "comment": "The new Map to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getNationOptions()",
    "name": "getNationOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.NationOptions",
      "name": "NationOptions",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current NationOptions.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setNationOptions(net.sf.freecol.common.model.NationOptions newNationOptions)",
    "name": "setNationOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationOptions",
          "name": "NationOptions",
          "isArray": false
        },
        "name": "newNationOptions"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationOptions",
            "name": "NationOptions",
            "isArray": false
          },
          "name": "newNationOptions"
        },
        "comment": "The new NationOptions value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getVacantNation()",
    "name": "getVacantNation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A vacant Nation or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getVacantNations()",
    "name": "getVacantNations",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of available Nations.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canAddNewPlayer()",
    "name": "canAddNewPlayer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if a new player can be added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTurn()",
    "name": "getTurn",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Turn",
      "name": "Turn",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current Turn.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTurn(net.sf.freecol.common.model.Turn newTurn)",
    "name": "setTurn",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "newTurn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "newTurn"
        },
        "comment": "The new Turn to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getAge()",
    "name": "getAge",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The age (0-2).",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getCombatModel()",
    "name": "getCombatModel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.CombatModel",
      "name": "CombatModel",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The CombatModel.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setCombatModel(net.sf.freecol.common.model.CombatModel newCombatModel)",
    "name": "setCombatModel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.CombatModel",
          "name": "CombatModel",
          "isArray": false
        },
        "name": "newCombatModel"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.CombatModel",
            "name": "CombatModel",
            "isArray": false
          },
          "name": "newCombatModel"
        },
        "comment": "The new CombatModel value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSpanishSuccession()",
    "name": "getSpanishSuccession",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the Spanish Succession has occurred.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSpanishSuccession(boolean spanishSuccession)",
    "name": "setSpanishSuccession",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "spanishSuccession"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "spanishSuccession"
        },
        "comment": "The new Spanish Succession value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setFreeColGameObjectListener(net.sf.freecol.common.model.FreeColGameObjectListener fcgol)",
    "name": "setFreeColGameObjectListener",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectListener",
          "name": "FreeColGameObjectListener",
          "isArray": false
        },
        "name": "fcgol"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectListener",
            "name": "FreeColGameObjectListener",
            "isArray": false
          },
          "name": "fcgol"
        },
        "comment": "The new FreeColGameObjectListener.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "notifySetFreeColGameObject(java.lang.String id,net.sf.freecol.common.model.FreeColGameObject fcgo)",
    "name": "notifySetFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "fcgo"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "fcgo"
        },
        "comment": "The new FreeColGameObject.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "notifyRemoveFreeColGameObject(java.lang.String id)",
    "name": "notifyRemoveFreeColGameObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "notifyOwnerChanged(net.sf.freecol.common.model.FreeColGameObject source,net.sf.freecol.common.model.Player oldOwner,net.sf.freecol.common.model.Player newOwner)",
    "name": "notifyOwnerChanged",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
          "name": "FreeColGameObject",
          "isArray": false
        },
        "name": "source"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "oldOwner"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "newOwner"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
            "name": "FreeColGameObject",
            "isArray": false
          },
          "name": "source"
        },
        "comment": "The FreeColGameObject that changed owner.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "oldOwner"
        },
        "comment": "The old owning Player.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "newOwner"
        },
        "comment": "The new owning Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "checkOwners(net.sf.freecol.common.model.Ownable o,net.sf.freecol.common.model.Player oldOwner)",
    "name": "checkOwners",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Ownable",
          "name": "Ownable",
          "isArray": false
        },
        "name": "o"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "oldOwner"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Ownable",
            "name": "Ownable",
            "isArray": false
          },
          "name": "o"
        },
        "comment": "The Ownable that may have changed.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "oldOwner"
        },
        "comment": "The previous (possible unchanged) owning Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "allPlayersReadyToLaunch()",
    "name": "allPlayersReadyToLaunch",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if all players are ready to launch.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSettlementByName(java.lang.String name)",
    "name": "getSettlementByName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The name of the Settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Settlement found, or null if there is no known Settlement with the specified name (the settlement might not be visible to a client).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMessageSource(net.sf.freecol.common.model.ModelMessage message)",
    "name": "getMessageSource",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
      "name": "FreeColGameObject",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ModelMessage",
          "name": "ModelMessage",
          "isArray": false
        },
        "name": "message"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ModelMessage",
            "name": "ModelMessage",
            "isArray": false
          },
          "name": "message"
        },
        "comment": "The ModelMessage to find the object in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The source object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMessageDisplay(net.sf.freecol.common.model.ModelMessage message)",
    "name": "getMessageDisplay",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.ModelMessage",
          "name": "ModelMessage",
          "isArray": false
        },
        "name": "message"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.ModelMessage",
            "name": "ModelMessage",
            "isArray": false
          },
          "name": "message"
        },
        "comment": "The ModelMessage to find the object in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An object to display.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStatistics()",
    "name": "getStatistics",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A Map of the statistics.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getMap())"
    },
    "throwsTags": []
  },
  {
    "signature": "getLocationClass(java.lang.String id)",
    "name": "getLocationClass",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Class",
      "name": "Class",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The identifier to dissect.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "newInstance(java.lang.Class returnClass,boolean server)",
    "name": "newInstance",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "server"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The required FreeColObject class.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "server"
        },
        "comment": "Create a server object if possible.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The new uninitialized object, or null on error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "unserialize(java.lang.String xml,java.lang.Class returnClass)",
    "name": "unserialize",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "xml"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "xml"
        },
        "comment": "The xml serialized version of an object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The required object class.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The unserialized object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems reading from the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "checkIntegrity(boolean fix)",
    "name": "checkIntegrity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fix"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Game",
      "name": "Game",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Game",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"game\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]