[
  {
    "signature": "GoodsContainer(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Location parent)",
    "name": "GoodsContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "The Location this GoodsContainer contains goods for.",
        "kind": "PARAM",
        "condition": "args[1].contains(net.sf.freecol.common.model.Locatable)"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "GoodsContainer(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "GoodsContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "GoodsContainer(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Location parent,org.w3c.dom.Element e)",
    "name": "GoodsContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "parent"
      },
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "The Location this GoodsContainer contains goods for.",
        "kind": "PARAM",
        "condition": "args[1].contains(net.sf.freecol.common.model.Locatable)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "e"
        },
        "comment": "An XML-element that will be used to initialize this object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setLocation(net.sf.freecol.common.model.Location location)",
    "name": "setLocation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "location"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "location"
        },
        "comment": "The Location to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "contains(net.sf.freecol.common.model.Goods g)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "g"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "g"
        },
        "comment": "The Goods to test the presence of.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if there is enough of the specified goods present that it can be removed without error.",
      "kind": "RETURN",
      "condition": "target.getGoods().remove(java.lang.Object) ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsCount(net.sf.freecol.common.model.GoodsType type)",
    "name": "getGoodsCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType being looked for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of this type of goods in this container.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOldGoodsCount(net.sf.freecol.common.model.GoodsType type)",
    "name": "getOldGoodsCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType being looked for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of this type of goods in this container at the beginning of the turn",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addGoods(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "addGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the addition succeeds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addGoods(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "addGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to add.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the addition succeeds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeGoods(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "removeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to remove from this container.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Goods actually removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeGoods(net.sf.freecol.common.model.GoodsType type)",
    "name": "removeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Goods actually removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeGoods(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "removeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to remove.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Goods actually removed, which may have a lower actual amount, or null if nothing removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setAmount(net.sf.freecol.common.model.GoodsType goodsType,int newAmount)",
    "name": "setAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newAmount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to set the amount of.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newAmount"
        },
        "comment": "The new amount.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeAll()",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeAbove(int newAmount)",
    "name": "removeAbove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newAmount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newAmount"
        },
        "comment": "The threshold.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "hasReachedCapacity(int amount)",
    "name": "hasReachedCapacity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if any storable, capacity limited goods has reached the given amount.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSpaceTaken()",
    "name": "getSpaceTaken",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The amount of space taken by this containers goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsIterator()",
    "name": "getGoodsIterator",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoods()",
    "name": "getGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of Goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCompactGoods()",
    "name": "getCompactGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of Goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "saveState()",
    "name": "saveState",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "restoreState()",
    "name": "restoreState",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasChanged()",
    "name": "hasChanged",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the contents have changed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fireChanges()",
    "name": "fireChanges",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if something changed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOwner()",
    "name": "getOwner",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setOwner(net.sf.freecol.common.model.Player p)",
    "name": "setOwner",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "disposeResources()",
    "name": "disposeResources",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsContainer",
      "name": "GoodsContainer",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsContainer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"goodsContainer\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]