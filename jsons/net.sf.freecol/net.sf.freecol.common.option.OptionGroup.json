[
  {
    "signature": "OptionGroup(java.lang.String id)",
    "name": "OptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "OptionGroup(net.sf.freecol.common.model.Specification specification)",
    "name": "OptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "OptionGroup(java.lang.String id,net.sf.freecol.common.model.Specification specification)",
    "name": "OptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "OptionGroup(net.sf.freecol.common.io.FreeColXMLReader xr,net.sf.freecol.common.model.Specification specification)",
    "name": "OptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isEditable()",
    "name": "isEditable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the option group is editable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setEditable(boolean editable)",
    "name": "setEditable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "editable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "editable"
        },
        "comment": "The new editable status.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getName()",
    "name": "getName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The name as provided in the constructor.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getShortDescription()",
    "name": "getShortDescription",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A short description of this Option.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOptions()",
    "name": "getOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The list of Options.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOption(java.lang.String id)",
    "name": "getOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.Option",
      "name": "Option",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The option, or null if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasOptionGroup()",
    "name": "hasOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if there are any child OptionGroups present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "add(net.sf.freecol.common.option.Option option)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.Option",
          "name": "Option",
          "isArray": false
        },
        "name": "option"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.Option",
            "name": "Option",
            "isArray": false
          },
          "name": "option"
        },
        "comment": "The Option to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "merge(net.sf.freecol.common.option.Option option)",
    "name": "merge",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.Option",
          "name": "Option",
          "isArray": false
        },
        "name": "option"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.Option",
            "name": "Option",
            "isArray": false
          },
          "name": "option"
        },
        "comment": "The Option to merge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the merge was accepted.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "remove(java.lang.String id)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.Option",
      "name": "Option",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The identifier of the option to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Option removed if any.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeAll()",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOptionGroup(java.lang.String id)",
    "name": "getOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The OptionGroup value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no option group value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getInteger(java.lang.String id)",
    "name": "getInteger",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The integer value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no integer value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setInteger(java.lang.String id,int value)",
    "name": "setInteger",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The new integer value of the option.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no integer value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getBoolean(java.lang.String id)",
    "name": "getBoolean",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The boolean value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no boolean value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setBoolean(java.lang.String id,boolean value)",
    "name": "setBoolean",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The new boolean value of the option.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no boolean value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getString(java.lang.String id)",
    "name": "getString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The string value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no string value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setString(java.lang.String id,java.lang.String value)",
    "name": "setString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The new string value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no string value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getText(java.lang.String id)",
    "name": "getText",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The string value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no string value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setText(java.lang.String id,java.lang.String value)",
    "name": "setText",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The new string value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no string value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValue()",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setValue(net.sf.freecol.common.option.OptionGroup value)",
    "name": "setValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setValue(java.lang.String valueString,java.lang.String defaultValueString)",
    "name": "setValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "valueString"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defaultValueString"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isNullValueOK()",
    "name": "isNullValueOK",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.option.OptionGroup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"optionGroup\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]