[
  {
    "signature": "Settlement(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Player owner,java.lang.String name,net.sf.freecol.common.model.Tile tile)",
    "name": "Settlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "owner"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "owner"
        },
        "comment": "The owning Player.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The settlement name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The containing Tile.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Settlement(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "Settlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.SettlementType",
      "name": "SettlementType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The settlement type.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "setType(net.sf.freecol.common.model.SettlementType newType)",
    "name": "setType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.SettlementType",
          "name": "SettlementType",
          "isArray": false
        },
        "name": "newType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.SettlementType",
            "name": "SettlementType",
            "isArray": false
          },
          "name": "newType"
        },
        "comment": "The new SettlementType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isLandLocked()",
    "name": "isLandLocked",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if no adjacent tiles are water.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isCapital()",
    "name": "isCapital",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a national capital.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setCapital(boolean capital)",
    "name": "setCapital",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "capital"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getOwnedTiles()",
    "name": "getOwnedTiles",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of tiles.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addTile(net.sf.freecol.common.model.Tile tile)",
    "name": "addTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeTile(net.sf.freecol.common.model.Tile tile)",
    "name": "removeTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The Tile to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRadius()",
    "name": "getRadius",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Settlement radius",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLineOfSight()",
    "name": "getLineOfSight",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The line of sight value.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getTile())"
    },
    "throwsTags": []
  },
  {
    "signature": "getPlunder(net.sf.freecol.common.model.Unit attacker,java.util.Random random)",
    "name": "getPlunder",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "attacker"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "attacker"
        },
        "comment": "The Unit that takes the settlement.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An amount of gold plundered.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "placeSettlement(boolean maximal)",
    "name": "placeSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "maximal"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "maximal"
        },
        "comment": "If true, also claim all the tiles possible.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "exciseSettlement()",
    "name": "exciseSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "changeOwner(net.sf.freecol.common.model.Player newOwner)",
    "name": "changeOwner",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "newOwner"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "newOwner"
        },
        "comment": "The Player that shall own this Settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isConnectedPort()",
    "name": "isConnectedPort",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the settlement is connected to the high seas.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getHighSeasCount()",
    "name": "getHighSeasCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A high seas count, INFINITY if not connected.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConsumptionOf(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getConsumptionOf",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "a GoodsType value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an int value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConsumptionOf(java.util.List goodsTypes)",
    "name": "getConsumptionOf",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goodsTypes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "goodsTypes"
        },
        "comment": "GoodsType values",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an int value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFoodConsumption()",
    "name": "getFoodConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The amount of food eaten in this colony each this turn.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canProvideGoods(java.util.List goods)",
    "name": "canProvideGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "A list of AbstractGoods",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the settlement can provide the equipment.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWarehouseCapacity()",
    "name": "getWarehouseCapacity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The storage capacity of this settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canBombardEnemyShip()",
    "name": "canBombardEnemyShip",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if bombarding is allowed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canImproveUnitMilitaryRole(net.sf.freecol.common.model.Unit unit)",
    "name": "canImproveUnitMilitaryRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Role that this settlement could provide.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLinkTarget(net.sf.freecol.common.model.Player player)",
    "name": "getLinkTarget",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObject",
      "name": "FreeColGameObject",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFeatureContainer()",
    "name": "getFeatureContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FeatureContainer",
      "name": "FeatureContainer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "disposeResources()",
    "name": "disposeResources",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getName()",
    "name": "getName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The settlement name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setName(java.lang.String newName)",
    "name": "setName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "newName"
        },
        "comment": "The new name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOwner()",
    "name": "getOwner",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setOwner(net.sf.freecol.common.model.Player player)",
    "name": "setOwner",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTile()",
    "name": "getTile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tile",
      "name": "Tile",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLocationLabel()",
    "name": "getLocationLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSettlement()",
    "name": "getSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRank()",
    "name": "getRank",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNoAddReason(net.sf.freecol.common.model.Locatable locatable)",
    "name": "getNoAddReason",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitLocation.NoAddReason",
      "name": "NoAddReason",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "priceGoods(java.util.List goods)",
    "name": "priceGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equipForRole(net.sf.freecol.common.model.Unit unit,net.sf.freecol.common.model.Role role,int roleCount)",
    "name": "equipForRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "role"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "roleCount"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getImageKey()",
    "name": "getImageKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An image key",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDefendingUnit(net.sf.freecol.common.model.Unit attacker)",
    "name": "getDefendingUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "Unit",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "attacker"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "attacker"
        },
        "comment": "The Unit that is attacking this Settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Unit that has been chosen to defend this Settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDefenceRatio()",
    "name": "getDefenceRatio",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A ratio of defence power to settlement size.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBadlyDefended()",
    "name": "isBadlyDefended",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this settlement needs more defence.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPlunderRange(net.sf.freecol.common.model.Unit attacker)",
    "name": "getPlunderRange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "attacker"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "attacker"
        },
        "comment": "The Unit that takes the settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A RandomRange encapsulating the range of plunder available.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSoL()",
    "name": "getSoL",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current SoL.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUpkeep()",
    "name": "getUpkeep",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The gold required for upkeep.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTotalProductionOf(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getTotalProductionOf",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The type of goods to get the production for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The total production of the given type of goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasContacted(net.sf.freecol.common.model.Player player)",
    "name": "hasContacted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The other Player to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the settlement has contacted the player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAlarmLevelLabel(net.sf.freecol.common.model.Player player)",
    "name": "getAlarmLevelLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The other Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A StringTemplate describing the alarm.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Settlement",
      "name": "Settlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Settlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]