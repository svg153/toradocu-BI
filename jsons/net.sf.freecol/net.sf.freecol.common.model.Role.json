[
  {
    "signature": "Role(java.lang.String id,net.sf.freecol.common.model.Specification specification)",
    "name": "Role",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isDefaultRoleId(java.lang.String roleId)",
    "name": "isDefaultRoleId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "roleId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "roleId"
        },
        "comment": "The role identifier to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this is the default role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDefaultRole()",
    "name": "isDefaultRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is the default role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRoleSuffix()",
    "name": "getRoleSuffix",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The role suffix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRoleSuffix(java.lang.String roleId)",
    "name": "getRoleSuffix",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "roleId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "roleId"
        },
        "comment": "A role identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The role suffix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fixRoleId(java.lang.String roleId)",
    "name": "fixRoleId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "roleId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "roleId"
        },
        "comment": "The role id to fix.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The fixed role id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDowngrade()",
    "name": "getDowngrade",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The downgraded role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDowngrade(net.sf.freecol.common.model.Role newDowngrade)",
    "name": "setDowngrade",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "newDowngrade"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "newDowngrade"
        },
        "comment": "The new downgraded role.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMaximumCount()",
    "name": "getMaximumCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The maximum goods count.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMaximumCount(int newMaximumCount)",
    "name": "setMaximumCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newMaximumCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newMaximumCount"
        },
        "comment": "The new maximum goods count.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getExpertUnit()",
    "name": "getExpertUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The expert type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setExpertUnit(net.sf.freecol.common.model.UnitType newExpertUnit)",
    "name": "setExpertUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "newExpertUnit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "newExpertUnit"
        },
        "comment": "The new expert type.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRequiredGoods(int roleCount)",
    "name": "getRequiredGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "roleCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "roleCount"
        },
        "comment": "The role count.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of required goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRequiredGoodsPrice(net.sf.freecol.common.model.Market market)",
    "name": "getRequiredGoodsPrice",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Market",
          "name": "Market",
          "isArray": false
        },
        "name": "market"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Market",
            "name": "Market",
            "isArray": false
          },
          "name": "market"
        },
        "comment": "The Market to evaluate in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The price of the goods for this role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRoleChanges()",
    "name": "getRoleChanges",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of RoleChanges.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addRoleChange(java.lang.String from,java.lang.String capture)",
    "name": "addRoleChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "from"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "capture"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "from"
        },
        "comment": "The source role identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "capture"
        },
        "comment": "The identifier for the role to capture.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOffence()",
    "name": "getOffence",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The offense value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isOffensive()",
    "name": "isOffensive",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is an offensive role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDefensive()",
    "name": "isDefensive",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is an defensive role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isCompatibleWith(net.sf.freecol.common.model.Role other)",
    "name": "isCompatibleWith",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "The other Role to compare with.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the other role is compatible.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isCompatibleWith(net.sf.freecol.common.model.Role role1,net.sf.freecol.common.model.Role role2)",
    "name": "isCompatibleWith",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "role1"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "role2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "role1"
        },
        "comment": "A Role to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "role2"
        },
        "comment": "The other Role to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the roles are compatible.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsDifference(net.sf.freecol.common.model.Role from,int fromCount,net.sf.freecol.common.model.Role to,int toCount)",
    "name": "getGoodsDifference",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "from"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromCount"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Role",
          "name": "Role",
          "isArray": false
        },
        "name": "to"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "toCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "from"
        },
        "comment": "The current Role.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "fromCount"
        },
        "comment": "The role count for the current role.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Role",
            "name": "Role",
            "isArray": false
          },
          "name": "to"
        },
        "comment": "The new Role to assume.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "toCount"
        },
        "comment": "The role count for the new role.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of AbstractGoods required to make the change.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAvailableRoles(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.UnitType type,java.util.List roles)",
    "name": "getAvailableRoles",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "roles"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to own the unit.",
        "kind": "PARAM",
        "condition": "args[0].owns(net.sf.freecol.common.model.Ownable)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The UnitType to check.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "roles"
        },
        "comment": "A list of proposed Roles.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of available Roles.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toFullString()",
    "name": "toFullString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A more detailed description of this role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareTo(net.sf.freecol.common.model.FreeColObject other)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Role",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"role\"",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]