[
  {
    "signature": "getId()",
    "name": "getId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The identifier.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setId(java.lang.String newId)",
    "name": "setId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "newId"
        },
        "comment": "The new object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "internId(java.lang.String newId)",
    "name": "internId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "newId"
        },
        "comment": "The new object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getSuffix(java.lang.String prefix)",
    "name": "getSuffix",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "prefix"
        },
        "comment": "The prefix to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An identifier.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSuffix()",
    "name": "getSuffix",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The usual identifier suffix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSpecification()",
    "name": "getSpecification",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Specification used by this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSpecification(net.sf.freecol.common.model.Specification specification)",
    "name": "setSpecification",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getIdType(java.lang.String id)",
    "name": "getIdType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "The type part of the identifier, or null on error.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getIdType())"
    },
    "throwsTags": []
  },
  {
    "signature": "getIdType()",
    "name": "getIdType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The type part of the identifier, or null on error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIdNumber()",
    "name": "getIdNumber",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The numeric part of the identifier, or negative on error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareIds(net.sf.freecol.common.model.FreeColObject fco1,net.sf.freecol.common.model.FreeColObject fco2)",
    "name": "compareIds",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "fco1"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "fco2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "fco1"
        },
        "comment": "The first FreeColObject to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "fco2"
        },
        "comment": "The second FreeColObject to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The comparison result.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareTo(net.sf.freecol.common.model.FreeColObject other)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "The other FreeColObject subclass to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The comparison result.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSortedCopy(java.util.Collection c)",
    "name": "getSortedCopy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "The Collection to sort.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A sorted copy of the collection.",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "logFreeColObjects(java.util.Collection c,net.sf.freecol.common.util.LogBuilder lb)",
    "name": "logFreeColObjects",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "c"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
          "name": "LogBuilder",
          "isArray": false
        },
        "name": "lb"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "The Collection to log.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.util.LogBuilder",
            "name": "LogBuilder",
            "isArray": false
          },
          "name": "lb"
        },
        "comment": "A LogBuilder to log to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "invokeMethod(java.lang.String methodName,java.lang.Class returnClass,java.lang.Object defaultValue)",
    "name": "invokeMethod",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "methodName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "methodName"
        },
        "comment": "The name of the method.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The class of the return value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "The default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The result of invoking the method, or the default value on failure.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addPropertyChangeListener(java.beans.PropertyChangeListener listener)",
    "name": "addPropertyChangeListener",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.beans.PropertyChangeListener",
          "name": "PropertyChangeListener",
          "isArray": false
        },
        "name": "listener"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addPropertyChangeListener(java.lang.String propertyName,java.beans.PropertyChangeListener listener)",
    "name": "addPropertyChangeListener",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "java.beans.PropertyChangeListener",
          "name": "PropertyChangeListener",
          "isArray": false
        },
        "name": "listener"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "fireIndexedPropertyChange(java.lang.String propertyName,int index,boolean oldValue,boolean newValue)",
    "name": "fireIndexedPropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "fireIndexedPropertyChange(java.lang.String propertyName,int index,int oldValue,int newValue)",
    "name": "fireIndexedPropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "fireIndexedPropertyChange(java.lang.String propertyName,int index,java.lang.Object oldValue,java.lang.Object newValue)",
    "name": "fireIndexedPropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "firePropertyChange(java.beans.PropertyChangeEvent event)",
    "name": "firePropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.beans.PropertyChangeEvent",
          "name": "PropertyChangeEvent",
          "isArray": false
        },
        "name": "event"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "firePropertyChange(java.lang.String propertyName,boolean oldValue,boolean newValue)",
    "name": "firePropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "firePropertyChange(java.lang.String propertyName,int oldValue,int newValue)",
    "name": "firePropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "firePropertyChange(java.lang.String propertyName,java.lang.Object oldValue,java.lang.Object newValue)",
    "name": "firePropertyChange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "oldValue"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "newValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPropertyChangeListeners()",
    "name": "getPropertyChangeListeners",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.beans.PropertyChangeListener[]",
      "name": "PropertyChangeListener[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.beans.PropertyChangeListener",
        "name": "PropertyChangeListener",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPropertyChangeListeners(java.lang.String propertyName)",
    "name": "getPropertyChangeListeners",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.beans.PropertyChangeListener[]",
      "name": "PropertyChangeListener[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.beans.PropertyChangeListener",
        "name": "PropertyChangeListener",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasListeners(java.lang.String propertyName)",
    "name": "hasListeners",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removePropertyChangeListener(java.beans.PropertyChangeListener listener)",
    "name": "removePropertyChangeListener",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.beans.PropertyChangeListener",
          "name": "PropertyChangeListener",
          "isArray": false
        },
        "name": "listener"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removePropertyChangeListener(java.lang.String propertyName,java.beans.PropertyChangeListener listener)",
    "name": "removePropertyChangeListener",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "java.beans.PropertyChangeListener",
          "name": "PropertyChangeListener",
          "isArray": false
        },
        "name": "listener"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFeatureContainer()",
    "name": "getFeatureContainer",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FeatureContainer",
      "name": "FeatureContainer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasAbility(java.lang.String id)",
    "name": "hasAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the ability is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasAbility(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "name": "hasAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the ability is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasAbility(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "name": "hasAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the ability is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "containsAbilityKey(java.lang.String key)",
    "name": "containsAbilityKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "The key to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the key is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSortedAbilities()",
    "name": "getSortedAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of abilities.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAbilities()",
    "name": "getAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A set of abilities.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAbilities(java.lang.String id)",
    "name": "getAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A set of abilities.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.setId(java.lang.String))"
    },
    "throwsTags": []
  },
  {
    "signature": "getAbilities(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "name": "getAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A set of abilities.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.setId(java.lang.String))"
    },
    "throwsTags": []
  },
  {
    "signature": "getAbilities(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "name": "getAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the ability applies to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A set of abilities.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.setId(java.lang.String))"
    },
    "throwsTags": []
  },
  {
    "signature": "addAbility(net.sf.freecol.common.model.Ability ability)",
    "name": "addAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Ability",
          "name": "Ability",
          "isArray": false
        },
        "name": "ability"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Ability",
            "name": "Ability",
            "isArray": false
          },
          "name": "ability"
        },
        "comment": "An Ability to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the ability was added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeAbility(net.sf.freecol.common.model.Ability ability)",
    "name": "removeAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Ability",
      "name": "Ability",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Ability",
          "name": "Ability",
          "isArray": false
        },
        "name": "ability"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Ability",
            "name": "Ability",
            "isArray": false
          },
          "name": "ability"
        },
        "comment": "An Ability to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The ability removed or null on failure.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeAbilities(java.lang.String id)",
    "name": "removeAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "hasModifier(java.lang.String id)",
    "name": "hasModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the modifier is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasModifier(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "name": "hasModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the modifier is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasModifier(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "name": "hasModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the modifier is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "containsModifierKey(java.lang.String key)",
    "name": "containsModifierKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "The key to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the key is present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSortedModifiers()",
    "name": "getSortedModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of modifiers.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getModifiers()",
    "name": "getModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A set of modifiers.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getModifiers(java.lang.String id)",
    "name": "getModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A set of modifiers.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.setId(java.lang.String))"
    },
    "throwsTags": []
  },
  {
    "signature": "getModifiers(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "name": "getModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A set of modifiers.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.setId(java.lang.String))"
    },
    "throwsTags": []
  },
  {
    "signature": "getModifiers(java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot,net.sf.freecol.common.model.Turn turn)",
    "name": "getModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A set of modifiers.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.setId(java.lang.String))"
    },
    "throwsTags": []
  },
  {
    "signature": "applyModifiers(float number,net.sf.freecol.common.model.Turn turn,java.lang.String id)",
    "name": "applyModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "number"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "number"
        },
        "comment": "The number to modify.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The modified number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "applyModifiers(float number,net.sf.freecol.common.model.Turn turn,java.lang.String id,net.sf.freecol.common.model.FreeColGameObjectType fcgot)",
    "name": "applyModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "number"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
          "name": "FreeColGameObjectType",
          "isArray": false
        },
        "name": "fcgot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "number"
        },
        "comment": "The number to modify.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
            "name": "FreeColGameObjectType",
            "isArray": false
          },
          "name": "fcgot"
        },
        "comment": "An optional FreeColGameObjectType the modifier applies to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The modified number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "applyModifiers(float number,net.sf.freecol.common.model.Turn turn,java.util.Collection mods)",
    "name": "applyModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "number"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "mods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "number"
        },
        "comment": "The number to modify.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "An optional applicable Turn.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "mods"
        },
        "comment": "The Modifiers to apply.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The modified number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addModifier(net.sf.freecol.common.model.Modifier modifier)",
    "name": "addModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Modifier",
          "name": "Modifier",
          "isArray": false
        },
        "name": "modifier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Modifier",
            "name": "Modifier",
            "isArray": false
          },
          "name": "modifier"
        },
        "comment": "An Modifier to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the modifier was added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeModifier(net.sf.freecol.common.model.Modifier modifier)",
    "name": "removeModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Modifier",
      "name": "Modifier",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Modifier",
          "name": "Modifier",
          "isArray": false
        },
        "name": "modifier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Modifier",
            "name": "Modifier",
            "isArray": false
          },
          "name": "modifier"
        },
        "comment": "An Modifier to remove.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The modifier removed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeModifiers(java.lang.String id)",
    "name": "removeModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addFeatures(net.sf.freecol.common.model.FreeColObject fco)",
    "name": "addFeatures",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "fco"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "fco"
        },
        "comment": "The FreeColObject to add features from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeFeatures(net.sf.freecol.common.model.FreeColObject fco)",
    "name": "removeFeatures",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "fco"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "fco"
        },
        "comment": "The FreeColObject to find features to remove in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDefenceModifiers()",
    "name": "getDefenceModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A set of defence Modifiers.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXMLElement(org.w3c.dom.Document document)",
    "name": "toXMLElement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.w3c.dom.Element",
      "name": "Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Document",
          "name": "Document",
          "isArray": false
        },
        "name": "document"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Document",
            "name": "Document",
            "isArray": false
          },
          "name": "document"
        },
        "comment": "The Document.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXMLElement(org.w3c.dom.Document document,net.sf.freecol.common.model.Player player)",
    "name": "toXMLElement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.w3c.dom.Element",
      "name": "Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Document",
          "name": "Document",
          "isArray": false
        },
        "name": "document"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Document",
            "name": "Document",
            "isArray": false
          },
          "name": "document"
        },
        "comment": "The Document.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXMLElement(org.w3c.dom.Document document,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope writeScope)",
    "name": "toXMLElement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.w3c.dom.Element",
      "name": "Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Document",
          "name": "Document",
          "isArray": false
        },
        "name": "document"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
          "name": "WriteScope",
          "isArray": false
        },
        "name": "writeScope"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Document",
            "name": "Document",
            "isArray": false
          },
          "name": "document"
        },
        "comment": "The Document.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
            "name": "WriteScope",
            "isArray": false
          },
          "name": "writeScope"
        },
        "comment": "The WriteScope to apply.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXMLElementPartial(org.w3c.dom.Document document,java.lang.String[] fields)",
    "name": "toXMLElementPartial",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.w3c.dom.Element",
      "name": "Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Document",
          "name": "Document",
          "isArray": false
        },
        "name": "document"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "fields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Document",
            "name": "Document",
            "isArray": false
          },
          "name": "document"
        },
        "comment": "The Document.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "fields"
        },
        "comment": "The fields to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An XML-representation of this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "readId(org.w3c.dom.Element element)",
    "name": "readId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "element"
        },
        "comment": "An element to read the id attribute from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The identifier attribute value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "readFromXMLElement(org.w3c.dom.Element element)",
    "name": "readFromXMLElement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "element"
        },
        "comment": "An XML-element that will be used to initialize this object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "dumpObject()",
    "name": "dumpObject",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "dumpCollection(java.util.Collection items)",
    "name": "dumpCollection",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "items"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "save(java.io.File file)",
    "name": "save",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The File to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.FileNotFoundException",
          "name": "FileNotFoundException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "save(java.io.File file,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope)",
    "name": "save",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
          "name": "WriteScope",
          "isArray": false
        },
        "name": "scope"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The File to write to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
            "name": "WriteScope",
            "isArray": false
          },
          "name": "scope"
        },
        "comment": "The WriteScope to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.FileNotFoundException",
          "name": "FileNotFoundException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "save(java.io.File file,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope,boolean pretty)",
    "name": "save",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
          "name": "WriteScope",
          "isArray": false
        },
        "name": "scope"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "pretty"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The File to write to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
            "name": "WriteScope",
            "isArray": false
          },
          "name": "scope"
        },
        "comment": "The WriteScope to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "pretty"
        },
        "comment": "Attempt to indent the output nicely.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.FileNotFoundException",
          "name": "FileNotFoundException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "save(java.io.OutputStream out,net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope,boolean pretty)",
    "name": "save",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
          "name": "WriteScope",
          "isArray": false
        },
        "name": "scope"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "pretty"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "The OutputStream to write to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
            "name": "WriteScope",
            "isArray": false
          },
          "name": "scope"
        },
        "comment": "The WriteScope to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "pretty"
        },
        "comment": "Attempt to indent the output nicely.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the save proceeded without error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "serialize(net.sf.freecol.common.io.FreeColXMLWriter.WriteScope scope)",
    "name": "serialize",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
          "name": "WriteScope",
          "isArray": false
        },
        "name": "scope"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter.WriteScope",
            "name": "WriteScope",
            "isArray": false
          },
          "name": "scope"
        },
        "comment": "The write scope to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The serialized object, or null if the stream could not be created.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "serialize()",
    "name": "serialize",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The serialized object, or null if the stream could not be created.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "copy(net.sf.freecol.common.model.Game game,java.lang.Class returnClass)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "returnClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game to add the object to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "returnClass"
        },
        "comment": "The required object class.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The copied object, or null on error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "toXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw,java.lang.String tag)",
    "name": "toXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "The tag to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toXMLPartial(net.sf.freecol.common.io.FreeColXMLWriter xw,java.lang.String[] fields)",
    "name": "toXMLPartial",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "fields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "fields"
        },
        "comment": "The fields to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readFromXML(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readFromXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The input stream with the XML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readFromXMLPartial(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readFromXMLPartial",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The input stream with the XML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The tag name for this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
      "name": "FreeColObject",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FreeColObject",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]