[
  {
    "signature": "AbstractGoods()",
    "name": "AbstractGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "AbstractGoods(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "AbstractGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to create.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods to create.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "AbstractGoods(net.sf.freecol.common.model.AbstractGoods other)",
    "name": "AbstractGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "Another AbstractGoods to copy.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The GoodsType.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setType(net.sf.freecol.common.model.GoodsType newType)",
    "name": "setType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "newType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "newType"
        },
        "comment": "The new GoodsType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getAmount()",
    "name": "getAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The goods amount.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "setAmount(int newAmount)",
    "name": "setAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newAmount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newAmount"
        },
        "comment": "The new goods amount.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLabel()",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The label for these goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLabel(boolean sellable)",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "sellable"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "sellable"
        },
        "comment": "Whether these goods can be sold.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A label for these goods.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getLabel())"
    },
    "throwsTags": []
  },
  {
    "signature": "getLabel(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods label.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLabel(java.lang.String key,int amount)",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "A key for the goods to display.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods label.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findByType(net.sf.freecol.common.model.GoodsType type,java.util.Collection goods)",
    "name": "findByType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to look for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The collection of AbstractGoods to look in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The AbstractGoods found, or null if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCount(net.sf.freecol.common.model.GoodsType type,java.util.Collection goods)",
    "name": "getCount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to look for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The collection of AbstractGoods to look in.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The goods count found, or zero if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "containsType(net.sf.freecol.common.model.GoodsType type,java.util.Collection goods)",
    "name": "containsType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods collection to search.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to search for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the goods type was found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "evaluateFor(net.sf.freecol.common.model.Player player)",
    "name": "evaluateFor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to evaluate for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A value for the goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNameKey()",
    "name": "getNameKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString(net.sf.freecol.common.model.AbstractGoods ag)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "ag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "ag"
        },
        "comment": "The AbstractGoods to make a string from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A string version of the goods.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.toString())"
    },
    "throwsTags": []
  },
  {
    "signature": "toString(net.sf.freecol.common.model.GoodsType goodsType,int amount)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A string version of the goods.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.toString())"
    },
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.AbstractGoods",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"abstractGoods\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]