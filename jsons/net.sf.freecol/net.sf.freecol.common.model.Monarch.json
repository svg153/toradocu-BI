[
  {
    "signature": "Monarch(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Player player)",
    "name": "Monarch",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to create the Monarch for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Monarch(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "Monarch",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getExpeditionaryForce()",
    "name": "getExpeditionaryForce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch.Force",
      "name": "Force",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The REF Force.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getInterventionForce()",
    "name": "getInterventionForce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch.Force",
      "name": "Force",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The intervention Force.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMercenaryForce()",
    "name": "getMercenaryForce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch.Force",
      "name": "Force",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The mercenary Force.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWarSupportForce()",
    "name": "getWarSupportForce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch.Force",
      "name": "Force",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The war support Force.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSupportSea()",
    "name": "getSupportSea",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Gets the sea support status.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setSupportSea(boolean supportSea)",
    "name": "setSupportSea",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "supportSea"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "supportSea"
        },
        "comment": "The new sea support status.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDispleasure()",
    "name": "getDispleasure",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Gets the displeasure status.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDispleasure(boolean displeasure)",
    "name": "setDispleasure",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "displeasure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "displeasure"
        },
        "comment": "The new displeasure status.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "collectPotentialEnemies()",
    "name": "collectPotentialEnemies",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of potential enemy Players.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "collectPotentialFriends()",
    "name": "collectPotentialFriends",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of potential friendly Players.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "actionIsValid(net.sf.freecol.common.model.Monarch.MonarchAction action)",
    "name": "actionIsValid",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Monarch.MonarchAction",
          "name": "MonarchAction",
          "isArray": false
        },
        "name": "action"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Monarch.MonarchAction",
            "name": "MonarchAction",
            "isArray": false
          },
          "name": "action"
        },
        "comment": "The MonarchAction to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the action is valid.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getActionChoices()",
    "name": "getActionChoices",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A weighted list of monarch actions.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "raiseTax(java.util.Random random)",
    "name": "raiseTax",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "The Random number source to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The new tax rate.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lowerTax(java.util.Random random)",
    "name": "lowerTax",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "The Random number source to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The new tax rate.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNavalREFUnitType()",
    "name": "getNavalREFUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A naval REF unit type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "chooseForREF(java.util.Random random)",
    "name": "chooseForREF",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractUnit",
      "name": "AbstractUnit",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "The Random number source to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An addition to the Royal Expeditionary Force.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateInterventionForce()",
    "name": "updateInterventionForce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSupport(java.util.Random random,boolean naval)",
    "name": "getSupport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "naval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "The Random number source to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "naval"
        },
        "comment": "If the addition should be a naval unit.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An addition to the colonial forces.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWarSupport(net.sf.freecol.common.model.Player enemy,java.util.Random random)",
    "name": "getWarSupport",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "enemy"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "enemy"
        },
        "comment": "The enemy Player.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of AbstractUnits provided as support.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMercenaries(java.util.Random random)",
    "name": "getMercenaries",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "The Random number source to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A troop of mercenaries.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNameKey()",
    "name": "getNameKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkIntegrity(boolean fix)",
    "name": "checkIntegrity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fix"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Monarch",
      "name": "Monarch",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Monarch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"monarch\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]