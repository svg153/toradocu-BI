[
  {
    "signature": "IndianSettlement(net.sf.freecol.common.model.Game game,net.sf.freecol.common.model.Player owner,java.lang.String name,net.sf.freecol.common.model.Tile tile)",
    "name": "IndianSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "owner"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tile",
          "name": "Tile",
          "isArray": false
        },
        "name": "tile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The enclosing Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "owner"
        },
        "comment": "The Player owning this settlement.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "The name for this settlement.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tile",
            "name": "Tile",
            "isArray": false
          },
          "name": "tile"
        },
        "comment": "The containing Tile.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "IndianSettlement(net.sf.freecol.common.model.Game game,java.lang.String id)",
    "name": "IndianSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The Game in which this object belong.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addOwnedUnit(net.sf.freecol.common.model.Unit unit)",
    "name": "addOwnedUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to be added.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOwnedUnits()",
    "name": "getOwnedUnits",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The list of units native to this settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOwnedUnitsIterator()",
    "name": "getOwnedUnitsIterator",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "removeOwnedUnit(net.sf.freecol.common.model.Unit unit)",
    "name": "removeOwnedUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit to be removed from the list of the units this IndianSettlement owns.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a boolean value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLastTribute()",
    "name": "getLastTribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The year of the last tribute.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLastTribute(int lastTribute)",
    "name": "setLastTribute",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lastTribute"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "lastTribute"
        },
        "comment": "The new last tribute year.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLearnableSkill()",
    "name": "getLearnableSkill",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The skill that can be learned at this settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLearnableSkill(net.sf.freecol.common.model.UnitType skill)",
    "name": "setLearnableSkill",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.UnitType",
          "name": "UnitType",
          "isArray": false
        },
        "name": "skill"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.UnitType",
            "name": "UnitType",
            "isArray": false
          },
          "name": "skill"
        },
        "comment": "The new learnable skill for this Indian settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getLearnableSkillLabel(boolean visited)",
    "name": "getLearnableSkillLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "visited"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "visited"
        },
        "comment": "The visiting status.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A StringTemplate describing the perceived skill.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMissionary()",
    "name": "getMissionary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "Unit",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The missionary at this settlement, or null if there is none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasMissionary()",
    "name": "hasMissionary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if there is a missionary at this settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasMissionary(net.sf.freecol.common.model.Player player)",
    "name": "hasMissionary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if there is a suitable missionary present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMissionary(net.sf.freecol.common.model.Unit missionary)",
    "name": "setMissionary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "missionary"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "missionary"
        },
        "comment": "The missionary for this settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMissionaryLineOfSight()",
    "name": "getMissionaryLineOfSight",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The missionary line of sight.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConvertProgress()",
    "name": "getConvertProgress",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The convert progress status.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setConvertProgress(int progress)",
    "name": "setConvertProgress",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "progress"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "progress"
        },
        "comment": "The new convert progress status.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getWantedGoods()",
    "name": "getWantedGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType[]",
      "name": "GoodsType[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "net.sf.freecol.common.model.GoodsType",
        "name": "GoodsType",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The wanted goods list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setWantedGoods(net.sf.freecol.common.model.GoodsType[] wantedGoods)",
    "name": "setWantedGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType[]",
          "name": "GoodsType[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          }
        },
        "name": "wantedGoods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType[]",
            "name": "GoodsType[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "net.sf.freecol.common.model.GoodsType",
              "name": "GoodsType",
              "isArray": false
            }
          },
          "name": "wantedGoods"
        },
        "comment": "a GoodsType value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setWantedGoods(int index,net.sf.freecol.common.model.GoodsType type)",
    "name": "setWantedGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "Which of the (usually 3) goods to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType wanted.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getWantedGoodsAmount()",
    "name": "getWantedGoodsAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The number of wanted goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWantedGoodsLabel(int index,net.sf.freecol.common.model.Player player)",
    "name": "getWantedGoodsLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "The index into the wanted goods.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The requesting Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A suitable StringTemplate.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMostHated()",
    "name": "getMostHated",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Player",
      "name": "Player",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The most hated nation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMostHated(net.sf.freecol.common.model.Player mostHated)",
    "name": "setMostHated",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "mostHated"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "mostHated"
        },
        "comment": "The new most hated nation.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMostHatedLabel(boolean contacted)",
    "name": "getMostHatedLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "contacted"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "contacted"
        },
        "comment": "The contact status.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A StringTemplate describing the perceived most hated nation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getContactLevel(net.sf.freecol.common.model.Player player)",
    "name": "getContactLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement.ContactLevel",
      "name": "ContactLevel",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The contact level.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setContacted(net.sf.freecol.common.model.Player player)",
    "name": "setContacted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player making contact.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this was indeed the first contact between settlement and player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasVisited(net.sf.freecol.common.model.Player player)",
    "name": "hasVisited",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the player has contacted this settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setVisited(net.sf.freecol.common.model.Player player)",
    "name": "setVisited",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The visiting Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this was the first time the settlement was visited by the player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasScouted(net.sf.freecol.common.model.Player player)",
    "name": "hasScouted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the player has visited this settlement to speak with the chief.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setScouted(net.sf.freecol.common.model.Player player)",
    "name": "setScouted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The visiting Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this was the first time the settlement was scouted by the player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasAnyScouted()",
    "name": "hasAnyScouted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if any European player has spoken with the chief.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "worthScouting(net.sf.freecol.common.model.Player player)",
    "name": "worthScouting",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player contemplating scouting.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Whether it might be worth the player scouting this settlement.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAlarm(net.sf.freecol.common.model.Player player)",
    "name": "getAlarm",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Tension",
      "name": "Tension",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to get the alarm level for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The current alarm level or null if the settlement has not encoutered the player.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setAlarm(net.sf.freecol.common.model.Player player,net.sf.freecol.common.model.Tension newAlarm)",
    "name": "setAlarm",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Tension",
          "name": "Tension",
          "isArray": false
        },
        "name": "newAlarm"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to set the alarm level for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Tension",
            "name": "Tension",
            "isArray": false
          },
          "name": "newAlarm"
        },
        "comment": "The new alarm value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "initializeAlarm(net.sf.freecol.common.model.Player player)",
    "name": "initializeAlarm",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to set the alarm level for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getAlarmLevelKey(net.sf.freecol.common.model.Player player)",
    "name": "getAlarmLevelKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The other Player.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The alarm message key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "allowContact(net.sf.freecol.common.model.Unit unit)",
    "name": "allowContact",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that proposes to contact this settlement.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the settlement accepts such contact.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPriceToBuy(net.sf.freecol.common.model.Goods goods)",
    "name": "getPriceToBuy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to price.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPriceToBuy(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "getPriceToBuy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type of Goods to price.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of Goods to price.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWantedGoodsAmount(net.sf.freecol.common.model.GoodsType type)",
    "name": "getWantedGoodsAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The amount of goods wanted.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPriceToSell(net.sf.freecol.common.model.Goods goods)",
    "name": "getPriceToSell",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods to price.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPriceToSell(net.sf.freecol.common.model.GoodsType type,int amount)",
    "name": "getPriceToSell",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type of Goods to price.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of Goods to price.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "willSell(net.sf.freecol.common.model.GoodsType type)",
    "name": "willSell",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The GoodsType to consider.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the settlement would sell the goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSellGoods(int limit,net.sf.freecol.common.model.Unit unit)",
    "name": "getSellGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "limit"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "unit"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "limit"
        },
        "comment": "The maximum number of goods required.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Unit",
            "name": "Unit",
            "isArray": false
          },
          "name": "unit"
        },
        "comment": "The Unit that is trading.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of goods to sell.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "tradeGoodsWithSettlement(net.sf.freecol.common.model.IndianSettlement settlement)",
    "name": "tradeGoodsWithSettlement",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
          "name": "IndianSettlement",
          "isArray": false
        },
        "name": "settlement"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
            "name": "IndianSettlement",
            "isArray": false
          },
          "name": "settlement"
        },
        "comment": "The other IndianSettlement to trade with.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getMaximumProduction(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getMaximumProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The type of goods to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The maximum amount, of the given type of goods, that can be produced in one turn.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateWantedGoods()",
    "name": "updateWantedGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRandomGift(java.util.Random random)",
    "name": "getRandomGift",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A random goods gift, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addRandomGoods(java.util.Random random)",
    "name": "addRandomGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRequiredDefenders()",
    "name": "getRequiredDefenders",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The required defender number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "disposeResources()",
    "name": "disposeResources",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLocationLabelFor(net.sf.freecol.common.model.Player player)",
    "name": "getLocationLabelFor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "add(net.sf.freecol.common.model.Locatable locatable)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Locatable",
          "name": "Locatable",
          "isArray": false
        },
        "name": "locatable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "up()",
    "name": "up",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Location",
      "name": "Location",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toShortString()",
    "name": "toShortString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGoodsCapacity()",
    "name": "getGoodsCapacity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getImageKey()",
    "name": "getImageKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDefendingUnit(net.sf.freecol.common.model.Unit attacker)",
    "name": "getDefendingUnit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Unit",
      "name": "Unit",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "attacker"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDefenceRatio()",
    "name": "getDefenceRatio",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isBadlyDefended()",
    "name": "isBadlyDefended",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPlunderRange(net.sf.freecol.common.model.Unit attacker)",
    "name": "getPlunderRange",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.RandomRange",
      "name": "RandomRange",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Unit",
          "name": "Unit",
          "isArray": false
        },
        "name": "attacker"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSoL()",
    "name": "getSoL",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getUpkeep()",
    "name": "getUpkeep",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTotalProductionOf(net.sf.freecol.common.model.GoodsType type)",
    "name": "getTotalProductionOf",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasContacted(net.sf.freecol.common.model.Player player)",
    "name": "hasContacted",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAlarmLevelLabel(net.sf.freecol.common.model.Player player)",
    "name": "getAlarmLevelLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getExportAmount(net.sf.freecol.common.model.GoodsType goodsType,int turns)",
    "name": "getExportAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "turns"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getImportAmount(net.sf.freecol.common.model.GoodsType goodsType,int turns)",
    "name": "getImportAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "turns"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "checkIntegrity(boolean fix)",
    "name": "checkIntegrity",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fix"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.IndianSettlement",
      "name": "IndianSettlement",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.IndianSettlement",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"indianSettlement\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]