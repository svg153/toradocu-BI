[
  {
    "signature": "FoundingFather(java.lang.String id,net.sf.freecol.common.model.Specification specification)",
    "name": "FoundingFather",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather.FoundingFatherType",
      "name": "FoundingFatherType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The type of this FoundingFather.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getIdType())"
    },
    "throwsTags": []
  },
  {
    "signature": "setType(net.sf.freecol.common.model.FoundingFather.FoundingFatherType type)",
    "name": "setType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FoundingFather.FoundingFatherType",
          "name": "FoundingFatherType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FoundingFather.FoundingFatherType",
            "name": "FoundingFatherType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "A new FoundingFatherType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getTypeKey()",
    "name": "getTypeKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A type key.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getType())"
    },
    "throwsTags": []
  },
  {
    "signature": "getTypeKey(net.sf.freecol.common.model.FoundingFather.FoundingFatherType type)",
    "name": "getTypeKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FoundingFather.FoundingFatherType",
          "name": "FoundingFatherType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FoundingFather.FoundingFatherType",
            "name": "FoundingFatherType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The FoundingFatherType to make a key for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The message key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWeight(int age)",
    "name": "getWeight",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "age"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "age"
        },
        "comment": "The age ([0, 2])",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The weight of this father in the given age.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEvents()",
    "name": "getEvents",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of Events.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setEvents(java.util.List newEvents)",
    "name": "setEvents",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newEvents"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "newEvents"
        },
        "comment": "The new events.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getScopes()",
    "name": "getScopes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of Scopes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setScopes(java.util.List newScopes)",
    "name": "setScopes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newScopes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "newScopes"
        },
        "comment": "The new scopes.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getUpgrades()",
    "name": "getUpgrades",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A map of old to new UnitTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUpgrades(java.util.Map newUpgrades)",
    "name": "setUpgrades",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "newUpgrades"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "newUpgrades"
        },
        "comment": "The new upgrades map.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getUnits()",
    "name": "getUnits",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of AbstractUnits.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUnits(java.util.List newUnits)",
    "name": "setUnits",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newUnits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "newUnits"
        },
        "comment": "The new units.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isAvailableTo(net.sf.freecol.common.model.Player player)",
    "name": "isAvailableTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the father is available.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.FoundingFather",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"founding-father\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]