[
  {
    "signature": "Specification()",
    "name": "Specification",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "Specification(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "Specification",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "Specification(java.io.InputStream in)",
    "name": "Specification",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "in"
        },
        "comment": "The InputStream to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "prepare(net.sf.freecol.common.model.NationOptions.Advantages advantages,java.lang.String difficulty)",
    "name": "prepare",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationOptions.Advantages",
          "name": "Advantages",
          "isArray": false
        },
        "name": "advantages"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "difficulty"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationOptions.Advantages",
            "name": "Advantages",
            "isArray": false
          },
          "name": "advantages"
        },
        "comment": "An optional Advantages setting.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "difficulty"
        },
        "comment": "An optional identifier for the difficulty level.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "prepare(net.sf.freecol.common.model.NationOptions.Advantages advantages,net.sf.freecol.common.option.OptionGroup difficulty)",
    "name": "prepare",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationOptions.Advantages",
          "name": "Advantages",
          "isArray": false
        },
        "name": "advantages"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "difficulty"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationOptions.Advantages",
            "name": "Advantages",
            "isArray": false
          },
          "name": "advantages"
        },
        "comment": "An optional Advantages setting.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "difficulty"
        },
        "comment": "An optional difficulty level OptionGroup.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "loadMods(java.util.List mods)",
    "name": "loadMods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "mods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "mods"
        },
        "comment": "A list of FreeColModFiles for the active mods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if any mod was loaded.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "loadOptionsFile(java.lang.String optionId,java.io.File file)",
    "name": "loadOptionsFile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "optionId"
      },
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "optionId"
        },
        "comment": "The root identifier of an option group expected to be found in the file.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The File to load from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The OptionGroup found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "mergeGroup(net.sf.freecol.common.option.OptionGroup group)",
    "name": "mergeGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "group"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "group"
        },
        "comment": "The OptionGroup to merge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The merged OptionGroup from this Specification.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "saveOptionsFile(net.sf.freecol.common.option.OptionGroup group,java.io.File file)",
    "name": "saveOptionsFile",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "group"
      },
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "group"
        },
        "comment": "The OptionGroup to save.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "The File to save to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The OptionGroup saved, or null on error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clean(java.lang.String why)",
    "name": "clean",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "why"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "why"
        },
        "comment": "A short statement of why the specification needed to be cleaned.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "disableEditing()",
    "name": "disableEditing",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "generateDynamicOptions()",
    "name": "generateDynamicOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getId()",
    "name": "getId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The specification identifier.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getVersion()",
    "name": "getVersion",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The specification version.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addAbility(net.sf.freecol.common.model.Ability ability)",
    "name": "addAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Ability",
          "name": "Ability",
          "isArray": false
        },
        "name": "ability"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Ability",
            "name": "Ability",
            "isArray": false
          },
          "name": "ability"
        },
        "comment": "an Ability value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addAbility(java.lang.String id)",
    "name": "addAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getAbilities(java.lang.String id)",
    "name": "getAbilities",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier to look for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addModifier(net.sf.freecol.common.model.Modifier modifier)",
    "name": "addModifier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Modifier",
          "name": "Modifier",
          "isArray": false
        },
        "name": "modifier"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Modifier",
            "name": "Modifier",
            "isArray": false
          },
          "name": "modifier"
        },
        "comment": "The Modifier to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getModifiers(java.lang.String id)",
    "name": "getModifiers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier to look for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "hasOption(java.lang.String id)",
    "name": "hasOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True/false on presence of option id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOption(java.lang.String id)",
    "name": "getOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.AbstractOption",
      "name": "AbstractOption",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The AbstractOption found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the identifier is null or not present.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getOptionGroup(java.lang.String id)",
    "name": "getOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The OptionGroup found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the identifier is null or not present.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addOptionGroup(net.sf.freecol.common.option.OptionGroup optionGroup,boolean recursive)",
    "name": "addOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "optionGroup"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "recursive"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "optionGroup"
        },
        "comment": "The OptionGroup to add.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "recursive"
        },
        "comment": "If true, add recursively to subgroups.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getIntegerOption(java.lang.String id)",
    "name": "getIntegerOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.IntegerOption",
      "name": "IntegerOption",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The IntegerOption found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRangeOption(java.lang.String id)",
    "name": "getRangeOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.RangeOption",
      "name": "RangeOption",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The RangeOption found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBooleanOption(java.lang.String id)",
    "name": "getBooleanOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.BooleanOption",
      "name": "BooleanOption",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The BooleanOption found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStringOption(java.lang.String id)",
    "name": "getStringOption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.StringOption",
      "name": "StringOption",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The StringOption found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBoolean(java.lang.String id)",
    "name": "getBoolean",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no boolean value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getInteger(java.lang.String id)",
    "name": "getInteger",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no integer value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getString(java.lang.String id)",
    "name": "getString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "If there is no string value associated with the specified option.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "Option"
        ],
        "comment": "if the given Option does not exist.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getBuildingTypeList()",
    "name": "getBuildingTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBuildingType(java.lang.String id)",
    "name": "getBuildingType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.BuildingType",
      "name": "BuildingType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The BuildingType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsTypeList()",
    "name": "getGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getStorableGoodsTypeList()",
    "name": "getStorableGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFarmedGoodsTypeList()",
    "name": "getFarmedGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNewWorldGoodsTypeList()",
    "name": "getNewWorldGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNewWorldLuxuryGoodsTypeList()",
    "name": "getNewWorldLuxuryGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLibertyGoodsTypeList()",
    "name": "getLibertyGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getImmigrationGoodsTypeList()",
    "name": "getImmigrationGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFoodGoodsTypeList()",
    "name": "getFoodGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRawBuildingGoodsTypeList()",
    "name": "getRawBuildingGoodsTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPrimaryFoodType()",
    "name": "getPrimaryFoodType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The main food type (\"model.goods.food\").",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInitialPrice(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getInitialPrice",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The minimum price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getGoodsType(java.lang.String id)",
    "name": "getGoodsType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The GoodsType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getResourceTypeList()",
    "name": "getResourceTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getResourceType(java.lang.String id)",
    "name": "getResourceType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.ResourceType",
      "name": "ResourceType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The ResourceType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTileTypeList()",
    "name": "getTileTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTileType(java.lang.String id)",
    "name": "getTileType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The TileType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTileImprovementTypeList()",
    "name": "getTileImprovementTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTileImprovementType(java.lang.String id)",
    "name": "getTileImprovementType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileImprovementType",
      "name": "TileImprovementType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The TileImprovementType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitTypeList()",
    "name": "getUnitTypeList",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDefaultUnitType(net.sf.freecol.common.model.Player player)",
    "name": "getDefaultUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Player",
          "name": "Player",
          "isArray": false
        },
        "name": "player"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Player",
            "name": "Player",
            "isArray": false
          },
          "name": "player"
        },
        "comment": "The Player to find the default unit type for, or null indicating a normal player nation (i.e. non-REF European).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The default unit type.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getDefaultUnitType())"
    },
    "throwsTags": []
  },
  {
    "signature": "getDefaultUnitType(net.sf.freecol.common.model.NationType nationType)",
    "name": "getDefaultUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationType",
          "name": "NationType",
          "isArray": false
        },
        "name": "nationType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationType",
            "name": "NationType",
            "isArray": false
          },
          "name": "nationType"
        },
        "comment": "The NationType to find the default unit type for, or null indicating a normal player nation (i.e. non-REF European).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The free colonist unit type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDefaultUnitType()",
    "name": "getDefaultUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The default unit type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBuildableUnitTypes()",
    "name": "getBuildableUnitTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The list of buildable unit types.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getExpertForProducing(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getExpertForProducing",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The expert UnitType, or null if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitTypesWithAbility(java.lang.String[] abilities)",
    "name": "getUnitTypesWithAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "abilities"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "abilities"
        },
        "comment": "The abilities for the search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of UnitTypes with the abilities.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitTypesWithoutAbility(java.lang.String[] abilities)",
    "name": "getUnitTypesWithoutAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "abilities"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "abilities"
        },
        "comment": "The abilities for the search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of UnitTypes without the abilities.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitTypesTrainedInEurope()",
    "name": "getUnitTypesTrainedInEurope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of Europe-trainable UnitTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnitTypesPurchasedInEurope()",
    "name": "getUnitTypesPurchasedInEurope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of Europe-purchasable UnitTypes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFastestLandUnitType()",
    "name": "getFastestLandUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The fastest land unit type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFastestNavalUnitType()",
    "name": "getFastestNavalUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The fastest naval unit type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getREFUnitTypes(boolean naval)",
    "name": "getREFUnitTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "naval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "naval"
        },
        "comment": "If true, choose naval units, if not, land units.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getUnitType(java.lang.String id)",
    "name": "getUnitType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.UnitType",
      "name": "UnitType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The UnitType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFoundingFathers()",
    "name": "getFoundingFathers",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFoundingFather(java.lang.String id)",
    "name": "getFoundingFather",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FoundingFather",
      "name": "FoundingFather",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FoundingFather found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNationTypes()",
    "name": "getNationTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEuropeanNationTypes()",
    "name": "getEuropeanNationTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getREFNationTypes()",
    "name": "getREFNationTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIndianNationTypes()",
    "name": "getIndianNationTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNationType(java.lang.String id)",
    "name": "getNationType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.NationType",
      "name": "NationType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The NationType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDefaultNationType()",
    "name": "getDefaultNationType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.NationType",
      "name": "NationType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNations()",
    "name": "getNations",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEuropeanNations()",
    "name": "getEuropeanNations",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIndianNations()",
    "name": "getIndianNations",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getREFNations()",
    "name": "getREFNations",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNation(java.lang.String id)",
    "name": "getNation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Nation found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clearEuropeanNationalAdvantages()",
    "name": "clearEuropeanNationalAdvantages",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRoles()",
    "name": "getRoles",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRole(java.lang.String id)",
    "name": "getRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Role found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDefaultRole()",
    "name": "getDefaultRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The default Role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMilitaryRoles()",
    "name": "getMilitaryRoles",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "An unmodifiable list of military Roles.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRoleWithAbility(java.lang.String id,java.util.List roles)",
    "name": "getRoleWithAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "roles"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The ability identifier to look for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "roles"
        },
        "comment": "An optional list of Roles to look in, if null all roles are used.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The first Role found with the required ability, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMissionaryRole()",
    "name": "getMissionaryRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The missionary Role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPioneerRole()",
    "name": "getPioneerRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The pioneer Role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getScoutRole()",
    "name": "getScoutRole",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Role",
      "name": "Role",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The scout Role.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getREFRoles(boolean naval)",
    "name": "getREFRoles",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "naval"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "naval"
        },
        "comment": "If true, choose roles for naval units, if not, land units.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getEquipmentType(java.lang.String id)",
    "name": "getEquipmentType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.EquipmentType",
      "name": "EquipmentType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The EquipmentType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDifficultyLevels()",
    "name": "getDifficultyLevels",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of difficulty levels in this specification.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDifficultyLevel()",
    "name": "getDifficultyLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The difficulty level.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getDifficultyLevels())"
    },
    "throwsTags": []
  },
  {
    "signature": "getDifficultyOptionGroup()",
    "name": "getDifficultyOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The current difficulty level OptionGroup.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDifficultyOptionGroup(java.lang.String id)",
    "name": "getDifficultyOptionGroup",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The id to look for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The corresponding difficulty level OptionGroup, if any.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "applyDifficultyLevel(java.lang.String difficulty)",
    "name": "applyDifficultyLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "difficulty"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "difficulty"
        },
        "comment": "The identifier of a difficulty level to apply.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "applyDifficultyLevel(net.sf.freecol.common.option.OptionGroup level)",
    "name": "applyDifficultyLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
            "name": "OptionGroup",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The difficulty level OptionGroup to apply.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getGameOptions()",
    "name": "getGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setGameOptions(net.sf.freecol.common.option.OptionGroup go)",
    "name": "setGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "go"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMapGeneratorOptions()",
    "name": "getMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
      "name": "OptionGroup",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMapGeneratorOptions(net.sf.freecol.common.option.OptionGroup mgo)",
    "name": "setMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.option.OptionGroup",
          "name": "OptionGroup",
          "isArray": false
        },
        "name": "mgo"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEvents()",
    "name": "getEvents",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEvent(java.lang.String id)",
    "name": "getEvent",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Event",
      "name": "Event",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Event found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDisasters()",
    "name": "getDisasters",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDisaster(java.lang.String id)",
    "name": "getDisaster",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Disaster",
      "name": "Disaster",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The Disaster found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAge(net.sf.freecol.common.model.Turn turn)",
    "name": "getAge",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Turn",
          "name": "Turn",
          "isArray": false
        },
        "name": "turn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Turn",
            "name": "Turn",
            "isArray": false
          },
          "name": "turn"
        },
        "comment": "The Turn to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The age of the given turn.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getType(java.lang.String id,java.lang.Class type)",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier to look for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The expected Class.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The FreeColGameObjectType found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "findType(java.lang.String id)",
    "name": "findType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.FreeColGameObjectType",
      "name": "FreeColGameObjectType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The identifier to look for, which must not be null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "The FreeColGameObjectType found if any.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTypesProviding(java.lang.String id,boolean value)",
    "name": "getTypesProviding",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "The ability value to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of FreeColGameObjectTypes that provide the required ability.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTypesWithAbility(java.lang.Class resultType,java.lang.String[] abilities)",
    "name": "getTypesWithAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "resultType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "abilities"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "abilities"
        },
        "comment": "The abilities for the search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of FreeColGameObjectTypes with at least one of the given abilities.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTypesWithoutAbility(java.lang.Class resultType,java.lang.String[] abilities)",
    "name": "getTypesWithoutAbility",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "resultType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "abilities"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "abilities"
        },
        "comment": "The abilities for the search",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A list of FreeColGameObjectTypes without the given abilities.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fixGameOptions()",
    "name": "fixGameOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if an option was missing and added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fixMapGeneratorOptions()",
    "name": "fixMapGeneratorOptions",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if an option was missing and added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "toXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readFromXML(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readFromXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Specification",
      "name": "Specification",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Specification",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"freecol-specification\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]