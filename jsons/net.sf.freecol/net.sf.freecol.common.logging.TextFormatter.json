[
  {
    "signature": "TextFormatter()",
    "name": "TextFormatter",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.logging.TextFormatter",
      "name": "TextFormatter",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.logging.TextFormatter",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "format(java.util.logging.LogRecord record)",
    "name": "format",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.logging.TextFormatter",
      "name": "TextFormatter",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.logging.TextFormatter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.logging.LogRecord",
          "name": "LogRecord",
          "isArray": false
        },
        "name": "record"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.logging.LogRecord",
            "name": "LogRecord",
            "isArray": false
          },
          "name": "record"
        },
        "comment": "The log record whose data needs to be formatted.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The log record's data as a string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]