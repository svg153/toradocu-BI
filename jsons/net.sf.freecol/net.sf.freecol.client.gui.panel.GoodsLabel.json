[
  {
    "signature": "GoodsLabel(net.sf.freecol.client.gui.GUI gui,net.sf.freecol.common.model.Goods goods)",
    "name": "GoodsLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.GoodsLabel",
      "name": "GoodsLabel",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.panel.GoodsLabel",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.client.gui.GUI",
          "name": "GUI",
          "isArray": false
        },
        "name": "gui"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Goods",
          "name": "Goods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Goods",
            "name": "Goods",
            "isArray": false
          },
          "name": "goods"
        },
        "comment": "The Goods that this JLabel will visually represent.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getColor(net.sf.freecol.common.model.GoodsType goodsType,int amount,net.sf.freecol.common.model.Location location)",
    "name": "getColor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.GoodsLabel",
      "name": "GoodsLabel",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.panel.GoodsLabel",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Color",
      "name": "Color",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Location",
          "name": "Location",
          "isArray": false
        },
        "name": "location"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Location",
            "name": "Location",
            "isArray": false
          },
          "name": "location"
        },
        "comment": "The Location for the goods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A suitable color.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getX())"
    },
    "throwsTags": []
  },
  {
    "signature": "getGoods()",
    "name": "getGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.GoodsLabel",
      "name": "GoodsLabel",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.panel.GoodsLabel",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Goods",
      "name": "Goods",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The Goods we have labelled.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setPartialChosen(boolean partialChosen)",
    "name": "setPartialChosen",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.GoodsLabel",
      "name": "GoodsLabel",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.panel.GoodsLabel",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "partialChosen"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "partialChosen"
        },
        "comment": "The new partial choice.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isOnCarrier()",
    "name": "isOnCarrier",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.client.gui.panel.GoodsLabel",
      "name": "GoodsLabel",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.client.gui.panel.GoodsLabel",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]