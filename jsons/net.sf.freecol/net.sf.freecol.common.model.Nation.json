[
  {
    "signature": "Nation(java.lang.String id,net.sf.freecol.common.model.Specification specification)",
    "name": "Nation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isUnknownEnemy()",
    "name": "isUnknownEnemy",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is the unknown enemy.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.NationType",
      "name": "NationType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The nation type.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "setType(net.sf.freecol.common.model.NationType type)",
    "name": "setType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.NationType",
          "name": "NationType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.NationType",
            "name": "NationType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The new NationType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isSelectable()",
    "name": "isSelectable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the nation is selectable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getREFNation()",
    "name": "getREFNation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The REF Nation, or null if not applicable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRebelNation()",
    "name": "getRebelNation",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The rebel Nation, or null if not applicable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPreferredLatitude()",
    "name": "getPreferredLatitude",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The preferred latitude.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "startsOnEastCoast()",
    "name": "startsOnEastCoast",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if the nation starts on the east coast.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRulerNameKey()",
    "name": "getRulerNameKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The name key for the ruler.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.getNameKey())"
    },
    "throwsTags": []
  },
  {
    "signature": "getRulerName()",
    "name": "getRulerName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The ruler name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getColor()",
    "name": "getColor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Color",
      "name": "Color",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The color for this nation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setColor(java.awt.Color color)",
    "name": "setColor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.awt.Color",
          "name": "Color",
          "isArray": false
        },
        "name": "color"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.awt.Color",
            "name": "Color",
            "isArray": false
          },
          "name": "color"
        },
        "comment": "The new nation color.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "forceDefaultColor()",
    "name": "forceDefaultColor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.awt.Color",
      "name": "Color",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The default color for this nation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRandomNonPlayerNationNameKey(net.sf.freecol.common.model.Game game,java.util.Random random)",
    "name": "getRandomNonPlayerNationNameKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Game",
          "name": "Game",
          "isArray": false
        },
        "name": "game"
      },
      {
        "type": {
          "qualifiedName": "java.util.Random",
          "name": "Random",
          "isArray": false
        },
        "name": "random"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Game",
            "name": "Game",
            "isArray": false
          },
          "name": "game"
        },
        "comment": "The current Game.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Random",
            "name": "Random",
            "isArray": false
          },
          "name": "random"
        },
        "comment": "A pseudo-random number source.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A player name key, or an empty string on failure.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Nation",
      "name": "Nation",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Nation",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"nation\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]