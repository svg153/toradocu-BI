[
  {
    "signature": "GoodsType(java.lang.String id,net.sf.freecol.common.model.Specification specification)",
    "name": "GoodsType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The object identifier.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "isFarmed()",
    "name": "isFarmed",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a farmed goods type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isFoodType()",
    "name": "isFoodType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a food type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isMilitaryGoods()",
    "name": "isMilitaryGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a military goods type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMilitary()",
    "name": "setMilitary",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "limitIgnored()",
    "name": "limitIgnored",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if unlimited amounts of this goods type can be stored.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNewWorldGoodsType()",
    "name": "isNewWorldGoodsType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this goods type is native to the New World.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNewWorldLuxuryType()",
    "name": "isNewWorldLuxuryType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this goods type is made from New World goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBuildingMaterial()",
    "name": "isBuildingMaterial",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is a simple building material.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isTradeGoods()",
    "name": "isTradeGoods",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this goods type is trade goods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isLibertyType()",
    "name": "isLibertyType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this goods type produces liberty.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isImmigrationType()",
    "name": "isImmigrationType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this goods type produces immigration.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isStorable()",
    "name": "isStorable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this goods type is storable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isStoredAs()",
    "name": "isStoredAs",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this type of goods is stored as another type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getStoredAs()",
    "name": "getStoredAs",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The GoodsType this is stored as, usually itself.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isRawMaterial()",
    "name": "isRawMaterial",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this GoodsType can be made into something.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isRefined()",
    "name": "isRefined",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this GoodsType is made from something.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOutputType()",
    "name": "getOutputType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The GoodsType this is made into, if anything.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInputType()",
    "name": "getInputType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The GoodsType this is made from, if anything.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInitialAmount()",
    "name": "getInitialAmount",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The default initial amount.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInitialSellPrice()",
    "name": "getInitialSellPrice",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The initial sell price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInitialBuyPrice()",
    "name": "getInitialBuyPrice",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The default initial purchase price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPriceDifference()",
    "name": "getPriceDifference",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The default initial price difference.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBreedingNumber()",
    "name": "getBreedingNumber",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The breeding number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBreedable()",
    "name": "isBreedable",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this GoodsType is breedable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPrice()",
    "name": "getPrice",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The price.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setPrice(int newPrice)",
    "name": "setPrice",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newPrice"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getProductionWeight()",
    "name": "getProductionWeight",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The production weight.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLowProductionThreshold()",
    "name": "getLowProductionThreshold",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The low production threshold.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getZeroProductionFactor()",
    "name": "getZeroProductionFactor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The zero production factor.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLabel()",
    "name": "getLabel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.StringTemplate",
      "name": "StringTemplate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The name of this GoodsType.",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "getWorkingAsKey()",
    "name": "getWorkingAsKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The \"workingAs\" message key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getProductionChain()",
    "name": "getProductionChain",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The production chain of this GoodsType as a list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isRawBuildingMaterial()",
    "name": "isRawBuildingMaterial",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if a raw building type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEquivalentTypes()",
    "name": "getEquivalentTypes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A set of equivalent GoodsTypes, which must include this one.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setDerivedAttributes(net.sf.freecol.common.model.Specification spec)",
    "name": "setDerivedAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "spec"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "spec"
        },
        "comment": "The Specification to operate on.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.GoodsType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"goods-type\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]