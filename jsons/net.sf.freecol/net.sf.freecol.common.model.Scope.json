[
  {
    "signature": "Scope()",
    "name": "Scope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "Scope(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "Scope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is an error reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getKey()",
    "name": "getKey",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A suitable key, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isMatchesNull()",
    "name": "isMatchesNull",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this scope matches null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMatchesNull(boolean newMatchesNull)",
    "name": "setMatchesNull",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newMatchesNull"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isMatchNegated()",
    "name": "isMatchNegated",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this match is negated.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMatchNegated(boolean newMatchNegated)",
    "name": "setMatchNegated",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newMatchNegated"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getType()",
    "name": "getType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setType(java.lang.String newType)",
    "name": "setType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAbilityId()",
    "name": "getAbilityId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The ability id.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setAbilityId(java.lang.String newAbilityId)",
    "name": "setAbilityId",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newAbilityId"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "newAbilityId"
        },
        "comment": "The new ability id.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getAbilityValue()",
    "name": "getAbilityValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setAbilityValue(boolean newAbilityValue)",
    "name": "setAbilityValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "newAbilityValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMethodName()",
    "name": "getMethodName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMethodName(java.lang.String newMethodName)",
    "name": "setMethodName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newMethodName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMethodValue()",
    "name": "getMethodValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMethodValue(java.lang.String newMethodValue)",
    "name": "setMethodValue",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newMethodValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "appliesTo(net.sf.freecol.common.model.FreeColObject object)",
    "name": "appliesTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
          "name": "FreeColObject",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.FreeColObject",
            "name": "FreeColObject",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "The FreeColGameObjectType to test.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the scope is applicable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "makeNegatedPersonScope()",
    "name": "makeNegatedPersonScope",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A new scope to negatively match on persons.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"scope\".",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  }
]