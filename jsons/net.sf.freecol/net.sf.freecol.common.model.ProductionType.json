[
  {
    "signature": "ProductionType(net.sf.freecol.common.model.Specification specification)",
    "name": "ProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ProductionType(java.util.List outputs)",
    "name": "ProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "outputs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "outputs"
        },
        "comment": "A list of the AbstractGoods produced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ProductionType(java.util.List inputs,java.util.List outputs)",
    "name": "ProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "inputs"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "outputs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "inputs"
        },
        "comment": "A list of the AbstractGoods consumed.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "outputs"
        },
        "comment": "A list of the AbstractGoods produced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ProductionType(net.sf.freecol.common.model.AbstractGoods output,boolean unattended,java.lang.String level)",
    "name": "ProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "output"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "output"
        },
        "comment": "The AbstractGoods produced.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "True if this is unattended production.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The difficulty level key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ProductionType(net.sf.freecol.common.model.GoodsType input,net.sf.freecol.common.model.GoodsType output,int amount)",
    "name": "ProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "output"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "The GoodsType consumed.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "output"
        },
        "comment": "The GoodsType produced.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "The amount of goods both produced and consumed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ProductionType(net.sf.freecol.common.io.FreeColXMLReader xr,net.sf.freecol.common.model.Specification specification)",
    "name": "ProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "specification"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The FreeColXMLReader to read from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "specification"
        },
        "comment": "The Specification to refer to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getInputs()",
    "name": "getInputs",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of the input AbstractGoods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setInputs(java.util.List newInputs)",
    "name": "setInputs",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newInputs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "newInputs"
        },
        "comment": "The new list of input AbstractGoods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOutputs()",
    "name": "getOutputs",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of the output AbstractGoods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setOutputs(java.util.List newOutputs)",
    "name": "setOutputs",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newOutputs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "newOutputs"
        },
        "comment": "The new list of output AbstractGoods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOutput(net.sf.freecol.common.model.GoodsType goodsType)",
    "name": "getOutput",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The AbstractGoods output if any, otherwise null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBestOutputType()",
    "name": "getBestOutputType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.GoodsType",
      "name": "GoodsType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The GoodsType of the most productive output.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getUnattended()",
    "name": "getUnattended",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if this is unattended production.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUnattended(boolean unattended)",
    "name": "setUnattended",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "unattended"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "unattended"
        },
        "comment": "The new unattended production state.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getProductionLevel()",
    "name": "getProductionLevel",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The production level key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appliesTo(java.lang.String level)",
    "name": "appliesTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The difficulty level key to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this production applies.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appliesExactly(java.lang.String level)",
    "name": "appliesExactly",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "The difficulty level key to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this production applies.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canProduce(net.sf.freecol.common.model.GoodsType goodsType,java.util.Collection types)",
    "name": "canProduce",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "types"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "types"
        },
        "comment": "A list of ProductionTypes to consider.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The most productive output that produces the goods type, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBestProductionType(net.sf.freecol.common.model.GoodsType goodsType,java.util.Collection types)",
    "name": "getBestProductionType",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "types"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "An optional GoodsType to restrict the choice of outputs with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "types"
        },
        "comment": "A collection of ProductionTypes to consider.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The most productive ProductionType.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBestOutputFor(net.sf.freecol.common.model.GoodsType goodsType,java.util.Collection types)",
    "name": "getBestOutputFor",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.GoodsType",
          "name": "GoodsType",
          "isArray": false
        },
        "name": "goodsType"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "types"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.GoodsType",
            "name": "GoodsType",
            "isArray": false
          },
          "name": "goodsType"
        },
        "comment": "The GoodsType to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "types"
        },
        "comment": "A collection of ProductionTypes to consider.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The most productive output that produces the goods type, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object o)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeAttributes(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeChildren(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "writeChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readAttributes(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readAttributes",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChildren(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChildren",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readChild(net.sf.freecol.common.io.FreeColXMLReader xr)",
    "name": "readChild",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionType",
      "name": "ProductionType",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionType",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"production\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]