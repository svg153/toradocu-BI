[
  {
    "signature": "getConsumption()",
    "name": "getConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setConsumption(java.util.List newConsumption)",
    "name": "setConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newConsumption"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addConsumption(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "addConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getProduction()",
    "name": "getProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setProduction(java.util.List newProduction)",
    "name": "setProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newProduction"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addProduction(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "addProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addProduction(java.util.List goods)",
    "name": "addProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMaximumProduction()",
    "name": "getMaximumProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMaximumProduction(java.util.List newMaximumProduction)",
    "name": "setMaximumProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newMaximumProduction"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addMaximumProduction(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "addMaximumProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getProductionDeficit()",
    "name": "getProductionDeficit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of AbstractGoods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getConsumptionDeficit()",
    "name": "getConsumptionDeficit",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A list of AbstractGoods.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasMaximumProduction()",
    "name": "hasMaximumProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True if at maximum production.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMaximumConsumption()",
    "name": "getMaximumConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMaximumConsumption(java.util.List newMaximumConsumption)",
    "name": "setMaximumConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "newMaximumConsumption"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addMaximumConsumption(net.sf.freecol.common.model.AbstractGoods goods)",
    "name": "addMaximumConsumption",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "goods"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.ProductionInfo",
      "name": "ProductionInfo",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.ProductionInfo",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]