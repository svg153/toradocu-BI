[
  {
    "signature": "getFrom()",
    "name": "getFrom",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The original tile type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setFrom(net.sf.freecol.common.model.TileType from)",
    "name": "setFrom",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileType",
          "name": "TileType",
          "isArray": false
        },
        "name": "from"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileType",
            "name": "TileType",
            "isArray": false
          },
          "name": "from"
        },
        "comment": "The new original tile type.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getTo()",
    "name": "getTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.TileType",
      "name": "TileType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The destination tile type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setTo(net.sf.freecol.common.model.TileType to)",
    "name": "setTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileType",
          "name": "TileType",
          "isArray": false
        },
        "name": "to"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.TileType",
            "name": "TileType",
            "isArray": false
          },
          "name": "to"
        },
        "comment": "The new destination tile type.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getProduction()",
    "name": "getProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
      "name": "AbstractGoods",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The consequent production.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setProduction(net.sf.freecol.common.model.AbstractGoods production)",
    "name": "setProduction",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
          "name": "AbstractGoods",
          "isArray": false
        },
        "name": "production"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.AbstractGoods",
            "name": "AbstractGoods",
            "isArray": false
          },
          "name": "production"
        },
        "comment": "The new consequent production.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "compareTo(net.sf.freecol.common.model.TileTypeChange other)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
          "name": "TileTypeChange",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object other)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toXML(net.sf.freecol.common.io.FreeColXMLWriter xw)",
    "name": "toXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
          "name": "FreeColXMLWriter",
          "isArray": false
        },
        "name": "xw"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLWriter",
            "name": "FreeColXMLWriter",
            "isArray": false
          },
          "name": "xw"
        },
        "comment": "The FreeColXMLWriter to write to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there are any problems writing to the stream.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "readFromXML(net.sf.freecol.common.io.FreeColXMLReader xr,net.sf.freecol.common.model.Specification spec)",
    "name": "readFromXML",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
          "name": "FreeColXMLReader",
          "isArray": false
        },
        "name": "xr"
      },
      {
        "type": {
          "qualifiedName": "net.sf.freecol.common.model.Specification",
          "name": "Specification",
          "isArray": false
        },
        "name": "spec"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.io.FreeColXMLReader",
            "name": "FreeColXMLReader",
            "isArray": false
          },
          "name": "xr"
        },
        "comment": "The XML input stream.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "net.sf.freecol.common.model.Specification",
            "name": "Specification",
            "isArray": false
          },
          "name": "spec"
        },
        "comment": "The Specification to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "javax.xml.stream.XMLStreamException",
          "name": "XMLStreamException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a problem was encountered during parsing.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getXMLTagName()",
    "name": "getXMLTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "What getXMLElementTagName does.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getXMLElementTagName()",
    "name": "getXMLElementTagName",
    "containingClass": {
      "qualifiedName": "net.sf.freecol.common.model.TileTypeChange",
      "name": "TileTypeChange",
      "isArray": false
    },
    "targetClass": "net.sf.freecol.common.model.TileTypeChange",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "\"change\".",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]