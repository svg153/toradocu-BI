[
  {
    "signature": "AbstractLinkedList()",
    "name": "AbstractLinkedList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "AbstractLinkedList(java.util.Collection coll)",
    "name": "AbstractLinkedList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "init()",
    "name": "init",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "get(int index)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "listIterator()",
    "name": "listIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "listIterator(int fromIndex)",
    "name": "listIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromIndex"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.Object value)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(java.lang.Object value)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(java.lang.Object value)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "containsAll(java.util.Collection coll)",
    "name": "containsAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toArray()",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toArray(java.lang.Object[] array)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "subList(int fromIndexInclusive,int toIndexExclusive)",
    "name": "subList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromIndexInclusive"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "toIndexExclusive"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "fromIndexInclusive"
        },
        "comment": "the index to start from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "toIndexExclusive"
        },
        "comment": "the index to end at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new sublist",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.get(int))"
    },
    "throwsTags": []
  },
  {
    "signature": "add(java.lang.Object value)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "add(int index,java.lang.Object value)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addAll(java.util.Collection coll)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addAll(int index,java.util.Collection coll)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove(int index)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove(java.lang.Object value)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeAll(java.util.Collection coll)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "retainAll(java.util.Collection coll)",
    "name": "retainAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "set(int index,java.lang.Object value)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFirst()",
    "name": "getFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLast()",
    "name": "getLast",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addFirst(java.lang.Object o)",
    "name": "addFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addLast(java.lang.Object o)",
    "name": "addLast",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeFirst()",
    "name": "removeFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeLast()",
    "name": "removeLast",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEqualValue(java.lang.Object value1,java.lang.Object value2)",
    "name": "isEqualValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value1"
        },
        "comment": "the first value to compare, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value2"
        },
        "comment": "the second value to compare, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if equal",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateNode(org.apache.commons.collections4.list.AbstractLinkedList.Node node,java.lang.Object value)",
    "name": "updateNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "node to update",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "new value of the node",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "createHeaderNode()",
    "name": "createHeaderNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
      "name": "Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "newly created node",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createNode(java.lang.Object value)",
    "name": "createNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
      "name": "Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value of the new node",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new node containing the value",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node node,java.lang.Object value)",
    "name": "addNodeBefore",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "node to insert before",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value of the newly added node",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "node"
        ],
        "comment": "if node is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList.Node node,java.lang.Object value)",
    "name": "addNodeAfter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "node to insert after",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value of the newly added node",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "node"
        ],
        "comment": "if node is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node nodeToInsert,org.apache.commons.collections4.list.AbstractLinkedList.Node insertBeforeNode)",
    "name": "addNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "nodeToInsert"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "insertBeforeNode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "nodeToInsert"
        },
        "comment": "new node to insert",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "insertBeforeNode"
        },
        "comment": "node to insert before",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either node is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node node)",
    "name": "removeNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node to remove",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "node"
        ],
        "comment": "if node is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "removeAllNodes()",
    "name": "removeAllNodes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNode(int index,boolean endMarkerAllowed)",
    "name": "getNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
      "name": "Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "endMarkerAllowed"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index, starting from 0",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "endMarkerAllowed"
        },
        "comment": "whether or not the end marker can be returned if startIndex is set to the list's size",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the node at the given index",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the index is less than 0; equal to the size of the list and endMakerAllowed is false; or greater than the size of the list",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "createSubListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList subList)",
    "name": "createSubListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList",
          "name": "LinkedSubList",
          "isArray": false
        },
        "name": "subList"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList",
            "name": "LinkedSubList",
            "isArray": false
          },
          "name": "subList"
        },
        "comment": "the sublist to get an iterator for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new iterator on the given sublist",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList subList,int fromIndex)",
    "name": "createSubListListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList",
          "name": "LinkedSubList",
          "isArray": false
        },
        "name": "subList"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList",
            "name": "LinkedSubList",
            "isArray": false
          },
          "name": "subList"
        },
        "comment": "the sublist to get an iterator for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "fromIndex"
        },
        "comment": "the index to start from, relative to the sublist",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new list iterator on the given sublist",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doWriteObject(java.io.ObjectOutputStream outputStream)",
    "name": "doWriteObject",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectOutputStream",
          "name": "ObjectOutputStream",
          "isArray": false
        },
        "name": "outputStream"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.ObjectOutputStream",
            "name": "ObjectOutputStream",
            "isArray": false
          },
          "name": "outputStream"
        },
        "comment": "the stream to write the object to",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if anything goes wrong",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "doReadObject(java.io.ObjectInputStream inputStream)",
    "name": "doReadObject",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList",
      "name": "AbstractLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.AbstractLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.ObjectInputStream",
          "name": "ObjectInputStream",
          "isArray": false
        },
        "name": "inputStream"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.ObjectInputStream",
            "name": "ObjectInputStream",
            "isArray": false
          },
          "name": "inputStream"
        },
        "comment": "the stream to read the object from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any error occurs while reading from the stream",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassNotFoundException",
          "name": "ClassNotFoundException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if a class read from the stream can not be loaded",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]