[
  {
    "signature": "ComparatorPredicate(java.lang.Object object,java.util.Comparator comparator,org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion)",
    "name": "ComparatorPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate",
      "name": "ComparatorPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.ComparatorPredicate",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate.Criterion",
          "name": "Criterion",
          "isArray": false
        },
        "name": "criterion"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to compare to",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use for comparison",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate.Criterion",
            "name": "Criterion",
            "isArray": false
          },
          "name": "criterion"
        },
        "comment": "the criterion to use to evaluate comparison",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "comparatorPredicate(java.lang.Object object,java.util.Comparator comparator)",
    "name": "comparatorPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate",
      "name": "ComparatorPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.ComparatorPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to compare to",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use for comparison",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the predicate",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if comparator is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "comparatorPredicate(java.lang.Object object,java.util.Comparator comparator,org.apache.commons.collections4.functors.ComparatorPredicate.Criterion criterion)",
    "name": "comparatorPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate",
      "name": "ComparatorPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.ComparatorPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      },
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate.Criterion",
          "name": "Criterion",
          "isArray": false
        },
        "name": "criterion"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to compare to",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use for comparison",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate.Criterion",
            "name": "Criterion",
            "isArray": false
          },
          "name": "criterion"
        },
        "comment": "the criterion to use to evaluate comparison",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the predicate",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if comparator or criterion is null",
        "kind": "THROWS",
        "condition": "args[1]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "evaluate(java.lang.Object target)",
    "name": "evaluate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.ComparatorPredicate",
      "name": "ComparatorPredicate",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.ComparatorPredicate",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "target"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "target"
        },
        "comment": "the target object to compare to",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the comparison succeeds according to the selected criterion",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the criterion is invalid (really not possible)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]