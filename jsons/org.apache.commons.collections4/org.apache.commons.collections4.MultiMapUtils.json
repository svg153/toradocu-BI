[
  {
    "signature": "emptyMultiValuedMap()",
    "name": "emptyMultiValuedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
      "name": "MultiValuedMap",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "immutable and empty MultiValuedMap",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyIfNull(org.apache.commons.collections4.MultiValuedMap map)",
    "name": "emptyIfNull",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
      "name": "MultiValuedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an empty MultiValuedMap if the argument is null",
      "kind": "RETURN",
      "condition": "args[0]==null ? result.equals(org.apache.commons.collections4.MultiMapUtils.emptyMultiValuedMap())"
    },
    "throwsTags": []
  },
  {
    "signature": "isEmpty(org.apache.commons.collections4.MultiValuedMap map)",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to check, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the map is empty or null",
      "kind": "RETURN",
      "condition": "args[0].isEmpty() || args[0]==null ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "getCollection(org.apache.commons.collections4.MultiValuedMap map,java.lang.Object key)",
    "name": "getCollection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiValuedMap to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the Collection in the MultiValuedMap, or null if input map is null",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "getValuesAsList(org.apache.commons.collections4.MultiValuedMap map,java.lang.Object key)",
    "name": "getValuesAsList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiValuedMap to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the Collection in the MultiValuedMap as List, or null if input map is null",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "getValuesAsSet(org.apache.commons.collections4.MultiValuedMap map,java.lang.Object key)",
    "name": "getValuesAsSet",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiValuedMap to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the Collection in the MultiValuedMap as Set, or null if input map is null",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "getValuesAsBag(org.apache.commons.collections4.MultiValuedMap map,java.lang.Object key)",
    "name": "getValuesAsBag",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Bag",
      "name": "Bag",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiValuedMap to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the Collection in the MultiValuedMap as Bag, or null if input map is null",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "newListValuedHashMap()",
    "name": "newListValuedHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ListValuedMap",
      "name": "ListValuedMap",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new ListValuedMap",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "newSetValuedHashMap()",
    "name": "newSetValuedHashMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.SetValuedMap",
      "name": "SetValuedMap",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new SetValuedMap",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unmodifiableMultiValuedMap(org.apache.commons.collections4.MultiValuedMap map)",
    "name": "unmodifiableMultiValuedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
      "name": "MultiValuedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiValuedMap to decorate, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "an unmodifiable MultiValuedMap backed by the provided map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "transformedMultiValuedMap(org.apache.commons.collections4.MultiValuedMap map,org.apache.commons.collections4.Transformer keyTransformer,org.apache.commons.collections4.Transformer valueTransformer)",
    "name": "transformedMultiValuedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MultiMapUtils",
      "name": "MultiMapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MultiMapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
      "name": "MultiValuedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
          "name": "MultiValuedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "valueTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiValuedMap",
            "name": "MultiValuedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiValuedMap to transform, must not be null, typically empty",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the transformer for the map keys, null means no transformation",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "valueTransformer"
        },
        "comment": "the transformer for the map values, null means no transformation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a transformed MultiValuedMap backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  }
]