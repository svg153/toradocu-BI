[
  {
    "signature": "ObjectGraphIterator(java.lang.Object root,org.apache.commons.collections4.Transformer transformer)",
    "name": "ObjectGraphIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "root"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "root"
        },
        "comment": "the root object, null will result in an empty iterator",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer to use, null will use a no effect transformer",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ObjectGraphIterator(java.util.Iterator rootIterator)",
    "name": "ObjectGraphIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "rootIterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "rootIterator"
        },
        "comment": "the root iterator, null will result in an empty iterator",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "updateCurrentIterator()",
    "name": "updateCurrentIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "findNext(java.lang.Object value)",
    "name": "findNext",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to start from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "findNextByIterator(java.util.Iterator iterator)",
    "name": "findNextByIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to start from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if elements remain in the iteration",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the next element from the iteration",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if all the Iterators are exhausted",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
      "name": "ObjectGraphIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ObjectGraphIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the remove operator is not supported by the underlying Iterator",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the next method has not yet been called, or the remove method has already been called after the last call to the next method.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]