[
  {
    "signature": "CompositeMap()",
    "name": "CompositeMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "CompositeMap(java.util.Map one,java.util.Map two)",
    "name": "CompositeMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "one"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "two"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "one"
        },
        "comment": "the first Map to be composited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "two"
        },
        "comment": "the second Map to be composited",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a key collision",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "CompositeMap(java.util.Map one,java.util.Map two,org.apache.commons.collections4.map.CompositeMap.MapMutator mutator)",
    "name": "CompositeMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "one"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "two"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.CompositeMap.MapMutator",
          "name": "MapMutator",
          "isArray": false
        },
        "name": "mutator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "one"
        },
        "comment": "the first Map to be composited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "two"
        },
        "comment": "the second Map to be composited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.CompositeMap.MapMutator",
            "name": "MapMutator",
            "isArray": false
          },
          "name": "mutator"
        },
        "comment": "MapMutator to be used for mutation operations",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CompositeMap(java.util.Map[] composite)",
    "name": "CompositeMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": true,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map[]",
          "name": "Map[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          }
        },
        "name": "composite"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map[]",
            "name": "Map[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Map",
              "name": "Map",
              "isArray": false
            }
          },
          "name": "composite"
        },
        "comment": "the Maps to be composited",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a key collision",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "CompositeMap(java.util.Map[] composite,org.apache.commons.collections4.map.CompositeMap.MapMutator mutator)",
    "name": "CompositeMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map[]",
          "name": "Map[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          }
        },
        "name": "composite"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.CompositeMap.MapMutator",
          "name": "MapMutator",
          "isArray": false
        },
        "name": "mutator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map[]",
            "name": "Map[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Map",
              "name": "Map",
              "isArray": false
            }
          },
          "name": "composite"
        },
        "comment": "Maps to be composited",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.CompositeMap.MapMutator",
            "name": "MapMutator",
            "isArray": false
          },
          "name": "mutator"
        },
        "comment": "MapMutator to be used for mutation operations",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setMutator(org.apache.commons.collections4.map.CompositeMap.MapMutator mutator)",
    "name": "setMutator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.CompositeMap.MapMutator",
          "name": "MapMutator",
          "isArray": false
        },
        "name": "mutator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.CompositeMap.MapMutator",
            "name": "MapMutator",
            "isArray": false
          },
          "name": "mutator"
        },
        "comment": "the MapMutator to be used for mutation delegation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addComposited(java.util.Map map)",
    "name": "addComposited",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the Map to be added to the composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a key collision and there is no MapMutator set to handle it.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "removeComposited(java.util.Map map)",
    "name": "removeComposited",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the Map to be removed from the composite",
        "kind": "PARAM",
        "condition": "args[0].remove(java.lang.Object, java.lang.Object)"
      }
    ],
    "returnTag": {
      "comment": "The removed Map or null if map is not in the composite",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any of the composited Maps do not support clear()",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "containsKey(java.lang.Object key)",
    "name": "containsKey",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key whose presence in this map is to be tested.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if this map contains a mapping for the specified key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the key is of an inappropriate type for this map (optional).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null",
          "null"
        ],
        "comment": "if the key is null and this map does not not permit null keys (optional).",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "containsValue(java.lang.Object value)",
    "name": "containsValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value whose presence in this map is to be tested.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if this map maps one or more keys to the specified value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the value is of an inappropriate type for this map (optional).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null",
          "null"
        ],
        "comment": "if the value is null and this map does not not permit null values (optional).",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "entrySet()",
    "name": "entrySet",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a set view of the mappings contained in this map.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "get(java.lang.Object key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key whose associated value is to be returned.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value to which this map maps the specified key, or null if the map contains no mapping for this key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the key is of an inappropriate type for this map (optional).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null",
          "null"
        ],
        "comment": "key is null and this map does not not permit null keys (optional).",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if this map contains no key-value mappings.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "keySet()",
    "name": "keySet",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a set view of the keys contained in this map.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "put(java.lang.Object key,java.lang.Object value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key with which the specified value is to be associated.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value to be associated with the specified key.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "previous value associated with specified key, or null if there was no mapping for key. A null return can also indicate that the map previously associated null with the specified key, if the implementation supports null values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if no MapMutator has been specified",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the class of the specified key or value prevents it from being stored in this map.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if some aspect of this key or value prevents it from being stored in this map.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null",
          "null"
        ],
        "comment": "this map does not permit null keys or values, and the specified key or value is null.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "putAll(java.util.Map map)",
    "name": "putAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "Mappings to be stored in this map.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [
          "putAll"
        ],
        "comment": "if the putAll method is not supported by this map.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the class of a key or value in the specified map prevents it from being stored in this map.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "some aspect of a key or value in the specified map prevents it from being stored in this map.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null",
          "null",
          "null"
        ],
        "comment": "the specified map is null, or if this map does not permit null keys or values, and the specified map contains null keys or values.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[0].containsKey(java.lang.Object)"
      }
    ]
  },
  {
    "signature": "remove(java.lang.Object key)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "key whose mapping is to be removed from the map.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "previous value associated with specified key, or null if there was no mapping for key.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the key is of an inappropriate type for the composited map (optional).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null",
          "null"
        ],
        "comment": "if the key is null and the composited map does not not permit null keys (optional).",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [
          "remove"
        ],
        "comment": "if the remove method is not supported by the composited map containing the key",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of key-value mappings in this map.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "values()",
    "name": "values",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a collection view of the values contained in this map.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to compare to",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the maps are equal",
      "kind": "RETURN",
      "condition": "target.get(args[0]) ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.CompositeMap",
      "name": "CompositeMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.CompositeMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]