[
  {
    "signature": "CompositeCollection()",
    "name": "CompositeCollection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "CompositeCollection(java.util.Collection compositeCollection)",
    "name": "CompositeCollection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "compositeCollection"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "compositeCollection"
        },
        "comment": "the Collection to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CompositeCollection(java.util.Collection compositeCollection1,java.util.Collection compositeCollection2)",
    "name": "CompositeCollection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "compositeCollection1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "compositeCollection2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "compositeCollection1"
        },
        "comment": "the Collection to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "compositeCollection2"
        },
        "comment": "the Collection to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "CompositeCollection(java.util.Collection[] compositeCollections)",
    "name": "CompositeCollection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": true,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection[]",
          "name": "Collection[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          }
        },
        "name": "compositeCollections"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection[]",
            "name": "Collection[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Collection",
              "name": "Collection",
              "isArray": false
            }
          },
          "name": "compositeCollections"
        },
        "comment": "the collections to composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "total number of elements in all contained containers",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if all of the contained collections are empty",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(java.lang.Object obj)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to search for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if obj is contained in any of the contained collections",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an IteratorChain instance which supports remove(). Iteration occurs over contained collections in the order they were added, but this behavior should not be relied upon.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toArray()",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an object array of all the elements in the collection",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toArray(java.lang.Object[] array)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "T",
        "name": "T",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array to use, populating if possible",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array of all the elements in the collection",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "add(java.lang.Object obj)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to add",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the collection was modified",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if CollectionMutator hasn't been set",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if add is unsupported",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be added due to its type",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be added because its null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be added",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "remove(java.lang.Object obj)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object being removed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the collection is changed",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if removed is unsupported",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be removed due to its type",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be removed because its null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be removed",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "containsAll(java.util.Collection coll)",
    "name": "containsAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to check for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if all elements contained",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "addAll(java.util.Collection coll)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to add",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the collection was modified",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if CollectionMutator hasn't been set",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if add is unsupported",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be added due to its type",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be added because its null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the object cannot be added",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "removeAll(java.util.Collection coll)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to remove",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the collection was modified",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if removeAll is unsupported",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "retainAll(java.util.Collection coll)",
    "name": "retainAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to remove",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the collection was modified",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if retainAll is unsupported",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if clear is unsupported",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMutator(org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator mutator)",
    "name": "setMutator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator",
          "name": "CollectionMutator",
          "isArray": false
        },
        "name": "mutator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator",
            "name": "CollectionMutator",
            "isArray": false
          },
          "name": "mutator"
        },
        "comment": "the mutator to use",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addComposited(java.util.Collection compositeCollection)",
    "name": "addComposited",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "compositeCollection"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "compositeCollection"
        },
        "comment": "the Collection to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addComposited(java.util.Collection compositeCollection1,java.util.Collection compositeCollection2)",
    "name": "addComposited",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "compositeCollection1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "compositeCollection2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "compositeCollection1"
        },
        "comment": "the Collection to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "compositeCollection2"
        },
        "comment": "the Collection to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addComposited(java.util.Collection[] compositeCollections)",
    "name": "addComposited",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection[]",
          "name": "Collection[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          }
        },
        "name": "compositeCollections"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection[]",
            "name": "Collection[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Collection",
              "name": "Collection",
              "isArray": false
            }
          },
          "name": "compositeCollections"
        },
        "comment": "the Collections to be appended to the composite",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "removeComposited(java.util.Collection coll)",
    "name": "removeComposited",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "collection to be removed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "toCollection()",
    "name": "toCollection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection",
      "name": "Collection",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A new ArrayList containing all of the elements in this composite. The new collection is not backed by this composite.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCollections()",
    "name": "getCollections",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Unmodifiable list of all collections in this composite.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMutator()",
    "name": "getMutator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection",
      "name": "CompositeCollection",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.collection.CompositeCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator",
      "name": "CollectionMutator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "CollectionMutator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]