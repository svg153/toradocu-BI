[
  {
    "signature": "copy(org.apache.commons.collections4.Predicate[] predicates)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate[]",
      "name": "Predicate[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.collections4.Predicate",
        "name": "Predicate",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "the predicates to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the cloned predicates",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "coerce(org.apache.commons.collections4.Predicate predicate)",
    "name": "coerce",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to coerce.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the coerced predicate.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "validate(org.apache.commons.collections4.Predicate[] predicates)",
    "name": "validate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "the predicates to validate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "validate(java.util.Collection predicates)",
    "name": "validate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate[]",
      "name": "Predicate[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.collections4.Predicate",
        "name": "Predicate",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "predicates"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "predicates"
        },
        "comment": "the predicates to validate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "predicate array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "copy(org.apache.commons.collections4.Closure[] closures)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure[]",
      "name": "Closure[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.collections4.Closure",
        "name": "Closure",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure[]",
          "name": "Closure[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          }
        },
        "name": "closures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure[]",
            "name": "Closure[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Closure",
              "name": "Closure",
              "isArray": false
            }
          },
          "name": "closures"
        },
        "comment": "the closures to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the cloned closures",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "validate(org.apache.commons.collections4.Closure[] closures)",
    "name": "validate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure[]",
          "name": "Closure[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          }
        },
        "name": "closures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure[]",
            "name": "Closure[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Closure",
              "name": "Closure",
              "isArray": false
            }
          },
          "name": "closures"
        },
        "comment": "the closures to validate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "coerce(org.apache.commons.collections4.Closure closure)",
    "name": "coerce",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to coerce.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the coerced closure.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "copy(org.apache.commons.collections4.Transformer[] transformers)",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer[]",
      "name": "Transformer[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "org.apache.commons.collections4.Transformer",
        "name": "Transformer",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer[]",
          "name": "Transformer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          }
        },
        "name": "transformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer[]",
            "name": "Transformer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Transformer",
              "name": "Transformer",
              "isArray": false
            }
          },
          "name": "transformers"
        },
        "comment": "the transformers to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a clone of the transformers",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "validate(org.apache.commons.collections4.Transformer[] transformers)",
    "name": "validate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer[]",
          "name": "Transformer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          }
        },
        "name": "transformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer[]",
            "name": "Transformer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Transformer",
              "name": "Transformer",
              "isArray": false
            }
          },
          "name": "transformers"
        },
        "comment": "the transformers to validate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "coerce(org.apache.commons.collections4.Transformer transformer)",
    "name": "coerce",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.FunctorUtils",
      "name": "FunctorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.FunctorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer to coerce.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the coerced transformer.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]