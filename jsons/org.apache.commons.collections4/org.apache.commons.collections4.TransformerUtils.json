[
  {
    "signature": "exceptionTransformer()",
    "name": "exceptionTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nullTransformer()",
    "name": "nullTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nopTransformer()",
    "name": "nopTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cloneTransformer()",
    "name": "cloneTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "constantTransformer(java.lang.Object constantToReturn)",
    "name": "constantTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "constantToReturn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "constantToReturn"
        },
        "comment": "the constant object to return each time in the transformer",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asTransformer(org.apache.commons.collections4.Closure closure)",
    "name": "asTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to run each time in the transformer, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the closure is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asTransformer(org.apache.commons.collections4.Predicate predicate)",
    "name": "asTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to run each time in the transformer, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the predicate is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asTransformer(org.apache.commons.collections4.Factory factory)",
    "name": "asTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Factory",
          "name": "Factory",
          "isArray": false
        },
        "name": "factory"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Factory",
            "name": "Factory",
            "isArray": false
          },
          "name": "factory"
        },
        "comment": "the factory to run each time in the transformer, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the factory is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "chainedTransformer(org.apache.commons.collections4.Transformer[] transformers)",
    "name": "chainedTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer[]",
          "name": "Transformer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          }
        },
        "name": "transformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer[]",
            "name": "Transformer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Transformer",
              "name": "Transformer",
              "isArray": false
            }
          },
          "name": "transformers"
        },
        "comment": "an array of transformers to chain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the transformers array or any of the transformers is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[0]==null"
      }
    ]
  },
  {
    "signature": "chainedTransformer(java.util.Collection transformers)",
    "name": "chainedTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "transformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "transformers"
        },
        "comment": "a collection of transformers to chain",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the transformers collection or any of the transformers is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[0]==null"
      }
    ]
  },
  {
    "signature": "ifTransformer(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Transformer trueTransformer)",
    "name": "ifTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "trueTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to switch on",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "trueTransformer"
        },
        "comment": "the transformer called if the predicate is true",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[1])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either the predicate or transformer is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "ifTransformer(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Transformer trueTransformer,org.apache.commons.collections4.Transformer falseTransformer)",
    "name": "ifTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "trueTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "falseTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to switch on",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "trueTransformer"
        },
        "comment": "the transformer called if the predicate is true",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "falseTransformer"
        },
        "comment": "the transformer called if the predicate is false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[1])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either the predicate or transformer is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "switchTransformer(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Transformer trueTransformer,org.apache.commons.collections4.Transformer falseTransformer)",
    "name": "switchTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "trueTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "falseTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to switch on",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "trueTransformer"
        },
        "comment": "the transformer called if the predicate is true",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "falseTransformer"
        },
        "comment": "the transformer called if the predicate is false",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[1])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either the predicate or transformer is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "switchTransformer(org.apache.commons.collections4.Predicate[] predicates,org.apache.commons.collections4.Transformer[] transformers)",
    "name": "switchTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer[]",
          "name": "Transformer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          }
        },
        "name": "transformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "an array of predicates to check",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer[]",
            "name": "Transformer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Transformer",
              "name": "Transformer",
              "isArray": false
            }
          },
          "name": "transformers"
        },
        "comment": "an array of transformers to call",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[1])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the either array is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any element in the arrays is null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrays have different sizes",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "switchTransformer(org.apache.commons.collections4.Predicate[] predicates,org.apache.commons.collections4.Transformer[] transformers,org.apache.commons.collections4.Transformer defaultTransformer)",
    "name": "switchTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate[]",
          "name": "Predicate[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          }
        },
        "name": "predicates"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer[]",
          "name": "Transformer[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          }
        },
        "name": "transformers"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "defaultTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate[]",
            "name": "Predicate[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Predicate",
              "name": "Predicate",
              "isArray": false
            }
          },
          "name": "predicates"
        },
        "comment": "an array of predicates to check",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer[]",
            "name": "Transformer[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "org.apache.commons.collections4.Transformer",
              "name": "Transformer",
              "isArray": false
            }
          },
          "name": "transformers"
        },
        "comment": "an array of transformers to call",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "defaultTransformer"
        },
        "comment": "the default to call if no predicate matches, null means return null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[2])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the either array is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any element in the arrays is null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrays have different sizes",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "switchTransformer(java.util.Map predicatesAndTransformers)",
    "name": "switchTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "predicatesAndTransformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "predicatesAndTransformers"
        },
        "comment": "a map of predicates to transformers",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any transformer in the map is null",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map elements are of the wrong type",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "switchMapTransformer(java.util.Map objectsAndTransformers)",
    "name": "switchMapTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "objectsAndTransformers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "objectsAndTransformers"
        },
        "comment": "a map of objects to transformers",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any transformer in the map is null",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "instantiateTransformer()",
    "name": "instantiateTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "instantiateTransformer(java.lang.Class[] paramTypes,java.lang.Object[] args)",
    "name": "instantiateTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class[]",
          "name": "Class[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          }
        },
        "name": "paramTypes"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "args"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class[]",
            "name": "Class[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Class",
              "name": "Class",
              "isArray": false
            }
          },
          "name": "paramTypes"
        },
        "comment": "parameter types for the constructor, can be null",
        "kind": "PARAM",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "args"
        },
        "comment": "the arguments to pass to the constructor, can be null",
        "kind": "PARAM",
        "condition": "args[0]==null || args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the paramTypes and args don't match",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "mapTransformer(java.util.Map map)",
    "name": "mapTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use to transform the objects",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer, or ConstantTransformer.nullTransformer() if the map is null",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "invokerTransformer(java.lang.String methodName)",
    "name": "invokerTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "methodName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "methodName"
        },
        "comment": "the method name to call on the input object, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the methodName is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "invokerTransformer(java.lang.String methodName,java.lang.Class[] paramTypes,java.lang.Object[] args)",
    "name": "invokerTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "methodName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class[]",
          "name": "Class[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          }
        },
        "name": "paramTypes"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "args"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "methodName"
        },
        "comment": "the name of the method",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class[]",
            "name": "Class[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Class",
              "name": "Class",
              "isArray": false
            }
          },
          "name": "paramTypes"
        },
        "comment": "the parameter types",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "args"
        },
        "comment": "the arguments",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the method name is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the paramTypes and args don't match",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "stringValueTransformer()",
    "name": "stringValueTransformer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.TransformerUtils",
      "name": "TransformerUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.TransformerUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Transformer",
      "name": "Transformer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the transformer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]