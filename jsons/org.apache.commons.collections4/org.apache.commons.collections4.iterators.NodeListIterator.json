[
  {
    "signature": "NodeListIterator(org.w3c.dom.Node node)",
    "name": "NodeListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.NodeListIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "Node, who's child nodes are wrapped by this class. Must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if node is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "NodeListIterator(org.w3c.dom.NodeList nodeList)",
    "name": "NodeListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.NodeListIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.NodeList",
          "name": "NodeList",
          "isArray": false
        },
        "name": "nodeList"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.NodeList",
            "name": "NodeList",
            "isArray": false
          },
          "name": "nodeList"
        },
        "comment": "node list, which is wrapped by this class. Must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if nodeList is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.NodeListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.NodeListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.w3c.dom.Node",
      "name": "Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "remove()",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.NodeListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "always",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]