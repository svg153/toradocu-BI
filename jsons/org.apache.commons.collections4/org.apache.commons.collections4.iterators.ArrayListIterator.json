[
  {
    "signature": "ArrayListIterator(java.lang.Object array)",
    "name": "ArrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array to iterate over",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "array"
        ],
        "comment": "if array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "array",
          "null"
        ],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "ArrayListIterator(java.lang.Object array,int startIndex)",
    "name": "ArrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array to iterate over",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "array"
        ],
        "comment": "if array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "array",
          "null"
        ],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the start index is out of bounds",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "ArrayListIterator(java.lang.Object array,int startIndex,int endIndex)",
    "name": "ArrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array to iterate over",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the index (exclusive) to finish iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [
          "array"
        ],
        "comment": "if array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the start or end index is out of bounds",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if end index is before the start",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "array",
          "null"
        ],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "hasPrevious()",
    "name": "hasPrevious",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if there is a previous element to return",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "previous()",
    "name": "previous",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the previous element",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is no previous element",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "next()",
    "name": "next",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the next element",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.util.NoSuchElementException",
          "name": "NoSuchElementException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is no next element",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextIndex()",
    "name": "nextIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the index of the item to be retrieved next",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "previousIndex()",
    "name": "previousIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the index of the item to be retrieved next",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "add(java.lang.Object o)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "o"
        },
        "comment": "the element to add",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "always thrown.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "set(java.lang.Object o)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "o"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "o"
        },
        "comment": "the element to set",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [
          "next()",
          "previous()",
          "set(Object)"
        ],
        "comment": "if next() or previous() has not been called before set(Object)",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ArrayListIterator",
      "name": "ArrayListIterator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.iterators.ArrayListIterator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]