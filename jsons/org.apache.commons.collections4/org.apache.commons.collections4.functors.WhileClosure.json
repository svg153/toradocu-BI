[
  {
    "signature": "WhileClosure(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Closure closure,boolean doLoop)",
    "name": "WhileClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.WhileClosure",
      "name": "WhileClosure",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.WhileClosure",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "doLoop"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate used to evaluate when the loop terminates, not null",
        "kind": "PARAM",
        "condition": "(args[0].evaluate(T)) || ((args[0]==null) == false)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure the execute, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "doLoop"
        },
        "comment": "true to act as a do-while loop, always executing the closure once",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "whileClosure(org.apache.commons.collections4.Predicate predicate,org.apache.commons.collections4.Closure closure,boolean doLoop)",
    "name": "whileClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.WhileClosure",
      "name": "WhileClosure",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.WhileClosure",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "doLoop"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate used to evaluate when the loop terminates, not null",
        "kind": "PARAM",
        "condition": "(args[0].evaluate(T)) || ((args[0]==null) == false)"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure the execute, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "doLoop"
        },
        "comment": "true to act as a do-while loop, always executing the closure once",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the while closure",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the predicate or closure is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "execute(java.lang.Object input)",
    "name": "execute",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.WhileClosure",
      "name": "WhileClosure",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.WhileClosure",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "input"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "the input object",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getPredicate()",
    "name": "getPredicate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.WhileClosure",
      "name": "WhileClosure",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.WhileClosure",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Predicate",
      "name": "Predicate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the predicate",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getClosure()",
    "name": "getClosure",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.WhileClosure",
      "name": "WhileClosure",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.WhileClosure",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.Closure",
      "name": "Closure",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the closure",
      "kind": "RETURN",
      "condition": "true ? result.equals(target)"
    },
    "throwsTags": []
  },
  {
    "signature": "isDoLoop()",
    "name": "isDoLoop",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.functors.WhileClosure",
      "name": "WhileClosure",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.functors.WhileClosure",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true is do-while, false if while",
      "kind": "RETURN",
      "condition": "result==false"
    },
    "throwsTags": []
  }
]