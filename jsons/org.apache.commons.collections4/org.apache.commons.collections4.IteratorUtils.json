[
  {
    "signature": "emptyIterator()",
    "name": "emptyIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an iterator over nothing",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyListIterator()",
    "name": "emptyListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a list iterator over nothing",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyOrderedIterator()",
    "name": "emptyOrderedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.OrderedIterator",
      "name": "OrderedIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an ordered iterator over nothing",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyMapIterator()",
    "name": "emptyMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MapIterator",
      "name": "MapIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a map iterator over nothing",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyOrderedMapIterator()",
    "name": "emptyOrderedMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.OrderedMapIterator",
      "name": "OrderedMapIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a map iterator over nothing",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "singletonIterator(java.lang.Object object)",
    "name": "singletonIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the single object over which to iterate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a singleton iterator over the object",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "singletonListIterator(java.lang.Object object)",
    "name": "singletonListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the single object over which to iterate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a singleton list iterator over the object",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "arrayIterator(java.lang.Object[] array)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object array)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over the array",
      "kind": "RETURN",
      "condition": "true ? result.equals(org.apache.commons.collections4.IteratorUtils.getIterator())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is not an array",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object[] array,int start)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if start is less than zero or greater than the length of the array",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object array,int start)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array",
      "kind": "RETURN",
      "condition": "true ? result.equals(org.apache.commons.collections4.IteratorUtils.getIterator())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is not an array",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if start is less than zero or greater than the length of the array",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object[] array,int start,int end)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array bounds are invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if end is before start",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object array,int start,int end)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array",
      "kind": "RETURN",
      "condition": "true ? result.equals(org.apache.commons.collections4.IteratorUtils.getIterator())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is not an array or end is before start",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array bounds are invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object[] array)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object array)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is not an array",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object[] array,int start)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if start is less than zero",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object array,int start)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is not an array",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if start is less than zero",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object[] array,int start,int end)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array bounds are invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if end is before start",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object array,int start,int end)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array is not an array or end is before start",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array bounds are invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if array is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "boundedIterator(java.util.Iterator iterator,long max)",
    "name": "boundedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.BoundedIterator",
      "name": "BoundedIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "max"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "the maximum number of elements returned by this iterator",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new bounded iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if max is negative",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "boundedIterator(java.util.Iterator iterator,long offset,long max)",
    "name": "boundedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.BoundedIterator",
      "name": "BoundedIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "max"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the index of the first element of the decorated iterator to return",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "the maximum number of elements returned by this iterator",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new bounded iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either offset or max is negative",
        "kind": "THROWS",
        "condition": "args[1]<0 || args[2]<0"
      }
    ]
  },
  {
    "signature": "unmodifiableIterator(java.util.Iterator iterator)",
    "name": "unmodifiableIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to make immutable",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an immutable version of the iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unmodifiableListIterator(java.util.ListIterator listIterator)",
    "name": "unmodifiableListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.ListIterator",
          "name": "ListIterator",
          "isArray": false
        },
        "name": "listIterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.ListIterator",
            "name": "ListIterator",
            "isArray": false
          },
          "name": "listIterator"
        },
        "comment": "the iterator to make immutable",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an immutable version of the iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unmodifiableMapIterator(org.apache.commons.collections4.MapIterator mapIterator)",
    "name": "unmodifiableMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MapIterator",
      "name": "MapIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MapIterator",
          "name": "MapIterator",
          "isArray": false
        },
        "name": "mapIterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MapIterator",
            "name": "MapIterator",
            "isArray": false
          },
          "name": "mapIterator"
        },
        "comment": "the iterator to make immutable",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an immutable version of the iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "chainedIterator(java.util.Iterator iterator1,java.util.Iterator iterator2)",
    "name": "chainedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator1"
        },
        "comment": "the first iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator2"
        },
        "comment": "the second iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "chainedIterator(java.util.Iterator[] iterators)",
    "name": "chainedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator[]",
          "name": "Iterator[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          }
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator[]",
            "name": "Iterator[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Iterator",
              "name": "Iterator",
              "isArray": false
            }
          },
          "name": "iterators"
        },
        "comment": "the iterators to use, not null or empty or contain nulls",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterators array is null or contains a null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "chainedIterator(java.util.Collection iterators)",
    "name": "chainedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "iterators"
        },
        "comment": "the iterators to use, not null or empty or contain nulls",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].isEmpty() || args[0].contains(null)"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterators collection is null or contains a null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[0].contains(null)"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterators collection contains the wrong object type",
        "kind": "THROWS",
        "condition": "args[0].contains(java.lang.Object)"
      }
    ]
  },
  {
    "signature": "collatedIterator(java.util.Comparator comparator,java.util.Iterator iterator1,java.util.Iterator iterator2)",
    "name": "collatedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use, may be null for natural order",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator1"
        },
        "comment": "the first iterators to use, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator2"
        },
        "comment": "the first iterators to use, not null",
        "kind": "PARAM",
        "condition": "(args[2]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either iterator is null",
        "kind": "THROWS",
        "condition": "args[1]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "collatedIterator(java.util.Comparator comparator,java.util.Iterator[] iterators)",
    "name": "collatedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator[]",
          "name": "Iterator[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          }
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use, may be null for natural order",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator[]",
            "name": "Iterator[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Iterator",
              "name": "Iterator",
              "isArray": false
            }
          },
          "name": "iterators"
        },
        "comment": "the iterators to use, not null or empty or contain nulls",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false || args[1].length==0"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterators array is null or contains a null value",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "collatedIterator(java.util.Comparator comparator,java.util.Collection iterators)",
    "name": "collatedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use, may be null for natural order",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "iterators"
        },
        "comment": "the iterators to use, not null or empty or contain nulls",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false || args[1].isEmpty() || args[1].contains(null)"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterators collection is null or contains a null",
        "kind": "THROWS",
        "condition": "args[1]==null || args[1].contains(null)"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterators collection contains the wrong object type",
        "kind": "THROWS",
        "condition": "args[1].contains(java.lang.Object)"
      }
    ]
  },
  {
    "signature": "objectGraphIterator(java.lang.Object root,org.apache.commons.collections4.Transformer transformer)",
    "name": "objectGraphIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "root"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "root"
        },
        "comment": "the root object to start iterating from, null results in an empty iterator",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer to use, see above, null uses no effect transformer",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new object graph iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "transformedIterator(java.util.Iterator iterator,org.apache.commons.collections4.Transformer transform)",
    "name": "transformedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transform"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transform"
        },
        "comment": "the transform to use, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new transforming iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "filteredIterator(java.util.Iterator iterator,org.apache.commons.collections4.Predicate predicate)",
    "name": "filteredIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use as a filter, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new filtered iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "filteredListIterator(java.util.ListIterator listIterator,org.apache.commons.collections4.Predicate predicate)",
    "name": "filteredListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.ListIterator",
          "name": "ListIterator",
          "isArray": false
        },
        "name": "listIterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.ListIterator",
            "name": "ListIterator",
            "isArray": false
          },
          "name": "listIterator"
        },
        "comment": "the list iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use as a filter, not null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new filtered iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "loopingIterator(java.util.Collection coll)",
    "name": "loopingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator",
      "name": "ResettableIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to iterate over, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new looping iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the collection is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "loopingListIterator(java.util.List list)",
    "name": "loopingListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator",
      "name": "ResettableListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "list"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "list"
        },
        "comment": "the list to iterate over, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new looping iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the list is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "nodeListIterator(org.w3c.dom.NodeList nodeList)",
    "name": "nodeListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.NodeList",
          "name": "NodeList",
          "isArray": false
        },
        "name": "nodeList"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.NodeList",
            "name": "NodeList",
            "isArray": false
          },
          "name": "nodeList"
        },
        "comment": "the node list to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, single use Iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if nodeList is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "nodeListIterator(org.w3c.dom.Node node)",
    "name": "nodeListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "NodeListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, single use Iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if node is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "peekingIterator(java.util.Iterator iterator)",
    "name": "peekingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a peeking iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "pushbackIterator(java.util.Iterator iterator)",
    "name": "pushbackIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a pushback iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "skippingIterator(java.util.Iterator iterator,long offset)",
    "name": "skippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.SkippingIterator",
      "name": "SkippingIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the first number of elements to skip",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new skipping iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if offset is negative",
        "kind": "THROWS",
        "condition": "args[1]<0"
      }
    ]
  },
  {
    "signature": "zippingIterator(java.util.Iterator a,java.util.Iterator b)",
    "name": "zippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ZippingIterator",
      "name": "ZippingIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the first iterator to interleave",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second iterator to interleave",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator, interleaving the decorated iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "zippingIterator(java.util.Iterator a,java.util.Iterator b,java.util.Iterator c)",
    "name": "zippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ZippingIterator",
      "name": "ZippingIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the first iterator to interleave",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second iterator to interleave",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "the third iterator to interleave",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator, interleaving the decorated iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "zippingIterator(java.util.Iterator[] iterators)",
    "name": "zippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ZippingIterator",
      "name": "ZippingIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator[]",
          "name": "Iterator[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          }
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator[]",
            "name": "Iterator[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.util.Iterator",
              "name": "Iterator",
              "isArray": false
            }
          },
          "name": "iterators"
        },
        "comment": "the array of iterators to interleave",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator, interleaving the decorated iterators",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if any iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asIterator(java.util.Enumeration enumeration)",
    "name": "asIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Enumeration",
          "name": "Enumeration",
          "isArray": false
        },
        "name": "enumeration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Enumeration",
            "name": "Enumeration",
            "isArray": false
          },
          "name": "enumeration"
        },
        "comment": "the enumeration to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if enumeration is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asIterator(java.util.Enumeration enumeration,java.util.Collection removeCollection)",
    "name": "asIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Enumeration",
          "name": "Enumeration",
          "isArray": false
        },
        "name": "enumeration"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "removeCollection"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Enumeration",
            "name": "Enumeration",
            "isArray": false
          },
          "name": "enumeration"
        },
        "comment": "the enumeration to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "removeCollection"
        },
        "comment": "the collection to remove elements from, may not be null",
        "kind": "PARAM",
        "condition": "(args[1].remove(java.lang.Object)) || ((args[1]==null) == false)"
      }
    ],
    "returnTag": {
      "comment": "a new iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if enumeration or removeCollection is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "asEnumeration(java.util.Iterator iterator)",
    "name": "asEnumeration",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration",
      "name": "Enumeration",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new enumeration",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asIterable(java.util.Iterator iterator)",
    "name": "asIterable",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, single use Iterable",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asMultipleUseIterable(java.util.Iterator iterator)",
    "name": "asMultipleUseIterable",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable",
      "name": "Iterable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, multiple use iterable",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toListIterator(java.util.Iterator iterator)",
    "name": "toListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toArray(java.util.Iterator iterator)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "an array of the iterator contents",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toArray(java.util.Iterator iterator,java.lang.Class arrayClass)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E[]",
      "name": "E[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "E",
        "name": "E",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "arrayClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "arrayClass"
        },
        "comment": "the class of array to create",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array of the iterator contents",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[1])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator parameter or arrayClass is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ArrayStoreException",
          "name": "ArrayStoreException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the arrayClass is invalid",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toList(java.util.Iterator iterator)",
    "name": "toList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a list of the iterator contents",
      "kind": "RETURN",
      "condition": "true ? result.equals(org.apache.commons.collections4.IteratorUtils.toListIterator())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toList(java.util.Iterator iterator,int estimatedSize)",
    "name": "toList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List",
      "name": "List",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "estimatedSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, not null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "estimatedSize"
        },
        "comment": "the initial size of the ArrayList",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list of the iterator contents",
      "kind": "RETURN",
      "condition": "true ? result.equals(org.apache.commons.collections4.IteratorUtils.get())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if iterator parameter is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the size is less than 1",
        "kind": "THROWS",
        "condition": "args[1]<1"
      }
    ]
  },
  {
    "signature": "getIterator(java.lang.Object obj)",
    "name": "getIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to convert to an iterator",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a suitable iterator, never null",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "forEach(java.util.Iterator iterator,org.apache.commons.collections4.Closure closure)",
    "name": "forEach",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to apply to each element, may not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if closure is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "forEachButLast(java.util.Iterator iterator,org.apache.commons.collections4.Closure closure)",
    "name": "forEachButLast",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to get the input from, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to perform, may not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the last element in the iterator, or null if iterator is null or empty",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if closure is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "find(java.util.Iterator iterator,org.apache.commons.collections4.Predicate predicate)",
    "name": "find",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to search, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the first element of the iterator which matches the predicate or null if none could be found",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if predicate is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "indexOf(java.util.Iterator iterator,org.apache.commons.collections4.Predicate predicate)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to search, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the index of the first element which matches the predicate or -1 if none matches",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if predicate is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "matchesAny(java.util.Iterator iterator,org.apache.commons.collections4.Predicate predicate)",
    "name": "matchesAny",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the Iterator to use, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if any element of the collection matches the predicate, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if predicate is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "matchesAll(java.util.Iterator iterator,org.apache.commons.collections4.Predicate predicate)",
    "name": "matchesAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the Iterator to use, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use, may not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if every element of the collection matches the predicate or if the collection is empty, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if predicate is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "isEmpty(java.util.Iterator iterator)",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the Iterator to use, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the iterator is exhausted or null, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(java.util.Iterator iterator,java.lang.Object object)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to check, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the object is contained in the iterator, false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "get(java.util.Iterator iterator,int index)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to get a value from",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to get",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the object at the specified index",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the index is invalid",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "size(java.util.Iterator iterator)",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to check, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the number of elements contained in the iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.util.Iterator iterator)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to convert to a string, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of iterator",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.toString())"
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.util.Iterator iterator,org.apache.commons.collections4.Transformer transformer)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to convert to a string, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer used to get a string representation of an element",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of iterator",
      "kind": "RETURN",
      "condition": "true ? result.equals(org.apache.commons.collections4.IteratorUtils.toString())"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "transformer"
        ],
        "comment": "if transformer is null",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "toString(java.util.Iterator iterator,org.apache.commons.collections4.Transformer transformer,java.lang.String delimiter,java.lang.String prefix,java.lang.String suffix)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "delimiter"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "suffix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to convert to a string, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer used to get a string representation of an element",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "delimiter"
        },
        "comment": "the string to delimit elements",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "prefix"
        },
        "comment": "the prefix, prepended to the string representation",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "suffix"
        },
        "comment": "the suffix, appended to the string representation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of iterator",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[2])"
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either transformer, delimiter, prefix or suffix is null",
        "kind": "THROWS",
        "condition": "args[1]==null || args[2]==null || args[3]==null || args[4]==null"
      }
    ]
  }
]