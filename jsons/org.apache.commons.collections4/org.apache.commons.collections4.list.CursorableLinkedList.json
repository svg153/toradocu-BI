[
  {
    "signature": "CursorableLinkedList()",
    "name": "CursorableLinkedList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "CursorableLinkedList(java.util.Collection coll)",
    "name": "CursorableLinkedList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to copy",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "init()",
    "name": "init",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new iterator that does not support concurrent modification",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "listIterator()",
    "name": "listIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new cursor iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "listIterator(int fromIndex)",
    "name": "listIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "fromIndex"
        },
        "comment": "the index to start from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new cursor iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cursor()",
    "name": "cursor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList.Cursor",
      "name": "Cursor",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new cursor iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cursor(int fromIndex)",
    "name": "cursor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList.Cursor",
      "name": "Cursor",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "fromIndex"
        },
        "comment": "the index to start from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new cursor iterator",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the index is out of range (index < 0 || index > size()).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "updateNode(org.apache.commons.collections4.list.AbstractLinkedList.Node node,java.lang.Object value)",
    "name": "updateNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "node to update",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "new value of the node",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node nodeToInsert,org.apache.commons.collections4.list.AbstractLinkedList.Node insertBeforeNode)",
    "name": "addNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "nodeToInsert"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "insertBeforeNode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "nodeToInsert"
        },
        "comment": "new node to insert",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "insertBeforeNode"
        },
        "comment": "node to insert before",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if either node is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node node)",
    "name": "removeNode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node to remove",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "node"
        ],
        "comment": "if node is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "removeAllNodes()",
    "name": "removeAllNodes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "registerCursor(org.apache.commons.collections4.list.CursorableLinkedList.Cursor cursor)",
    "name": "registerCursor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList.Cursor",
          "name": "Cursor",
          "isArray": false
        },
        "name": "cursor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList.Cursor",
            "name": "Cursor",
            "isArray": false
          },
          "name": "cursor"
        },
        "comment": "the cursor to register",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "unregisterCursor(org.apache.commons.collections4.list.CursorableLinkedList.Cursor cursor)",
    "name": "unregisterCursor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList.Cursor",
          "name": "Cursor",
          "isArray": false
        },
        "name": "cursor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList.Cursor",
            "name": "Cursor",
            "isArray": false
          },
          "name": "cursor"
        },
        "comment": "the cursor to deregister",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node node)",
    "name": "broadcastNodeChanged",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node that was changed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node node)",
    "name": "broadcastNodeRemoved",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node that was changed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node node)",
    "name": "broadcastNodeInserted",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node that was changed",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList subList,int fromIndex)",
    "name": "createSubListListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.list.CursorableLinkedList",
      "name": "CursorableLinkedList",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.list.CursorableLinkedList",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator",
      "name": "ListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList",
          "name": "LinkedSubList",
          "isArray": false
        },
        "name": "subList"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fromIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList",
            "name": "LinkedSubList",
            "isArray": false
          },
          "name": "subList"
        },
        "comment": "the sublist to get an iterator for",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "fromIndex"
        },
        "comment": "the index to start from, relative to the sublist",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the list iterator for the sublist",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]