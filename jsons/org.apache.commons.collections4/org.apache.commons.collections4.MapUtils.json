[
  {
    "signature": "getObject(java.util.Map map,java.lang.Object key)",
    "name": "getObject",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getString(java.util.Map map,java.lang.Object key)",
    "name": "getString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a String, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBoolean(java.util.Map map,java.lang.Object key)",
    "name": "getBoolean",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Boolean",
      "name": "Boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Boolean, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNumber(java.util.Map map,java.lang.Object key)",
    "name": "getNumber",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Number, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getByte(java.util.Map map,java.lang.Object key)",
    "name": "getByte",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Byte",
      "name": "Byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Byte, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getShort(java.util.Map map,java.lang.Object key)",
    "name": "getShort",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Short",
      "name": "Short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Short, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getInteger(java.util.Map map,java.lang.Object key)",
    "name": "getInteger",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Integer, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLong(java.util.Map map,java.lang.Object key)",
    "name": "getLong",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Long, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFloat(java.util.Map map,java.lang.Object key)",
    "name": "getFloat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Float",
      "name": "Float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Float, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDouble(java.util.Map map,java.lang.Object key)",
    "name": "getDouble",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Double, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMap(java.util.Map map,java.lang.Object key)",
    "name": "getMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Map, null if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getObject(java.util.Map map,java.lang.Object key,java.lang.Object defaultValue)",
    "name": "getObject",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map, or defaultValue if the original value is null or the map is null",
      "kind": "RETURN",
      "condition": "args[2]==null || args[0]==null ? result.equals(args[2])"
    },
    "throwsTags": []
  },
  {
    "signature": "getString(java.util.Map map,java.lang.Object key,java.lang.String defaultValue)",
    "name": "getString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a string, or defaultValue if the original value is null, the map is null or the string conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getBoolean(java.util.Map map,java.lang.Object key,java.lang.Boolean defaultValue)",
    "name": "getBoolean",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Boolean",
      "name": "Boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Boolean",
          "name": "Boolean",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Boolean",
            "name": "Boolean",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a boolean, or defaultValue if the original value is null, the map is null or the boolean conversion fails",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNumber(java.util.Map map,java.lang.Object key,java.lang.Number defaultValue)",
    "name": "getNumber",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Number",
          "name": "Number",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Number",
            "name": "Number",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getByte(java.util.Map map,java.lang.Object key,java.lang.Byte defaultValue)",
    "name": "getByte",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Byte",
      "name": "Byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Byte",
          "name": "Byte",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Byte",
            "name": "Byte",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getShort(java.util.Map map,java.lang.Object key,java.lang.Short defaultValue)",
    "name": "getShort",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Short",
      "name": "Short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Short",
          "name": "Short",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Short",
            "name": "Short",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getInteger(java.util.Map map,java.lang.Object key,java.lang.Integer defaultValue)",
    "name": "getInteger",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getLong(java.util.Map map,java.lang.Object key,java.lang.Long defaultValue)",
    "name": "getLong",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Long",
          "name": "Long",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Long",
            "name": "Long",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getFloat(java.util.Map map,java.lang.Object key,java.lang.Float defaultValue)",
    "name": "getFloat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Float",
      "name": "Float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Float",
          "name": "Float",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Float",
            "name": "Float",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getDouble(java.util.Map map,java.lang.Object key,java.lang.Double defaultValue)",
    "name": "getDouble",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Double",
          "name": "Double",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Double",
            "name": "Double",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the number conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getMap(java.util.Map map,java.lang.Object key,java.util.Map defaultValue)",
    "name": "getMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose value to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key of the value to look up in that map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "what to return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "the value in the map as a number, or defaultValue if the original value is null, the map is null or the map conversion fails",
      "kind": "RETURN",
      "condition": "args[2]==null ? result.equals(args[2]) : result == args[0]"
    },
    "throwsTags": []
  },
  {
    "signature": "getBooleanValue(java.util.Map map,java.lang.Object key)",
    "name": "getBooleanValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Boolean, false if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getByteValue(java.util.Map map,java.lang.Object key)",
    "name": "getByteValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte",
      "name": "byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a byte, 0 if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getShortValue(java.util.Map map,java.lang.Object key)",
    "name": "getShortValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short",
      "name": "short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a short, 0 if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIntValue(java.util.Map map,java.lang.Object key)",
    "name": "getIntValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as an int, 0 if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLongValue(java.util.Map map,java.lang.Object key)",
    "name": "getLongValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a long, 0L if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFloatValue(java.util.Map map,java.lang.Object key)",
    "name": "getFloatValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a float, 0.0F if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDoubleValue(java.util.Map map,java.lang.Object key)",
    "name": "getDoubleValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a double, 0.0 if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getBooleanValue(java.util.Map map,java.lang.Object key,boolean defaultValue)",
    "name": "getBooleanValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a Boolean, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getByteValue(java.util.Map map,java.lang.Object key,byte defaultValue)",
    "name": "getByteValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte",
      "name": "byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a byte, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getShortValue(java.util.Map map,java.lang.Object key,short defaultValue)",
    "name": "getShortValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short",
      "name": "short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a short, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getIntValue(java.util.Map map,java.lang.Object key,int defaultValue)",
    "name": "getIntValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as an int, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLongValue(java.util.Map map,java.lang.Object key,long defaultValue)",
    "name": "getLongValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a long, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFloatValue(java.util.Map map,java.lang.Object key,float defaultValue)",
    "name": "getFloatValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a float, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDoubleValue(java.util.Map map,java.lang.Object key,double defaultValue)",
    "name": "getDoubleValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to use",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to look up",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "return if the value is null or if the conversion fails",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value in the Map as a double, defaultValue if null map input",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toProperties(java.util.Map map)",
    "name": "toProperties",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Properties",
      "name": "Properties",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to convert to a Properties object",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the properties object",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null"
        ],
        "comment": "if a key or value in the provided map is null",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toMap(java.util.ResourceBundle resourceBundle)",
    "name": "toMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.ResourceBundle",
          "name": "ResourceBundle",
          "isArray": false
        },
        "name": "resourceBundle"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.ResourceBundle",
            "name": "ResourceBundle",
            "isArray": false
          },
          "name": "resourceBundle"
        },
        "comment": "the resource bundle to convert, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the hashmap containing the data",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the bundle is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "verbosePrint(java.io.PrintStream out,java.lang.Object label,java.util.Map map)",
    "name": "verbosePrint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.PrintStream",
          "name": "PrintStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "label"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.PrintStream",
            "name": "PrintStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "the stream to print to, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "label"
        },
        "comment": "The label to be used, may be null. If null, the label is not output. It typically represents the name of the property in a bean or similar.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "The map to print, may be null. If null, the text 'null' is output.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null"
        ],
        "comment": "if the stream is null",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "debugPrint(java.io.PrintStream out,java.lang.Object label,java.util.Map map)",
    "name": "debugPrint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.PrintStream",
          "name": "PrintStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "label"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.PrintStream",
            "name": "PrintStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "the stream to print to, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "label"
        },
        "comment": "The label to be used, may be null. If null, the label is not output. It typically represents the name of the property in a bean or similar.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "The map to print, may be null. If null, the text 'null' is output.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [
          "null"
        ],
        "comment": "if the stream is null",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "invertMap(java.util.Map map)",
    "name": "invertMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to invert, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new HashMap containing the inverted data",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "safeAddToMap(java.util.Map map,java.lang.Object key,java.lang.Object value)",
    "name": "safeAddToMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to add to, may not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value, null converted to \"\"",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "putAll(java.util.Map map,java.lang.Object[] array)",
    "name": "putAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to populate, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "array"
        },
        "comment": "an array to populate from, null ignored",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the input map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if sub-array or entry matching used and an entry is invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the array contents is mixed",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "emptyIfNull(java.util.Map map)",
    "name": "emptyIfNull",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map, possibly null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an empty map if the argument is null",
      "kind": "RETURN",
      "condition": "result==null"
    },
    "throwsTags": []
  },
  {
    "signature": "isEmpty(java.util.Map map)",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to check, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if empty or null",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNotEmpty(java.util.Map map)",
    "name": "isNotEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to check, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if non-null and non-empty",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "synchronizedMap(java.util.Map map)",
    "name": "synchronizedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to synchronize, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a synchronized map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unmodifiableMap(java.util.Map map)",
    "name": "unmodifiableMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "Map",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to make unmodifiable, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "an unmodifiable map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "predicatedMap(java.util.Map map,org.apache.commons.collections4.Predicate keyPred,org.apache.commons.collections4.Predicate valuePred)",
    "name": "predicatedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableMap",
      "name": "IterableMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "keyPred"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "valuePred"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to predicate, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "keyPred"
        },
        "comment": "the predicate for keys, null means no check",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "valuePred"
        },
        "comment": "the predicate for values, null means no check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a predicated map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "transformedMap(java.util.Map map,org.apache.commons.collections4.Transformer keyTransformer,org.apache.commons.collections4.Transformer valueTransformer)",
    "name": "transformedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableMap",
      "name": "IterableMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "valueTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to transform, must not be null, typically empty",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the transformer for the map keys, null means no transformation",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "valueTransformer"
        },
        "comment": "the transformer for the map values, null means no transformation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a transformed map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "fixedSizeMap(java.util.Map map)",
    "name": "fixedSizeMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableMap",
      "name": "IterableMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose size to fix, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a fixed-size map backed by that map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "lazyMap(java.util.Map map,org.apache.commons.collections4.Factory factory)",
    "name": "lazyMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableMap",
      "name": "IterableMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Factory",
          "name": "Factory",
          "isArray": false
        },
        "name": "factory"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to make lazy, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Factory",
            "name": "Factory",
            "isArray": false
          },
          "name": "factory"
        },
        "comment": "the factory for creating new objects, must not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a lazy map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map or Factory is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "lazyMap(java.util.Map map,org.apache.commons.collections4.Transformer transformerFactory)",
    "name": "lazyMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableMap",
      "name": "IterableMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformerFactory"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to make lazy, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformerFactory"
        },
        "comment": "the factory for creating new objects, must not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a lazy map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map or Transformer is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "orderedMap(java.util.Map map)",
    "name": "orderedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.OrderedMap",
      "name": "OrderedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to order, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "an ordered map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "multiValueMap(java.util.Map map)",
    "name": "multiValueMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.MultiValueMap",
      "name": "MultiValueMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to decorate",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a multi-value map backed by the given map which returns ArrayLists of values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "multiValueMap(java.util.Map map,java.lang.Class collectionClass)",
    "name": "multiValueMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.MultiValueMap",
      "name": "MultiValueMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "collectionClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to decorate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "collectionClass"
        },
        "comment": "the type of collections to return from the map (must contain public no-arg constructor and extend Collection)",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a multi-value map backed by the given map which returns collections of the specified type",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "multiValueMap(java.util.Map map,org.apache.commons.collections4.Factory collectionFactory)",
    "name": "multiValueMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.map.MultiValueMap",
      "name": "MultiValueMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Factory",
          "name": "Factory",
          "isArray": false
        },
        "name": "collectionFactory"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to decorate",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Factory",
            "name": "Factory",
            "isArray": false
          },
          "name": "collectionFactory"
        },
        "comment": "a factor which creates collection objects",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a multi-value map backed by the given map which returns collections created by the specified collection factory",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "synchronizedSortedMap(java.util.SortedMap map)",
    "name": "synchronizedSortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to synchronize, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a synchronized map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "unmodifiableSortedMap(java.util.SortedMap map)",
    "name": "unmodifiableSortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the sorted map to make unmodifiable, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "an unmodifiable map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "predicatedSortedMap(java.util.SortedMap map,org.apache.commons.collections4.Predicate keyPred,org.apache.commons.collections4.Predicate valuePred)",
    "name": "predicatedSortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "keyPred"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "valuePred"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to predicate, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "keyPred"
        },
        "comment": "the predicate for keys, null means no check",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "valuePred"
        },
        "comment": "the predicate for values, null means no check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a predicated map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the SortedMap is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "transformedSortedMap(java.util.SortedMap map,org.apache.commons.collections4.Transformer keyTransformer,org.apache.commons.collections4.Transformer valueTransformer)",
    "name": "transformedSortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "valueTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to transform, must not be null, typically empty",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the transformer for the map keys, null means no transformation",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "valueTransformer"
        },
        "comment": "the transformer for the map values, null means no transformation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a transformed map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the SortedMap is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "fixedSizeSortedMap(java.util.SortedMap map)",
    "name": "fixedSizeSortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map whose size to fix, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a fixed-size map backed by that map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the SortedMap is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "lazySortedMap(java.util.SortedMap map,org.apache.commons.collections4.Factory factory)",
    "name": "lazySortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Factory",
          "name": "Factory",
          "isArray": false
        },
        "name": "factory"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to make lazy, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Factory",
            "name": "Factory",
            "isArray": false
          },
          "name": "factory"
        },
        "comment": "the factory for creating new objects, must not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a lazy map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the SortedMap or Factory is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "lazySortedMap(java.util.SortedMap map,org.apache.commons.collections4.Transformer transformerFactory)",
    "name": "lazySortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedMap",
      "name": "SortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformerFactory"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to make lazy, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformerFactory"
        },
        "comment": "the factory for creating new objects, must not be null",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a lazy map backed by the given map",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the Map or Transformer is null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "populateMap(java.util.Map map,java.lang.Iterable elements,org.apache.commons.collections4.Transformer keyTransformer)",
    "name": "populateMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the Map to populate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "elements"
        },
        "comment": "the Iterable containing the input values for the map.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the Transformer used to transform the element into a key value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map, elements or transformer are null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "populateMap(java.util.Map map,java.lang.Iterable elements,org.apache.commons.collections4.Transformer keyTransformer,org.apache.commons.collections4.Transformer valueTransformer)",
    "name": "populateMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "valueTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the Map to populate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "elements"
        },
        "comment": "the Iterable containing the input values for the map.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the Transformer used to transform the element into a key value",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "valueTransformer"
        },
        "comment": "the Transformer used to transform the element into a value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map, elements or transformers are null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[2]==null || args[3]==null"
      }
    ]
  },
  {
    "signature": "populateMap(org.apache.commons.collections4.MultiMap map,java.lang.Iterable elements,org.apache.commons.collections4.Transformer keyTransformer)",
    "name": "populateMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiMap",
          "name": "MultiMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiMap",
            "name": "MultiMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiMap to populate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "elements"
        },
        "comment": "the Iterable to use as input values for the map.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the Transformer used to transform the element into a key value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map, elements or transformer are null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "populateMap(org.apache.commons.collections4.MultiMap map,java.lang.Iterable elements,org.apache.commons.collections4.Transformer keyTransformer,org.apache.commons.collections4.Transformer valueTransformer)",
    "name": "populateMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MultiMap",
          "name": "MultiMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "keyTransformer"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "valueTransformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MultiMap",
            "name": "MultiMap",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the MultiMap to populate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Iterable",
            "name": "Iterable",
            "isArray": false
          },
          "name": "elements"
        },
        "comment": "the Iterable containing the input values for the map.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "keyTransformer"
        },
        "comment": "the Transformer used to transform the element into a key value",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "valueTransformer"
        },
        "comment": "the Transformer used to transform the element into a value",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map, collection or transformers are null",
        "kind": "THROWS",
        "condition": "args[0]==null || args[2]==null || args[3]==null"
      }
    ]
  },
  {
    "signature": "iterableMap(java.util.Map map)",
    "name": "iterableMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableMap",
      "name": "IterableMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "to wrap if necessary.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "IterableMap",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "iterableSortedMap(java.util.SortedMap sortedMap)",
    "name": "iterableSortedMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.MapUtils",
      "name": "MapUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.MapUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.IterableSortedMap",
      "name": "IterableSortedMap",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.SortedMap",
          "name": "SortedMap",
          "isArray": false
        },
        "name": "sortedMap"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.SortedMap",
            "name": "SortedMap",
            "isArray": false
          },
          "name": "sortedMap"
        },
        "comment": "to wrap if necessary",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "IterableSortedMap",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if sortedMap is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  }
]