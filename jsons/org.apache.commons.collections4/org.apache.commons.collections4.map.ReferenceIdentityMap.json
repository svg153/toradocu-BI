[
  {
    "signature": "ReferenceIdentityMap()",
    "name": "ReferenceIdentityMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength keyType,org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength valueType)",
    "name": "ReferenceIdentityMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "keyType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "valueType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "keyType"
        },
        "comment": "the type of reference to use for keys; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "valueType"
        },
        "comment": "the type of reference to use for values; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength keyType,org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength valueType,boolean purgeValues)",
    "name": "ReferenceIdentityMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "keyType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "valueType"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "purgeValues"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "keyType"
        },
        "comment": "the type of reference to use for keys; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "valueType"
        },
        "comment": "the type of reference to use for values; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "purgeValues"
        },
        "comment": "should the value be automatically purged when the key is garbage collected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength keyType,org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength valueType,int capacity,float loadFactor)",
    "name": "ReferenceIdentityMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "keyType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "valueType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "keyType"
        },
        "comment": "the type of reference to use for keys; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "valueType"
        },
        "comment": "the type of reference to use for values; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "capacity"
        },
        "comment": "the initial capacity for the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor for the map",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ReferenceIdentityMap(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength keyType,org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength valueType,int capacity,float loadFactor,boolean purgeValues)",
    "name": "ReferenceIdentityMap",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "keyType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
          "name": "ReferenceStrength",
          "isArray": false
        },
        "name": "valueType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "loadFactor"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "purgeValues"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "keyType"
        },
        "comment": "the type of reference to use for keys; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength",
            "name": "ReferenceStrength",
            "isArray": false
          },
          "name": "valueType"
        },
        "comment": "the type of reference to use for values; must be HARD, SOFT, WEAK",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "capacity"
        },
        "comment": "the initial capacity for the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "loadFactor"
        },
        "comment": "the load factor for the map",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "purgeValues"
        },
        "comment": "should the value be automatically purged when the key is garbage collected",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "hash(java.lang.Object key)",
    "name": "hash",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to get a hash code for",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the hash code",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.hashCode())"
    },
    "throwsTags": []
  },
  {
    "signature": "hashEntry(java.lang.Object key,java.lang.Object value)",
    "name": "hashEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "the key to get a hash code for, may be null",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to get a hash code for, may be null",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the hash code, as per the MapEntry specification",
      "kind": "RETURN",
      "condition": "true ? result.equals(target.get(java.lang.Object))"
    },
    "throwsTags": []
  },
  {
    "signature": "isEqualKey(java.lang.Object key1,java.lang.Object key2)",
    "name": "isEqualKey",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key1"
        },
        "comment": "the first key to compare passed in from outside",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "key2"
        },
        "comment": "the second key extracted from the entry via entry.key",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if equal by identity",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEqualValue(java.lang.Object value1,java.lang.Object value2)",
    "name": "isEqualValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "name": "ReferenceIdentityMap",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.ReferenceIdentityMap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value1"
        },
        "comment": "the first value to compare passed in from outside",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value2"
        },
        "comment": "the second value extracted from the entry via getValue()",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if equal by identity",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]