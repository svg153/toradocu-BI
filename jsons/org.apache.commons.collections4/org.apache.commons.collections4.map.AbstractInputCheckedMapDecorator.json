[
  {
    "signature": "AbstractInputCheckedMapDecorator()",
    "name": "AbstractInputCheckedMapDecorator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
      "name": "AbstractInputCheckedMapDecorator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "AbstractInputCheckedMapDecorator(java.util.Map map)",
    "name": "AbstractInputCheckedMapDecorator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
      "name": "AbstractInputCheckedMapDecorator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "map"
        },
        "comment": "the map to decorate, must not be null",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if map is null",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "checkSetValue(java.lang.Object value)",
    "name": "checkSetValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
      "name": "AbstractInputCheckedMapDecorator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to check",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the map may not be changed by setValue",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified value is invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the class of the specified value is invalid",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exception": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if the specified value is null and nulls are invalid",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "isSetValueChecking()",
    "name": "isSetValueChecking",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
      "name": "AbstractInputCheckedMapDecorator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true always",
      "kind": "RETURN",
      "condition": "true ? result==true"
    },
    "throwsTags": []
  },
  {
    "signature": "entrySet()",
    "name": "entrySet",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
      "name": "AbstractInputCheckedMapDecorator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "Set",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]