[
  {
    "signature": "main(java.lang.String[] args)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "plume.Lookup",
      "name": "Lookup",
      "isArray": false
    },
    "targetClass": "plume.Lookup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "args"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "args"
        },
        "comment": "command-line arguments; see documentation",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading a file",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "old_get_entry(plume.EntryReader reader)",
    "name": "old_get_entry",
    "containingClass": {
      "qualifiedName": "plume.Lookup",
      "name": "Lookup",
      "isArray": false
    },
    "targetClass": "plume.Lookup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "plume.EntryReader.Entry",
      "name": "Entry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "plume.EntryReader",
          "name": "EntryReader",
          "isArray": false
        },
        "name": "reader"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "plume.EntryReader",
            "name": "EntryReader",
            "isArray": false
          },
          "name": "reader"
        },
        "comment": "where to read the entry from",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the next entry, or null",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exception": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "if there is a problem reading a file",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "first_line(java.lang.String entry)",
    "name": "first_line",
    "containingClass": {
      "qualifiedName": "plume.Lookup",
      "name": "Lookup",
      "isArray": false
    },
    "targetClass": "plume.Lookup",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "entry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "entry"
        },
        "comment": "the entry whose first line to return",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first line of entry",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]