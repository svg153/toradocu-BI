[
  {
    "signature": "internStrings(java.lang.String[] a)",
    "name": "internStrings",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "String[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.String",
        "name": "String",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the array whose elements to intern in place",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned version of a",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "isInterned(java.lang.Object value)",
    "name": "isInterned",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to test for interning",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true iff value is interned",
      "kind": "RETURN",
      "condition": "plume.Intern.isInterned(args[0]) ? result == true"
    },
    "throwsTags": []
  },
  {
    "signature": "numIntegers()",
    "name": "numIntegers",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numLongs()",
    "name": "numLongs",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numIntArrays()",
    "name": "numIntArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numLongArrays()",
    "name": "numLongArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numDoubles()",
    "name": "numDoubles",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numDoubleArrays()",
    "name": "numDoubleArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numStringArrays()",
    "name": "numStringArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "numObjectArrays()",
    "name": "numObjectArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "integers()",
    "name": "integers",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "longs()",
    "name": "longs",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "intArrays()",
    "name": "intArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "longArrays()",
    "name": "longArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doubles()",
    "name": "doubles",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doubleArrays()",
    "name": "doubleArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "stringArrays()",
    "name": "stringArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "objectArrays()",
    "name": "objectArrays",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "Iterator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.String a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the string to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned version of the argument",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "intern(long l)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "l"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "l"
        },
        "comment": "the long to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned version of the argument",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "intern(double d)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "the double to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned version of the argument",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.Integer a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an Integer to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the Integer",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internedInteger(int i)",
    "name": "internedInteger",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "i"
        },
        "comment": "the value to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned Integer with value i",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "internedInteger(java.lang.String s)",
    "name": "internedInteger",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "s"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "s"
        },
        "comment": "the string to parse",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned Integer parsed from s",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.Long a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Long",
          "name": "Long",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Long",
            "name": "Long",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the value to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the Long",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internedLong(long i)",
    "name": "internedLong",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "i"
        },
        "comment": "the value to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned Integer with value i",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "internedLong(java.lang.String s)",
    "name": "internedLong",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "s"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "s"
        },
        "comment": "the string to parse",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned Long parsed from s",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(int[] a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the array to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the int[] array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(long[] a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long[]",
      "name": "long[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "long",
        "name": "long",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the array to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the long[] array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.Double a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Double",
          "name": "Double",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Double",
            "name": "Double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "the Double to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the Double",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internedDouble(double d)",
    "name": "internedDouble",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "the value to intern",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned Double with value d",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "internedDouble(java.lang.String s)",
    "name": "internedDouble",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "s"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "s"
        },
        "comment": "the string to parse",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an interned Double parsed from s",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(double[] a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the array to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the double[] array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.String[] a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "String[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.String",
        "name": "String",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the array to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the String[] array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.Object[] a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "a"
        },
        "comment": "the array to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical representation for the Object[] array",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intern(java.lang.Object a)",
    "name": "intern",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "an Object to canonicalize",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a canonical version of a",
      "kind": "RETURN",
      "condition": "true ? result.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "internSubsequence(int[] seq,int start,int end)",
    "name": "internSubsequence",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "int",
        "name": "int",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int[]",
          "name": "int[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          }
        },
        "name": "seq"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int[]",
            "name": "int[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "int",
              "name": "int",
              "isArray": false
            }
          },
          "name": "seq"
        },
        "comment": "the sequence whose subsequence should be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the start of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the end of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subsequence of seq from start to end that is interned",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internSubsequence(long[] seq,int start,int end)",
    "name": "internSubsequence",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long[]",
      "name": "long[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "long",
        "name": "long",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long[]",
          "name": "long[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          }
        },
        "name": "seq"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long[]",
            "name": "long[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "long",
              "name": "long",
              "isArray": false
            }
          },
          "name": "seq"
        },
        "comment": "the sequence whose subsequence should be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the start of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the end of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subsequence of seq from start to end that is interned",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internSubsequence(double[] seq,int start,int end)",
    "name": "internSubsequence",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "double",
        "name": "double",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double[]",
          "name": "double[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          }
        },
        "name": "seq"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double[]",
            "name": "double[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "double",
              "name": "double",
              "isArray": false
            }
          },
          "name": "seq"
        },
        "comment": "the sequence whose subsequence should be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the start of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the end of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subsequence of seq from start to end that is interned",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internSubsequence(java.lang.Object[] seq,int start,int end)",
    "name": "internSubsequence",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "Object[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.Object",
        "name": "Object",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object[]",
          "name": "Object[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          }
        },
        "name": "seq"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object[]",
            "name": "Object[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.Object",
              "name": "Object",
              "isArray": false
            }
          },
          "name": "seq"
        },
        "comment": "the sequence whose subsequence should be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the start of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the end of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subsequence of seq from start to end that is interned",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "internSubsequence(java.lang.String[] seq,int start,int end)",
    "name": "internSubsequence",
    "containingClass": {
      "qualifiedName": "plume.Intern",
      "name": "Intern",
      "isArray": false
    },
    "targetClass": "plume.Intern",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "String[]",
      "isArray": true,
      "componentType": {
        "qualifiedName": "java.lang.String",
        "name": "String",
        "isArray": false
      }
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String[]",
          "name": "String[]",
          "isArray": true,
          "componentType": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          }
        },
        "name": "seq"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String[]",
            "name": "String[]",
            "isArray": true,
            "componentType": {
              "qualifiedName": "java.lang.String",
              "name": "String",
              "isArray": false
            }
          },
          "name": "seq"
        },
        "comment": "the sequence whose subsequence should be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index of the start of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index of the end of the subsequence to be interned",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a subsequence of seq from start to end that is interned",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]